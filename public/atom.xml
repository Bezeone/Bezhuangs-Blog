<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Bezhuang&#39;s Blog</title>
  
  <subtitle>庄之皓的博客网站</subtitle>
  <link href="http://blog.zhuangzhihao.top/atom.xml" rel="self"/>
  
  <link href="http://blog.zhuangzhihao.top/"/>
  <updated>2022-12-29T06:38:17.469Z</updated>
  <id>http://blog.zhuangzhihao.top/</id>
  
  <author>
    <name>Bezhuang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>代码随想录算法训练营第二天记录</title>
    <link href="http://blog.zhuangzhihao.top/%E7%AE%97%E6%B3%95%E8%AE%AD%E7%BB%83%E8%90%A5%E7%AC%AC%E4%BA%8C%E5%A4%A9/"/>
    <id>http://blog.zhuangzhihao.top/%E7%AE%97%E6%B3%95%E8%AE%AD%E7%BB%83%E8%90%A5%E7%AC%AC%E4%BA%8C%E5%A4%A9/</id>
    <published>2022-12-28T16:00:00.000Z</published>
    <updated>2022-12-29T06:38:17.469Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>在之前刷力扣的过程中，我每刷道题都是先看题解然后再去边写边看，很多内容根本没消化，在进度上欺骗自己，感觉之前刷的都忘了，能力没有什么提升，现在还是一道都不会做。所以这次报了卡哥的算法训练营，希望能够按计划地有效刷题。本次刷题，我用的是 Java 语言解题，有余力的话也可能会加上 C++ 的题解。以下是算法训练营第二天的刷题记录和思考笔记。</p></blockquote><span id="more"></span><h3 id="一、977-有序数组的平方"><a href="#一、977-有序数组的平方" class="headerlink" title="一、977 有序数组的平方"></a>一、977 有序数组的平方</h3><h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>给你一个按非递减顺序排序的整数数组 <code>nums</code>，返回每个数字的平方组成的新数组，要求也按非递减顺序排序。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [-4,-1,0,3,10]</span><br><span class="line">输出：[0,1,9,16,100]</span><br><span class="line">解释：平方后，数组变为 [16,1,0,9,100]</span><br><span class="line">排序后，数组变为 [0,1,9,16,100]</span><br></pre></td></tr></table></figure><h4 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h4><p>老规矩，用暴力排序开始美好的一天。先每个数平方，再调用 <code>ArrayList.sort()</code> 快速排序。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] sortedSquares(<span class="type">int</span>[] nums) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;nums.length; i++) &#123;</span><br><span class="line">            nums[i] = nums[i] * nums[i];</span><br><span class="line">        &#125;</span><br><span class="line">        Arrays.sort(nums);</span><br><span class="line">        <span class="keyword">return</span> nums;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数组其实是有序的， 显然，如果数组 <code>nums</code> 中的所有数都是非负数，那么将每个数平方后，数组仍然保持升序；如果数组 <code>nums</code> 中的所有数都是负数，那么将每个数平方后，数组会保持降序。那么数组平方的最大值就在数组的两端，不是最左边就是最右边，不可能是中间。此时可以考虑双指针法了，<code>i</code> 指向起始位置，<code>j</code> 指向终止位置。</p><p>定义一个新数组 <code>result</code>，和 <code>nums</code> 数组一样的大小，让 <code>pos</code> 指向 <code>result</code> 数组终止位置。如果 <code>nums[i] * nums[i] &lt; nums[j] * nums[j]</code>  那么 <code>result[k--] = nums[j] * nums[j];</code> 。如果 <code>nums[i] * nums[i] &gt;= nums[j] * nums[j]</code> 那么 <code>result[k--] = nums[i] * nums[i];</code> 。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[] sortedSquares(<span class="type">int</span>[] nums) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> nums.length;</span><br><span class="line">        <span class="type">int</span> result[] = <span class="keyword">new</span> <span class="title class_">int</span>[n];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>, j = n - <span class="number">1</span>, pos = n - <span class="number">1</span>; i &lt;= j;) &#123;</span><br><span class="line">            <span class="keyword">if</span> (nums[i] * nums[i] &gt; nums[j] * nums[j]) &#123;</span><br><span class="line">                result[pos] = nums[i] * nums[i];</span><br><span class="line">                i++;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                result[pos] = nums[j] * nums[j];</span><br><span class="line">                j--;</span><br><span class="line">            &#125;</span><br><span class="line">            pos--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二、209-长度最小的子数组"><a href="#二、209-长度最小的子数组" class="headerlink" title="二、209 长度最小的子数组"></a>二、209 长度最小的子数组</h3><h4 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h4><p>给定一个含有 <code>n</code> 个正整数的数组和一个正整数 <code>target</code>。找出该数组中满足其和 <code>≥ target</code> 的长度最小的连续子数组 <code>[numsl, numsl+1, ..., numsr-1, numsr]</code>，并返回其长度<strong>。</strong>如果不存在符合条件的子数组，返回 <code>0</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：target = 7, nums = [2,3,1,2,4,3]</span><br><span class="line">输出：2</span><br><span class="line">解释：子数组 [4,3] 是该条件下的长度最小的子数组。</span><br></pre></td></tr></table></figure><h4 id="解题思路-1"><a href="#解题思路-1" class="headerlink" title="解题思路"></a>解题思路</h4><p>暴力法超出时间限制。需要使用数组操作中另一个重要的方法：滑动窗口。所谓滑动窗口，就是不断的调节子序列的起始位置和终止位置，从而得出我们要想的结果。窗口就是满足其和 <code>≥ s</code> 的长度最小的连续子数组。如果当前窗口的值大于 <code>s</code> 了，窗口就要向前移动了（也就是该缩小了）。窗口的结束位置就是遍历数组的指针，也就是 <code>for</code> 循环里的索引。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">minSubArrayLen</span><span class="params">(<span class="type">int</span> s, <span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> Integer.MAX_VALUE;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> <span class="number">0</span>; right &lt; nums.length ; right++)&#123;</span><br><span class="line">            sum += nums[right];</span><br><span class="line">            <span class="keyword">while</span> (sum &gt;= s)&#123;</span><br><span class="line">                result = Math.min(result, right-left+<span class="number">1</span>);</span><br><span class="line">                sum -= nums[left];</span><br><span class="line">                left++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result == Integer.MAX_VALUE ? <span class="number">0</span> : result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三、59-螺旋矩阵-II"><a href="#三、59-螺旋矩阵-II" class="headerlink" title="三、59 螺旋矩阵 II"></a>三、59 螺旋矩阵 II</h3><h4 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a>题目</h4><p>给你一个正整数 <code>n</code> ，生成一个包含 <code>1</code> 到 <code>n2</code> 所有元素，且元素按顺时针顺序螺旋排列的 <code>n x n</code> 正方形矩阵 <code>matrix</code> 。</p><p><img src="https://assets.leetcode.com/uploads/2020/11/13/spiraln.jpg" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：n = 3</span><br><span class="line">输出：[[1,2,3],[8,9,4],[7,6,5]]</span><br></pre></td></tr></table></figure><h4 id="解题思路-2"><a href="#解题思路-2" class="headerlink" title="解题思路"></a>解题思路</h4><p>这道题目可以说在面试中出现频率较高的题目，本题并不涉及到什么算法，就是模拟过程，但却十分考察对代码的掌控能力。模拟顺时针画矩阵的过程：填充上行从左到右 -&gt; 填充右列从上到下 -&gt; 填充下行从右到左 -&gt; 填充左列从下到上，由外向内一圈一圈这么画下去。</p><p>同二分法相似，求解本题依然是要坚持循环不变量原则，每画一条边都要坚持一致的左闭右开，或者左开右闭的原则，这样这一圈才能按照统一的规则画下来。</p><p>生成一个 <code>n×n</code> 空矩阵 <code>result</code>，随后模拟整个向内环绕的填入过程。定义每次循环的开始点 <code>(start, start)</code>，和控制循环次数 <code>loop</code>，定义填充数字 <code>count</code>。当 <code>loop++ &lt; n / 2</code> 时，始终按照从左到右、从上到下、从右到左、从下到上填入顺序循环，每次填入后执行 <code>num += 1</code>，得到下一个需要填入的数字。然后更新边界，例如从左到右填完后，上边界 <code>t += 1</code>，相当于上边界向内缩 <code>1</code>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span>[][] generateMatrix(<span class="type">int</span> n) &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">loop</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span>[][] result = <span class="keyword">new</span> <span class="title class_">int</span>[n][n];</span><br><span class="line">        <span class="type">int</span> <span class="variable">start</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> i, j;</span><br><span class="line">        <span class="keyword">while</span> (loop++ &lt; n / <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (j = start; j &lt; n - loop; j++) &#123;</span><br><span class="line">                result[start][j] = count;</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (i = start; i &lt; n - loop; i++) &#123;</span><br><span class="line">                result[i][j] = count;</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (; j &gt;= loop; j--) &#123;</span><br><span class="line">                result[i][j] = count;</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (; i &gt;= loop; i--) &#123;</span><br><span class="line">                result[i][j] = count;</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">            start ++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (n % <span class="number">2</span> == <span class="number">1</span>) &#123;</span><br><span class="line">            result[start][start] = count;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结：对于正方形的二维教组只需要考虑转多少圈以及最后中间是否剩一个值， 如果剩一个一个值需要再转完圈后再单独加中间的值。另外转圈过程要保证坚持左闭右开或者左开方闭。对于矩形二维数组变成一维数组的情况，需要在较完图后单独考志最内圈剩的一行或者一列。</p><h3 id="四、数组的经典题目总结"><a href="#四、数组的经典题目总结" class="headerlink" title="四、数组的经典题目总结"></a>四、数组的经典题目总结</h3><p>在面试中，数组是必考的基础数据结构。其实数组的题目在思想上一般比较简单的，但是如果想高效，并不容易。之前一共做了五道经典数组题目，每一道题目都代表一个类型，一种思想，从二分法到双指针法，从滑动窗口到螺旋矩阵。</p><p>根据题目的数据量范围选择合适的算法，比如数据量是 <code>10^5</code>，那就只能使用 <code>O(nlogn)</code> 复杂度以下的算法了，使用 <code>O(n^2)</code> 是会超时的，而如果数据量只有 100 或者 1000，则可以果断的采用暴力方法（一般是 <code>O(n^2)</code>）进行求解。</p><p>二分法的最大优势是在于其时间复杂度是 <code>O(logn)</code>，因此看到有序数组都要第一时间反问自己是否可以使用二分法。</p><p>双指针法移除元素和二分法这两题之间是有点类似的，他们都是在不断缩小 <code>left</code> 和 <code>right</code> 之间的距离，每次需要判断的都是 <code>left</code> 和 <code>right</code> 之间的数是否满足特定条件。</p><p>滑动窗口的本质是满足了单调性，即左右指针只会往一个方向走且不会回头。滑动窗口收缩的本质就是去掉不再需要的元素，也就是我们可以先固定移动右指针，通过判断条件是否可以收缩左指针算范围。</p><p>关于螺旋矩阵，可以同时看一下<a href="https://leetcode.cn/problems/spiral-matrix-ii/solution/spiral-matrix-ii-mo-ni-fa-she-ding-bian-jie-qing-x/">力扣上最高评的题解</a>，代码更简洁。</p><p><img src="https://pic.leetcode-cn.com/ccff416fa39887c938d36fec8e490e1861813d3bba7836eda941426f13420759-Picture1.png" alt></p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;在之前刷力扣的过程中，我每刷道题都是先看题解然后再去边写边看，很多内容根本没消化，在进度上欺骗自己，感觉之前刷的都忘了，能力没有什么提升，现在还是一道都不会做。所以这次报了卡哥的算法训练营，希望能够按计划地有效刷题。本次刷题，我用的是 Java 语言解题，有余力的话也可能会加上 C++ 的题解。以下是算法训练营第二天的刷题记录和思考笔记。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="算法与数据结构" scheme="http://blog.zhuangzhihao.top/categories/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="LeetCode" scheme="http://blog.zhuangzhihao.top/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>代码随想录算法训练营第一天记录</title>
    <link href="http://blog.zhuangzhihao.top/%E7%AE%97%E6%B3%95%E8%AE%AD%E7%BB%83%E8%90%A5%E7%AC%AC%E4%B8%80%E5%A4%A9/"/>
    <id>http://blog.zhuangzhihao.top/%E7%AE%97%E6%B3%95%E8%AE%AD%E7%BB%83%E8%90%A5%E7%AC%AC%E4%B8%80%E5%A4%A9/</id>
    <published>2022-12-27T16:00:00.000Z</published>
    <updated>2022-12-28T08:18:59.027Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>在之前刷力扣的过程中，我每刷道题都是先看题解然后再去边写边看，很多内容根本没消化，在进度上欺骗自己，感觉之前刷的都忘了，能力没有什么提升，现在还是一道都不会做。所以这次报了卡哥的算法训练营，希望能够按计划地有效刷题。本次刷题，我用的是 Java 语言解题，有余力的话也可能会加上 C++ 的题解。以下是算法训练营第一天的刷题记录和思考笔记。</p></blockquote><span id="more"></span><h3 id="一、数组理论基础"><a href="#一、数组理论基础" class="headerlink" title="一、数组理论基础"></a>一、数组理论基础</h3><p>数组是存放在连续内存空间上的相同类型数据的集合，数据可以方便地通过下标索引（从 0 开始）的方式获取到下标下对应的数据，数组内存空间的地址是连续的。</p><p>正是因为数组的在内存空间的地址是连续的，所以我们在删除或者增添元素的时候，就难免要移动其他元素的地址。数组的元素是不能删的，只能覆盖，例如删除下标为 3 的元素，需要对下标为 3 的元素后面的所有元素都要做向前移动 1 位的操作。</p><p>如果使用 C++ 的话，要注意 <code>vector</code> 和 <code>array</code> 的区别，<code>vector</code> 的底层实现是 <code>array</code>，严格来讲 <code>vector</code> 是容器，不是数组。</p><p>对于二维数组：</p><p><img src="https://blog.zhuangzhihao.top/img/卡哥训练营01.png" alt></p><p>不同编程语言的内存管理是不一样的，在 C++ 中二维数组在内存的空间地址是连续分布的。而像 Java 是没有指针的，同时也不对程序员暴露其元素的地址，寻址操作完全交给虚拟机，所以看不到每个元素的地址情况。</p><h3 id="二、704-二分查找"><a href="#二、704-二分查找" class="headerlink" title="二、704 二分查找"></a>二、704 二分查找</h3><h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>给定一个 <code>n</code> 个元素有序的（升序）整型数组 <code>nums</code> 和一个目标值 <code>target</code> ，写一个函数搜索 <code>nums</code> 中的 <code>target</code>，如果目标值存在返回下标，否则返回 <code>-1</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: nums = [-1,0,3,5,9,12], target = 9</span><br><span class="line">输出: 4</span><br><span class="line">解释: 9 出现在 nums 中并且下标为 4</span><br></pre></td></tr></table></figure><h4 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h4><p>首先，遍历数组查找是可以提交成功滴。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">search</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (nums[i] == target) &#123;</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后，回到二分法，即每次取区间中点将区间一分为二，根据需要留下其中一个小区间。</p><p>这道题目的前提是数组为有序数组，同时题目还强调数组中无重复元素，因为一旦有重复元素，使用二分查找法返回的元素下标可能不是唯一的，这些都是使用二分法的前提条件。</p><p>二分法经常写乱，主要是因为对区间的定义没有想清楚，区间的定义就是不变量。要在二分查找的过程中，保持不变量，就是在 while 寻找中每一次边界的处理都要坚持根据区间的定义来操作，这就是循环不变量规则。</p><p>写二分法，区间的定义一般为两种，左闭右闭即 <code>[left, right]</code>，或者左闭右开即 <code>[left, right)</code>。</p><p>左闭右闭的解法：</p><p>即 <code>[left, right]</code>，<code>while (left &lt;= right)</code> 要使用 <code>&lt;=</code> ，因为 <code>left == right</code> 是有意义的，所以使用 <code>&lt;=</code>。<code>if (nums[middle] &gt; target)</code>中，right 要赋值为 <code>middle - 1</code>，因为当前这个 <code>nums[middle]</code> 一定不是 target，那么接下来要查找的左区间结束下标位置就是 <code>middle - 1</code>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">search</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> nums.length - <span class="number">1</span>;    </span><br><span class="line">        <span class="keyword">while</span> ( left &lt;= right ) &#123;     </span><br><span class="line">            <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> left + ( right - left ) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span> (nums[mid] &lt; target)&#123;</span><br><span class="line">                left = mid + <span class="number">1</span>;  </span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &gt; target) &#123;</span><br><span class="line">                right = mid - <span class="number">1</span>; </span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> mid;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当然，最好在算法前先判断循环的区间是合法的区间，避免当 target 小于 <code>nums[0] nums[nums.length - 1]</code>时多次循环运算：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (target &lt; nums[<span class="number">0</span>] || target &gt; nums[nums.length - <span class="number">1</span>]) &#123;</span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>左闭右开的解法：</p><p>即 <code>[left, right)</code>，<code>while (left &lt; right)</code>，这里使用 &lt; ，因为 <code>left == right</code> 在区间 <code>[left, right)</code> 是没有意义的。<code>if (nums[middle] &gt; target) right</code> 更新为 middle，因为当前<code>nums[middle]</code>不等于 target，去左区间继续寻找，而寻找区间是左闭右开区间，所以 right 更新为 middle，即下一个查询区间不会去比较 <code>nums[middle]</code>。使用左闭右开内存消耗更低。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">search</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> nums.length;    </span><br><span class="line">        <span class="keyword">while</span> ( left &lt; right ) &#123;    </span><br><span class="line">            <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> left + ( right - left ) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span> (nums[mid] &lt; target)&#123;</span><br><span class="line">                left = mid + <span class="number">1</span>;   </span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (nums[mid] &gt; target) &#123;</span><br><span class="line">                right = mid;      </span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> mid;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三、27-移除元素"><a href="#三、27-移除元素" class="headerlink" title="三、27 移除元素"></a>三、27 移除元素</h3><h4 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h4><p>给你一个数组 <code>nums</code> 和一个值 <code>val</code>，你需要原地移除所有数值等于 <code>val</code> 的元素，并返回移除后数组的新长度。不要使用额外的数组空间，你必须仅使用 <code>O(1)</code> 额外空间并原地修改输入数组。元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = [3,2,2,3], val = 3</span><br><span class="line">输出：2, nums = [2,2]</span><br><span class="line">解释：函数应该返回新的长度 2, 并且 nums 中的前两个元素均为 2。你不需要考虑数组中超出新长度后面的元素。例如，函数返回的新长度为 2 ，而 nums = [2,2,3,3] 或 nums = [2,2,0,0]，也会被视作正确答案。</span><br></pre></td></tr></table></figure><h4 id="解题思路-1"><a href="#解题思路-1" class="headerlink" title="解题思路"></a>解题思路</h4><p>首先，暴力破解当然可以，就是两层 for 循环，一个 for 循环遍历数组元素 ，第二个 for 循环更新数组。虽然时间复杂度是 <code>O(n^2)</code>，但是空间复杂度依然是 <code>O(1)</code>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">removeElement</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> val)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> nums.length;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (nums[i] == val)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i; j+<span class="number">1</span> &lt; n; j++) &#123;</span><br><span class="line">                    nums[j] = nums[j+<span class="number">1</span>];</span><br><span class="line">                &#125;</span><br><span class="line">                i--;</span><br><span class="line">                n--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> n;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当然双指针法才是本题的精髓，由于题目要求删除数组中等于 val 的元素，因此输出数组的长度一定小于等于输入数组的长度，我们可以把输出的数组直接写在输入数组上。可以使用双指针：右指针 right 指向当前将要处理的元素，左指针 left 指向下一个将要赋值的位置。</p><p>如果右指针指向的元素不等于 val，它一定是输出数组的一个元素，我们就将右指针指向的元素复制到左指针位置，然后将左右指针同时右移；如果右指针指向的元素等于 val，它不能在输出数组里，此时左指针不动，右指针右移一位。当左右指针遍历完输入数组以后，left 的值就是输出数组的长度，时间复杂度为 O(n)，空间复杂度为 O(1)。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">removeElement</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> val)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> <span class="number">0</span>; right &lt; nums.length; right++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (nums[right] != val) &#123;</span><br><span class="line">                nums[left] = nums[right];</span><br><span class="line">                left++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> left;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果要移除的元素恰好在数组的开头，例如序列 <code>[1,2,3,4,5]</code>，当 val 为 1 时，我们需要把每一个元素都左移一位。注意到题目中说元素的顺序可以改变。实际上我们可以直接将最后一个元素 5 移动到序列开头，取代元素 1，得到序列 <code>[5,2,3,4]</code>，同样满足题目要求。这个优化在序列中 val 元素的数量较少时非常有效。</p><p>实现方面，我们依然使用双指针，两个指针初始时分别位于数组的首尾，向中间移动遍历该序列。如果左指针 left 指向的元素等于 val，此时将右指针 right 指向的元素复制到左指针 left 的位置，然后右指针 right 左移一位。如果赋值过来的元素恰好也等于 val，可以继续把右指针 right 指向的元素的值赋值过来（左指针 left 指向的等于 val 的元素的位置继续被覆盖），直到左指针指向的元素的值不等于 val 为止。当左指针 left 和右指针 right 重合的时候，左右指针遍历完数组中所有的元素。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">removeElement</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> val)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> nums.length;</span><br><span class="line">        <span class="keyword">while</span> (left &lt; right) &#123;</span><br><span class="line">            <span class="keyword">if</span> (nums[left] == val) &#123;</span><br><span class="line">                nums[left] = nums[right - <span class="number">1</span>];</span><br><span class="line">                right--;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                left++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> left;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;在之前刷力扣的过程中，我每刷道题都是先看题解然后再去边写边看，很多内容根本没消化，在进度上欺骗自己，感觉之前刷的都忘了，能力没有什么提升，现在还是一道都不会做。所以这次报了卡哥的算法训练营，希望能够按计划地有效刷题。本次刷题，我用的是 Java 语言解题，有余力的话也可能会加上 C++ 的题解。以下是算法训练营第一天的刷题记录和思考笔记。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="算法与数据结构" scheme="http://blog.zhuangzhihao.top/categories/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
    <category term="LeetCode" scheme="http://blog.zhuangzhihao.top/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>React 即时通信 ChatUI 视频通话等其他组件</title>
    <link href="http://blog.zhuangzhihao.top/ChatUI%E8%A7%86%E9%A2%91%E9%80%9A%E8%AF%9D%E7%BB%84%E4%BB%B6/"/>
    <id>http://blog.zhuangzhihao.top/ChatUI%E8%A7%86%E9%A2%91%E9%80%9A%E8%AF%9D%E7%BB%84%E4%BB%B6/</id>
    <published>2022-12-25T16:00:00.000Z</published>
    <updated>2022-12-26T06:57:36.984Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>React 即时通信 UI 实战第十章。React 即时通信 UI 实战为<a href="https://www.bilibili.com/video/BV1PK4y1b7bY?p=2&amp;spm_id_from=pageDriver&amp;vd_source=0965c74096f788f105780e5d5d0e9ebf">峰华前端工程师</a>推出的 React 实战课程，以聊天（即时通信）为原型，构建了一整套的 UI 组件库，课程重点在于 UI 组件的分析和实现，力求打造自用组件库。本章包括视频通话等其他组件，并将所有页面和 UI 组件组装成聊天首页。</p></blockquote><span id="more"></span><h3 id="一、视频通话组件开发"><a href="#一、视频通话组件开发" class="headerlink" title="一、视频通话组件开发"></a>一、视频通话组件开发</h3><p>使用 Hygen 创建一个 <code>VideoCall</code> 组件，并移动到 <code>src/components/Input</code> 组件目录下，作为 <code>Input</code> 的子组件导出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new VideoCall</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/VideoCall/index.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useState &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledVideoCall</span>, &#123;</span><br><span class="line">  <span class="title class_">Minimize</span>,</span><br><span class="line">  <span class="title class_">Actions</span>,</span><br><span class="line">  <span class="title class_">Action</span>,</span><br><span class="line">  <span class="title class_">Self</span>,</span><br><span class="line">  <span class="title class_">VideoCallAlert</span>,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> videoCaller <span class="keyword">from</span> <span class="string">&quot;assets/images/video-caller.jpg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> face <span class="keyword">from</span> <span class="string">&quot;assets/images/face-male-1.jpg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FontAwesomeIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/react-fontawesome&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  faCompressAlt,</span><br><span class="line">  faMicrophone,</span><br><span class="line">  faPhoneSlash,</span><br><span class="line">  faVolumeMute,</span><br><span class="line">  faVideo,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-solid-svg-icons&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Avatar</span> <span class="keyword">from</span> <span class="string">&quot;components/Avatar&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Paragraph</span> <span class="keyword">from</span> <span class="string">&quot;components/Paragraph&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;styled-components/macro&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">VideoCall</span>(<span class="params">&#123; children, onHangOffClicked, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> [fullScreen, setFullScreen] = <span class="title function_">useState</span>(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!fullScreen) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">VideoCallAlert</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Avatar</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">src</span>=<span class="string">&#123;face&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">css</span>=<span class="string">&#123;</span>`</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">grid-area:</span> <span class="attr">avatar</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          `&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Paragraph</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">size</span>=<span class="string">&quot;medium&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">css</span>=<span class="string">&#123;</span>`</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">grid-area:</span> <span class="attr">info</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          `&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &gt;</span></span></span><br><span class="line"><span class="language-xml">          正在跟 李铭浩 进行视频通话</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Paragraph</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">type</span>=<span class="string">&quot;secondary&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">css</span>=<span class="string">&#123;</span>`</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">grid-area:</span> <span class="attr">action</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">cursor:</span> <span class="attr">pointer</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          `&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> setFullScreen(true)&#125;</span></span><br><span class="line"><span class="language-xml">        &gt;</span></span><br><span class="line"><span class="language-xml">          点击切换全屏</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">FontAwesomeIcon</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">icon</span>=<span class="string">&#123;faVideo&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">css</span>=<span class="string">&#123;</span>`</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">grid-area:</span> <span class="attr">icon</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">font-size:</span> <span class="attr">20px</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">justify-self:</span> <span class="attr">end</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">opacity:</span> <span class="attr">0.3</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          `&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">VideoCallAlert</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledVideoCall</span> <span class="attr">src</span>=<span class="string">&#123;videoCaller&#125;</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Minimize</span> <span class="attr">shape</span>=<span class="string">&quot;rect&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> setFullScreen(false)&#125;&gt;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faCompressAlt&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Minimize</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Actions</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Action</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faMicrophone&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Action</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Action</span> <span class="attr">type</span>=<span class="string">&quot;hangoff&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faPhoneSlash&#125;</span> <span class="attr">onClick</span>=<span class="string">&#123;onHangOffClicked&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Action</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Action</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faVolumeMute&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Action</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Actions</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Self</span> <span class="attr">src</span>=<span class="string">&#123;face&#125;</span> <span class="attr">size</span>=<span class="string">&quot;140px&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledVideoCall</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">VideoCall</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">VideoCall</span>;</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/VideoCall/style.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Button</span> <span class="keyword">from</span> <span class="string">&quot;components/Button&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Avatar</span> <span class="keyword">from</span> <span class="string">&quot;components/Avatar&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; card &#125; <span class="keyword">from</span> <span class="string">&quot;utils/mixins&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Actions</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  grid-area: actions / title;</span></span><br><span class="line"><span class="string">  align-self: end;</span></span><br><span class="line"><span class="string">  justify-self: center;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  display: grid;</span></span><br><span class="line"><span class="string">  grid-template-columns: 90px 90px 90px;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Action</span> = <span class="title function_">styled</span>(<span class="title class_">Button</span>).<span class="title function_">attrs</span>(&#123; <span class="attr">size</span>: <span class="string">&quot;64px&quot;</span> &#125;)<span class="string">`</span></span><br><span class="line"><span class="string">  font-size: 32px;</span></span><br><span class="line"><span class="string">  color: white;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  box-shadow: none;</span></span><br><span class="line"><span class="string">  background: <span class="subst">$&#123;(&#123; theme, type &#125;) =&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">    type === <span class="string">&quot;hangoff&quot;</span> ? theme.red2 : theme.grayDark2&#125;</span>;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Self</span> = <span class="title function_">styled</span>(<span class="title class_">Avatar</span>)<span class="string">`</span></span><br><span class="line"><span class="string">  grid-area: self;</span></span><br><span class="line"><span class="string">  align-self: end;</span></span><br><span class="line"><span class="string">  justify-self: end;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Minimize</span> = <span class="title function_">styled</span>(<span class="title class_">Button</span>)<span class="string">`</span></span><br><span class="line"><span class="string">  justify-self: end;</span></span><br><span class="line"><span class="string">  grid-area: title;</span></span><br><span class="line"><span class="string">  background-color: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.gray3&#125;</span>;</span></span><br><span class="line"><span class="string">  padding: 0;</span></span><br><span class="line"><span class="string">  width: 62px;</span></span><br><span class="line"><span class="string">  height: 62px;</span></span><br><span class="line"><span class="string">  font-size: 46px;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">VideoCallAlert</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: grid;</span></span><br><span class="line"><span class="string">  grid-template-areas:</span></span><br><span class="line"><span class="string">    &quot;avatar info info&quot;</span></span><br><span class="line"><span class="string">    &quot;avatar action icon&quot;;</span></span><br><span class="line"><span class="string">  row-gap: 5px;</span></span><br><span class="line"><span class="string">  column-gap: 10px;</span></span><br><span class="line"><span class="string">  align-items: center;</span></span><br><span class="line"><span class="string">  width: max-content;</span></span><br><span class="line"><span class="string">  position: absolute;</span></span><br><span class="line"><span class="string">  right: 0;</span></span><br><span class="line"><span class="string">  top: 10vh;</span></span><br><span class="line"><span class="string">  border: 1px solid <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.gray4&#125;</span>;</span></span><br><span class="line"><span class="string">  z-index: 200;</span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;card&#125;</span></span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledVideoCall</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  height: 100%;</span></span><br><span class="line"><span class="string">  padding: 20px;</span></span><br><span class="line"><span class="string">  padding-bottom: 40px;</span></span><br><span class="line"><span class="string">  background-image: url(<span class="subst">$&#123;(&#123; src &#125;) =&gt; src&#125;</span>);</span></span><br><span class="line"><span class="string">  background-size: cover;</span></span><br><span class="line"><span class="string">  background-position: center;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  display: grid;</span></span><br><span class="line"><span class="string">  grid-template-areas:</span></span><br><span class="line"><span class="string">    &quot;title title&quot;</span></span><br><span class="line"><span class="string">    &quot;actions self&quot;;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledVideoCall</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">Actions</span>, <span class="title class_">Action</span>, <span class="title class_">Self</span>, <span class="title class_">Minimize</span>, <span class="title class_">StyledVideoCall</span>, <span class="title class_">VideoCallAlert</span> &#125;;</span><br></pre></td></tr></table></figure><p>在 <code>src/components/VideoCall/videoCall.stories.js</code>  文件中修改 stories：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">VideoCall</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;页面组件/VideoCall&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">VideoCall</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">height:</span> &quot;<span class="attr">100vh</span>&quot; &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">VideoCall</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>使用 <code>yarn</code> 命令启动 storybook：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn run storybook</span><br></pre></td></tr></table></figure><h3 id="二、Dropdown-下拉组件开发"><a href="#二、Dropdown-下拉组件开发" class="headerlink" title="二、Dropdown 下拉组件开发"></a>二、Dropdown 下拉组件开发</h3><p>使用 Hygen 创建一个 <code>Dropdown</code> 组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new Dropdown</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/Dropdown/index.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useState &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledDropdown</span>, &#123; <span class="title class_">DropdownContainer</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Dropdown</span>(<span class="params">&#123; children, content, align = <span class="string">&quot;right&quot;</span>, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> [visible, setVisible] = <span class="title function_">useState</span>(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledDropdown</span> <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> setVisible(!visible)&#125; &#123;...rest&#125;&gt;</span></span><br><span class="line"><span class="language-xml">      &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">      &#123;content &amp;&amp; (</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">DropdownContainer</span> <span class="attr">align</span>=<span class="string">&#123;align&#125;</span> <span class="attr">visible</span>=<span class="string">&#123;visible&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          &#123;content&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">DropdownContainer</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      )&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledDropdown</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Dropdown</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">  <span class="attr">content</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">  <span class="attr">align</span>: <span class="title class_">PropTypes</span>.<span class="title function_">oneOf</span>([<span class="string">&quot;top&quot;</span>, <span class="string">&quot;left&quot;</span>, <span class="string">&quot;bottom&quot;</span>, <span class="string">&quot;right&quot;</span>]),</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Dropdown</span>;</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/Dropdown/style.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledSeperator</span> <span class="keyword">from</span> <span class="string">&quot;components/Seperator/style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">DropdownItem</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  margin: 12px 0;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">DropdownContainer</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  position: absolute;</span></span><br><span class="line"><span class="string">  white-space: nowrap;</span></span><br><span class="line"><span class="string">  padding: 4px 26px;</span></span><br><span class="line"><span class="string">  background: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.background&#125;</span>;</span></span><br><span class="line"><span class="string">  box-shadow: 0px 4px 32px rgba(0, 0, 0, 0.08);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  display: <span class="subst">$&#123;(&#123; visible &#125;) =&gt; (visible ? <span class="string">&quot;block&quot;</span> : <span class="string">&quot;none&quot;</span>)&#125;</span>;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;(&#123; align &#125;) =&gt; align&#125;</span>: 0;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;StyledSeperator&#125;</span> &#123;</span></span><br><span class="line"><span class="string">    margin: -3px -26px;</span></span><br><span class="line"><span class="string">    width: calc(100% + 52px);</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledDropdown</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  position: relative;</span></span><br><span class="line"><span class="string">  cursor: pointer;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledDropdown</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">DropdownContainer</span>, <span class="title class_">DropdownItem</span> &#125;;</span><br></pre></td></tr></table></figure><p>在 <code>src/components/Dropdown/dropdown.stories.js</code>  文件中添加 stories：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Dropdown</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">DropdownItem</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Paragraph</span> <span class="keyword">from</span> <span class="string">&quot;components/Paragraph&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Seperator</span> <span class="keyword">from</span> <span class="string">&quot;components/Seperator&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">Options</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/options.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/Dropdown&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Dropdown</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> dropdownContent = (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">DropdownItem</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Paragraph</span>&gt;</span>个人资料<span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">DropdownItem</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">DropdownItem</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Paragraph</span>&gt;</span>关闭会话<span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">DropdownItem</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Seperator</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">DropdownItem</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Paragraph</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span>&gt;</span>屏蔽此人<span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">DropdownItem</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/&gt;</span></span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">display:</span> &quot;<span class="attr">flex</span>&quot;, <span class="attr">justifyContent:</span> &quot;<span class="attr">space-between</span>&quot;, <span class="attr">width:</span> &quot;<span class="attr">50</span>%&quot; &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  &gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Paragraph</span>&gt;</span>点击右侧按钮<span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Dropdown</span> <span class="attr">content</span>=<span class="string">&#123;dropdownContent&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Icon</span> <span class="attr">opacity</span>=<span class="string">&#123;0.3&#125;</span> <span class="attr">icon</span>=<span class="string">&#123;Options&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Dropdown</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Left</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Paragraph</span>&gt;</span>点击下方按钮<span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Dropdown</span> <span class="attr">align</span>=<span class="string">&quot;left&quot;</span> <span class="attr">content</span>=<span class="string">&#123;dropdownContent&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Icon</span> <span class="attr">opacity</span>=<span class="string">&#123;0.3&#125;</span> <span class="attr">icon</span>=<span class="string">&#123;Options&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Dropdown</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>接下来把 Dropdown 组件添加到标题栏中的更多选项图标中，编辑 <code>src/components/TitleBar/index.js</code>  文件，在 Options 外层套一个 Dropdown 组件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="title class_">Actions</span>&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">Icon</span> <span class="attr">opacity</span>=<span class="string">&#123;0.3&#125;</span> <span class="attr">icon</span>=<span class="string">&#123;Call&#125;</span> /&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Icon</span> <span class="attr">opacity</span>=<span class="string">&#123;0.3&#125;</span> <span class="attr">icon</span>=<span class="string">&#123;Camera&#125;</span> /&gt;</span></span></span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">Dropdown</span> <span class="attr">content</span>=<span class="string">&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &lt;&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">DropdownItem</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Paragraph</span>&gt;</span>个人资料<span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">DropdownItem</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">DropdownItem</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Paragraph</span>&gt;</span>关闭会话<span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">DropdownItem</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Seperator</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">DropdownItem</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Paragraph</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span>&gt;</span>屏蔽此人<span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">DropdownItem</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/&gt;</span></span></span><br><span class="line">      &#125; &gt;</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">Icon</span> <span class="attr">opacity</span>=<span class="string">&#123;0.3&#125;</span> <span class="attr">icon</span>=<span class="string">&#123;Options&#125;</span> /&gt;</span></span></span><br><span class="line">          &lt;/<span class="title class_">Dropdown</span>&gt;</span><br><span class="line">&lt;/<span class="title class_">Actions</span>&gt;</span><br></pre></td></tr></table></figure><h3 id="三、组装聊天首页"><a href="#三、组装聊天首页" class="headerlink" title="三、组装聊天首页"></a>三、组装聊天首页</h3><p>聊天应用程序首页采用三段式布局，从左到右依次是导航、侧边栏和内容区，另外有滑动抽屉</p><p>使用 Hygen 创建一个 <code>ChatApp</code> 组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new ChatApp</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/ChatApp/index.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledChatApp</span>, &#123; <span class="title class_">Nav</span>, <span class="title class_">Sidebar</span>, <span class="title class_">Drawer</span>, <span class="title class_">Content</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">NavBar</span> <span class="keyword">from</span> <span class="string">&quot;components/NavBar&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">MessageList</span> <span class="keyword">from</span> <span class="string">&quot;components/MessageList&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Conversation</span> <span class="keyword">from</span> <span class="string">&quot;components/Conversation&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Profile</span> <span class="keyword">from</span> <span class="string">&quot;components/Profile&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">ChatApp</span>(<span class="params">&#123; children, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledChatApp</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Nav</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">NavBar</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Nav</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Sidebar</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">MessageList</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Sidebar</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Content</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Conversation</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Content</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Drawer</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Profile</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Drawer</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledChatApp</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">ChatApp</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">ChatApp</span>;</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/ChatApp/style.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Nav</span> = styled.<span class="property">nav</span><span class="string">`</span></span><br><span class="line"><span class="string">  flex-shrink: 0;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Sidebar</span> = styled.<span class="property">aside</span><span class="string">`</span></span><br><span class="line"><span class="string">  max-width: 448px;</span></span><br><span class="line"><span class="string">  min-width: 344px;</span></span><br><span class="line"><span class="string">  height: 100vh;</span></span><br><span class="line"><span class="string">  flex: 1;</span></span><br><span class="line"><span class="string">  background: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.grediantGray&#125;</span>;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Content</span> = styled.<span class="property">main</span><span class="string">`</span></span><br><span class="line"><span class="string">  flex: 2;</span></span><br><span class="line"><span class="string">  position: relative;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Drawer</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  max-width: 310px;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledChatApp</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: flex;</span></span><br><span class="line"><span class="string">  height: 100vh;</span></span><br><span class="line"><span class="string">  width: 100vw;</span></span><br><span class="line"><span class="string">  overflow: hidden;</span></span><br><span class="line"><span class="string">  position: relative;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledChatApp</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">Nav</span>, <span class="title class_">Sidebar</span>, <span class="title class_">Content</span>, <span class="title class_">Drawer</span> &#125;;</span><br></pre></td></tr></table></figure><p>修改项目 <code>src</code> 目录下的 <code>index.js</code>，删除不相关代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ReactDOM</span> <span class="keyword">from</span> <span class="string">&quot;react-dom&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;./index.css&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&quot;./App&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">render</span>(</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">React.StrictMode</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">App</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">React.StrictMode</span>&gt;</span></span>,</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;root&quot;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>修改项目 <code>src</code> 目录下的 <code>App.js</code>，返回 <code>ChatApp</code> 组件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ChatApp</span> <span class="keyword">from</span> <span class="string">&quot;components/ChatApp&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ThemeProvider</span> &#125; <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> theme <span class="keyword">from</span> <span class="string">&quot;theme&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">ThemeProvider</span> <span class="attr">theme</span>=<span class="string">&#123;theme&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ChatApp</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">ThemeProvider</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">App</span>;</span><br></pre></td></tr></table></figure><h4 id="yarn-start-运行-React-项目！"><a href="#yarn-start-运行-React-项目！" class="headerlink" title="yarn start 运行 React 项目！"></a><code>yarn start</code> 运行 React 项目！</h4>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;React 即时通信 UI 实战第十章。React 即时通信 UI 实战为&lt;a href=&quot;https://www.bilibili.com/video/BV1PK4y1b7bY?p=2&amp;amp;spm_id_from=pageDriver&amp;amp;vd_source=0965c74096f788f105780e5d5d0e9ebf&quot;&gt;峰华前端工程师&lt;/a&gt;推出的 React 实战课程，以聊天（即时通信）为原型，构建了一整套的 UI 组件库，课程重点在于 UI 组件的分析和实现，力求打造自用组件库。本章包括视频通话等其他组件，并将所有页面和 UI 组件组装成聊天首页。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Web前端" scheme="http://blog.zhuangzhihao.top/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="React" scheme="http://blog.zhuangzhihao.top/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>Getting Started with RStudio</title>
    <link href="http://blog.zhuangzhihao.top/Getting-Started-with-Rstudio/"/>
    <id>http://blog.zhuangzhihao.top/Getting-Started-with-Rstudio/</id>
    <published>2022-12-07T16:00:00.000Z</published>
    <updated>2022-12-08T10:36:12.180Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Getting Started with RStudio is a project-based course provided by <a href="https://www.coursera.org/learn/getting-started-rstudio/">Coursera Project Network</a>. It aims to focus on three learning objectives: Install R and RStudio on desktop, or use the new cloud-based solution that allows anyone to learn R,  know the 10 most important things that 99% of R programmers should know about the RStudio IDE Interface and Be able to explain what R packages are, how to install and load them, from CRAN and Github, into the R session, and create interactive HTML widgets. The following are the notes I took during this course.</p></blockquote><span id="more"></span><p><img src="https://blog.zhuangzhihao.top/img/Coursera-Getting-Started-with-Rstudio.png" alt></p><h3 id="1-Install-R-and-Get-started-with-RStudio"><a href="#1-Install-R-and-Get-started-with-RStudio" class="headerlink" title="1. Install R and Get started with RStudio"></a>1. Install R and Get started with RStudio</h3><p>Download and Install R via <a href="https://cloud.r-project.org/">https://cloud.r-project.org/</a>, and Download and Install RStudio via <a href="https://posit.co/downloads/">https://posit.co/downloads/</a> .</p><p>Using RStudio with the new cloud-based solution of RStudio via <a href="https://posit.cloud/">https://posit.cloud/</a> that allows anyone to do, share, teach and learn R, directly from your browser.</p><h3 id="2-Most-Important-Features-About-RStudio"><a href="#2-Most-Important-Features-About-RStudio" class="headerlink" title="2. Most Important Features About RStudio"></a>2. Most Important Features About RStudio</h3><p>Know the 10 most important things that 99% of R programmers should know about the RStudio IDE Interface.  </p><p>Within Tools <code>&gt;</code> Global Options, you can change the theme of the code editor and the pane layout. Most developers will turn off Save <code>.RData</code> and History in the General tab of Gloabl Options as well.</p><p>A project is the fundamental unit of work in RStudio. It encapsulates your R code, packages and data files and provides isolation from other analyses.</p><h3 id="3-Install-and-load-R-packages-from-CRAN-and-Github"><a href="#3-Install-and-load-R-packages-from-CRAN-and-Github" class="headerlink" title="3. Install and load R packages, from CRAN and Github."></a>3. Install and load R packages, from CRAN and Github.</h3><p>The public clearing house for R packages is called CRAN, CRAN stands for Comprehensive R Archive Network.</p><p>Install the package <code>dplyr</code> which is used to manipulate data:</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">install.packages<span class="punctuation">(</span>“dplyr”<span class="punctuation">)</span>; library<span class="punctuation">(</span>dplyr<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>To download packages from Github, you need to download a package first, called <code>devtools</code>and it is on CRAN.</p><p>Download a package called <code>broman</code> from Github:</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">install_github<span class="punctuation">(</span><span class="string">&quot;kbroman/broman&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h3 id="4-Create-and-display-interactive-graphs-and-tables-with-1-line-of-code"><a href="#4-Create-and-display-interactive-graphs-and-tables-with-1-line-of-code" class="headerlink" title="4. Create and display interactive graphs and tables with 1 line of code."></a>4. Create and display interactive graphs and tables with 1 line of code.</h3><p>Data sets in package <code>broman</code>:</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>Show Violent Crime Rates by US State:</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">USArrests</span><br></pre></td></tr></table></figure><p>The very common library to create interactive tables, interactive charts and interactive maps in R are DT, highcharter, leaflet.</p><p>Install the package <code>DT</code> from CRAN:</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">install.packages<span class="punctuation">(</span><span class="string">&quot;DT&quot;</span><span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>DT<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>Create a data table:</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">datatable<span class="punctuation">(</span>mtcars<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>Create a Interactive map:</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">install.packages<span class="punctuation">(</span><span class="string">&quot;highcharter&quot;</span><span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>highcharter<span class="punctuation">)</span></span><br><span class="line">hchart<span class="punctuation">(</span>mtcars<span class="punctuation">,</span> <span class="string">&quot;scatter&quot;</span><span class="punctuation">,</span> hcaes<span class="punctuation">(</span>x<span class="operator">=</span>wt<span class="punctuation">,</span> y<span class="operator">=</span>mpg<span class="punctuation">,</span> z<span class="operator">=</span>drat<span class="punctuation">,</span> color<span class="operator">=</span>hp<span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>Create another map:</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">install.packages<span class="punctuation">(</span><span class="string">&quot;leaflet&quot;</span><span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>leaflet<span class="punctuation">)</span></span><br><span class="line">leaflet<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> addTiles<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> setView<span class="punctuation">(</span><span class="operator">-</span><span class="number">85.39</span><span class="punctuation">,</span> <span class="number">31.22</span><span class="punctuation">,</span> zoom<span class="operator">=</span><span class="number">12</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>The <code>%&gt;%</code> sign called is called the pipe operator.</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Getting Started with RStudio is a project-based course provided by &lt;a href=&quot;https://www.coursera.org/learn/getting-started-rstudio/&quot;&gt;Coursera Project Network&lt;/a&gt;. It aims to focus on three learning objectives: Install R and RStudio on desktop, or use the new cloud-based solution that allows anyone to learn R,  know the 10 most important things that 99% of R programmers should know about the RStudio IDE Interface and Be able to explain what R packages are, how to install and load them, from CRAN and Github, into the R session, and create interactive HTML widgets. The following are the notes I took during this course.&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="其他开发" scheme="http://blog.zhuangzhihao.top/categories/%E5%85%B6%E4%BB%96%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="R Programming" scheme="http://blog.zhuangzhihao.top/tags/R-Programming/"/>
    
  </entry>
  
  <entry>
    <title>Learn NumPy &amp; Pandas</title>
    <link href="http://blog.zhuangzhihao.top/NumPy&amp;Pandas/"/>
    <id>http://blog.zhuangzhihao.top/NumPy&amp;Pandas/</id>
    <published>2022-12-05T16:00:00.000Z</published>
    <updated>2022-12-06T06:23:23.583Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>NumPy 是 Numerical Python 的缩写，是一个开源的 Python 科学计算库，也是 SciPy、Scikit-Learn、tenorflow、paddlepaddle 等各种数据科学类库的基础库。使用 NumPy 可以方便的使用数组、矩阵进行计算。Pandas 是基于 NumPy 数组构建的，但二者最大的不同是 Pandas 是专门为处理表格和混杂数据设计的，适用于统计分析中的表结构，而 NumPy 更适合处理统一的数值数组数据。虽然在之前已经在 <a href="/Python-for-Data-Science">Python for Data Science</a> 一课中学习并整理英文笔记，但我认为还是有必要对于数据处理中的基础内容、工作流程和注意事项进行详细补充。</p></blockquote><span id="more"></span><h3 id="一、NumPy-与-原生-Python-的性能对比"><a href="#一、NumPy-与-原生-Python-的性能对比" class="headerlink" title="一、NumPy 与 原生 Python 的性能对比"></a>一、NumPy 与 原生 Python 的性能对比</h3><p>对于同样的数值计算任务，使用 NumPy 比起直接编写 Python 代码有以下优点：</p><ul><li>代码更简洁： NumPy 直接以数组、矩阵为粒度计算并且支持大量的数学函数，而 Python 需要用 for 循环从底层实现；</li><li>性能更高效： NumPy 的数组存储效率和输入输出计算性能，比 Python 使用 <code>list</code> 好很多，而且 NumPy 的大部分代码都是 C 语言实现的，这是 NumPy 比 Python 高效的原因。</li></ul><p>使用原生 Python 语法实现两个数组相加：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">python_sum</span>(<span class="params">n</span>):</span><br><span class="line">    a = [i**<span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">    b = [i**<span class="number">3</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">    c = [a[i]+b[i] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">    <span class="keyword">return</span> c</span><br><span class="line">python_sum(<span class="number">10</span>)</span><br></pre></td></tr></table></figure></p><p>使用 NumPy 实现上面功能：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">numpy_sum</span>(<span class="params">n</span>):</span><br><span class="line">    a = np.arange(n) ** <span class="number">2</span></span><br><span class="line">    b = np.arange(n) ** <span class="number">3</span></span><br><span class="line">    c = a+b</span><br><span class="line">    <span class="keyword">return</span> c</span><br><span class="line">numpy_sum(<span class="number">10</span>)</span><br></pre></td></tr></table></figure><p>使用 <code>%timeit</code> 魔法函数检测执行 1000 次所需时间：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">%timeit python_sum(<span class="number">1000</span>)</span><br><span class="line">%timeit numpy_sum(<span class="number">1000</span>) </span><br><span class="line"><span class="comment">#使用 NumPy 进行计算要比原生 Python 快得多，而且数据量越大，效果越明显</span></span><br></pre></td></tr></table></figure><h3 id="二、ndarray-对象"><a href="#二、ndarray-对象" class="headerlink" title="二、ndarray 对象"></a>二、<code>ndarray</code> 对象</h3><p><code>ndarray</code> 对象是  NumPy 的核心数据结构，叫做  <code>array</code>（数组），<code>array</code> 对象可以是一维数组，也可以是多维数组。Python 的 <code>list</code> 也可以实现相同的功能，但是 <code>array</code> 的优势在于性能好，包含数组元数据信息、大量的便捷函数。NumPy 的 <code>array</code> 和 Python 的 <code>list</code> 的一个区别是它的元素必须都是同一种数据类型，这也是 NumPy 高性能的一个原因。</p><p><code>ndarray</code> 属性：</p><ul><li><code>shape</code>：返回一个元组，表示 <code>array</code> 的形状；</li><li><code>ndim</code>：返回一个数字，表示 <code>array</code> 的维度的数目；</li><li><code>size</code>：返回一个数字，表示 <code>array</code> 中所有数据元素的数目；</li><li><code>dtype</code>：<code>array</code> 中元素的数据类型；</li><li><code>itemsize</code>：表示数组中每个元素的字节大小。</li></ul><h4 id="创建-array-对象的方法"><a href="#创建-array-对象的方法" class="headerlink" title="创建 array 对象的方法"></a>创建 <code>array</code> 对象的方法</h4><ol><li>使用 <code>np.array()</code> 创建 <code>array</code>：</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个一维数组</span></span><br><span class="line">x = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span> ,<span class="number">4</span>, <span class="number">5</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个二维数组</span></span><br><span class="line">y = np.array(</span><br><span class="line">    [</span><br><span class="line">        [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">        [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span> ,<span class="number">8</span>]</span><br><span class="line">    ]</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数组的形状  </span></span><br><span class="line">x.shape  <span class="comment">#(5,)</span></span><br><span class="line">y.shape  <span class="comment">#(2, 4)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数组的维度</span></span><br><span class="line">x.ndim  <span class="comment">#1</span></span><br><span class="line">y.ndim  <span class="comment">#2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数组所含元素的数目</span></span><br><span class="line">x.size  <span class="comment">#5</span></span><br><span class="line">y.size  <span class="comment">#8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数组中元素的数据类型</span></span><br><span class="line">x.dtype  <span class="comment">#dtype(’int32’)</span></span><br><span class="line">y.dtype  <span class="comment">#dtype(’int32’)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数组中每个元素的字节大小</span></span><br><span class="line">y.itemsize  <span class="comment">#4</span></span><br></pre></td></tr></table></figure><ol><li>使用 <code>np.arange(start,stop,step,dtype)</code>生成等差数组：<ul><li><code>start</code> 表示开始的数（包含） ，默认从 0 开始；</li><li><code>stop</code> 表示结束的数（不包含）；</li><li><code>step</code> 指定步长，默认为 1；</li><li><code>dtype</code> 指定数据类型。</li></ul></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个从0到9的数组，不包含10，步长默认为1</span></span><br><span class="line">np.arange(<span class="number">10</span>)  <span class="comment">#array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># [0,10) 区间，左闭右开，指定步长为 2</span></span><br><span class="line">np.arange(<span class="number">0</span>, <span class="number">10</span>, <span class="number">2</span>)  <span class="comment">#array([0, 2, 4, 6, 8])</span></span><br></pre></td></tr></table></figure><p><code>reshape</code> 可以改变数组的形状：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将一维数组 改成 2行5列的 2维数组</span></span><br><span class="line">np.arange(<span class="number">10</span>).reshape(<span class="number">2</span>,<span class="number">5</span>)  <span class="comment">#array([[0, 1, 2, 3, 4], [5, 6, 7, 8, 9]])</span></span><br></pre></td></tr></table></figure><ol><li>使用 <code>np.linspace(start,stop,num,endpoint)</code> 创建等差数组（指定数量）：<ul><li><code>start</code> 表示起始值，</li><li><code>stop</code> 表示结束值，</li><li><code>num</code> 表示要生成的等间隔样例数量，默认为 50，</li><li><code>endpoint</code> 序列中是否包含 <code>stop</code>值， 默认为 <code>true</code>。</li></ul></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">np.linspace(<span class="number">0</span>,<span class="number">10</span>)  <span class="comment">#array([ 0. , 0.20408163, 0.40816327, 0.6122449 , 0.81632653, 1.02040816, 1.2244898 , 1.42857143, 1.63265306, 1.83673469, 2.04081633, 2.24489796, 2.44897959, 2.65306122, 2.85714286, 3.06122449, 3.26530612, 3.46938776, 3.67346939, 3.87755102, 4.08163265, 4.28571429, 4.48979592, 4.69387755, 4.89795918, 5.10204082, 5.30612245, 5.51020408, 5.71428571, 5.91836735, 6.12244898, 6.32653061, 6.53061224, 6.73469388, 6.93877551, 7.14285714, 7.34693878, 7.55102041, 7.75510204, 7.95918367, 8.16326531, 8.36734694, 8.57142857, 8.7755102 , 8.97959184, 9.18367347, 9.3877551 , 9.59183673, 9.79591837, 10. ])</span></span><br><span class="line"></span><br><span class="line">np.linspace(<span class="number">0</span>, <span class="number">10</span>, <span class="number">5</span>)  <span class="comment">#array([ 0. , 2.5, 5. , 7.5, 10. ])</span></span><br></pre></td></tr></table></figure><ol><li>使用 <code>ones</code>、<code>ones_like</code>、<code>zeros</code>、<code>zeros_like</code>、<code>empty</code>、<code>empty_like</code>、<code>full</code>、<code>full_like</code>、<code>eye</code> 等函数创建：</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用ones创建全是1的数组</span></span><br><span class="line">np.ones(<span class="number">10</span>)  <span class="comment">#array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])</span></span><br><span class="line">np.ones((<span class="number">2</span>, <span class="number">4</span>))  <span class="comment">#array([[1., 1., 1., 1.], [1., 1., 1., 1.]])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用ones_like创建形状相同的全是1的数组</span></span><br><span class="line">np.ones_like(x)  <span class="comment">#array([1, 1, 1, 1, 1])</span></span><br><span class="line">np.ones_like(y)  <span class="comment">#array([[1, 1, 1, 1], [1, 1, 1, 1]])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用zeros创建全是0的数组</span></span><br><span class="line">np.zeros(<span class="number">10</span>)  <span class="comment">#array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])</span></span><br><span class="line">np.zeros((<span class="number">2</span>,<span class="number">4</span>))  <span class="comment">#array([[0., 0., 0., 0.], [0., 0., 0., 0.]])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用zeros_like创建形状相同的全0数组</span></span><br><span class="line">np.zeros_like(x)  <span class="comment">#array([0, 0, 0, 0, 0])</span></span><br><span class="line">np.zeros_like(y)  <span class="comment">#array([[0, 0, 0, 0], [0, 0, 0, 0]])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用empty创建未初始化的数组</span></span><br><span class="line"><span class="comment"># 注意：数据是未初始化的，里面的值可能是随机值不要用</span></span><br><span class="line">np.empty(<span class="number">10</span>)  <span class="comment">#array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])</span></span><br><span class="line">np.empty((<span class="number">2</span>, <span class="number">3</span>))  <span class="comment">#array([[0., 0., 0.], [0., 0., 0.]])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用empty_like创建形状相同的空数组</span></span><br><span class="line">np.empty_like(x)  <span class="comment">#array([1767994469, 170816364, 538976266, 1701139232, 1936474400])</span></span><br><span class="line">np.empty_like(y)  <span class="comment">#array([[ 24385651, 8127092, 60818051, 27328636], [ 6226044, 6946940, 19464275, -637261490]])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用full创建全是指定值的数组</span></span><br><span class="line">np.full(<span class="number">10</span>, <span class="number">666</span>)  <span class="comment">#array([666, 666, 666, 666, 666, 666, 666, 666, 666, 666])</span></span><br><span class="line">np.full((<span class="number">2</span>, <span class="number">4</span>), <span class="number">666</span>)  <span class="comment">#array([[666, 666, 666, 666], [666, 666, 666, 666]])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用full_like创建形状相同的全是指定值的数组</span></span><br><span class="line">np.full_like(x, <span class="number">666</span>)  <span class="comment">#array([666, 666, 666, 666, 666])</span></span><br><span class="line">np.full_like(y, <span class="number">666</span>)  <span class="comment">#array([[666, 666, 666, 666], [666, 666, 666, 666]])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 eye 函数创建对角线的地方为1，其余的地方为0的单位矩阵</span></span><br><span class="line">np.eye(<span class="number">5</span>)  <span class="comment">#array([[1., 0., 0., 0., 0.], [0., 1., 0., 0., 0.], [0., 0., 1., 0., 0.], [0., 0., 0., 1., 0.], [0., 0., 0., 0., 1.]])</span></span><br></pre></td></tr></table></figure><ol><li><code>np.random</code> 模块创建</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置随机种子  作用是：使得每次随机的结果固定</span></span><br><span class="line">np.random.seed(<span class="number">666</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 返回数据在[0,1)之间  包含0 不包含1</span></span><br><span class="line">np.random.rand(<span class="number">5</span>)  <span class="comment">#array([0.70043712, 0.84418664, 0.67651434, 0.72785806, 0.95145796])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 随机生成 2行5列的2维数组  数据在[0,1)之间</span></span><br><span class="line">np.random.rand(<span class="number">2</span>,<span class="number">5</span>)  <span class="comment">#array([[0.0127032 , 0.4135877 , 0.04881279, 0.09992856, 0.50806631], [0.20024754, 0.74415417, 0.192892 , 0.70084475, 0.29322811]])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成随机整数  区间范围：[2,5) 左闭右开  包含2不包含5</span></span><br><span class="line">np.random.randint(<span class="number">2</span>,<span class="number">5</span>)  <span class="comment">#4</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定shape</span></span><br><span class="line">np.random.randint(<span class="number">2</span>,<span class="number">5</span>,<span class="number">5</span>)  <span class="comment">#array([2, 2, 2, 2, 2])</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#uniform() 在 [low,high) 之间 生成均匀分布的数字</span></span><br><span class="line">np.random.uniform(<span class="number">2</span>,<span class="number">5</span>,<span class="number">10</span>)  <span class="comment">#array([4.30223703, 4.85969412, 2.87292148, 4.54334592, 3.04928571, 4.77169077, 2.88468359, 3.57314184, 4.82761689, 2.22421847])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定shape，前面的2，5表示取值的区间范围 [2,5)</span></span><br><span class="line"><span class="comment"># 后面的(2,5) 是指定的shape</span></span><br><span class="line">np.random.uniform(<span class="number">2</span>,<span class="number">5</span>,(<span class="number">2</span>,<span class="number">5</span>))  <span class="comment">#array([[2.82938752, 3.40275649, 2.94744596, 3.17048776, 2.80498943], [4.26099152, 4.0002124 , 4.61863861, 3.56329157, 4.25061275]])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># randn  返回数据具有标准正态分布 </span></span><br><span class="line"><span class="comment"># 即：均值为0 方差为1</span></span><br><span class="line">np.random.randn(<span class="number">5</span>)  <span class="comment">#array([-1.21715355, -0.99494737, -1.56448586, -1.62879004, 1.23174866])</span></span><br><span class="line">np.random.randn(<span class="number">2</span>,<span class="number">5</span>)  <span class="comment">#array([[-0.91360034, -0.27084407, 1.42024914, -0.98226439, 0.80976498], [ 1.85205227, 1.67819021, -0.98076924, 0.47031082, 0.18226991]])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># normal()  可以指定均值和标准差</span></span><br><span class="line">np.random.normal(<span class="number">1</span>,<span class="number">10</span>,<span class="number">5</span>)  <span class="comment">#array([-7.43882492, 3.0996833 , 3.29586662, 3.63076422, 22.66332222])</span></span><br><span class="line">np.random.normal(<span class="number">1</span>,<span class="number">10</span>,(<span class="number">2</span>,<span class="number">5</span>))  <span class="comment">#array([[ -9.48875925, -17.47684423, 6.34015028, -10.95748024, -1.89157372], [ -1.43327034, -6.42666527, 13.07905106, 11.27877114, 1.57388197]])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># choice 从给定的数组里 生成随机结果</span></span><br><span class="line">np.random.choice(<span class="number">5</span>, <span class="number">3</span>)  <span class="comment">#array([0, 1, 2])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 等同于 np.random.choice(0, 5, 3)  在[0,5)的区间范围内 生成3个数据</span></span><br><span class="line">np.random.choice(<span class="number">5</span>, (<span class="number">2</span>, <span class="number">3</span>))  <span class="comment">#array([[0, 1, 0], [0, 1, 2]])</span></span><br><span class="line">np.random.choice([<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">3</span>], <span class="number">3</span>)  <span class="comment">#array([3, 3, 5])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># shuffle 把一个数组进行随机排列</span></span><br><span class="line">a = np.arange(<span class="number">10</span>)</span><br><span class="line">np.random.shuffle(a) </span><br><span class="line">a  <span class="comment">#array([6, 3, 5, 1, 0, 8, 4, 9, 2, 7])</span></span><br><span class="line"></span><br><span class="line">a = np.arange(<span class="number">20</span>).reshape(<span class="number">4</span>, <span class="number">5</span>)</span><br><span class="line">a  <span class="comment">#array([[ 0, 1, 2, 3, 4], [ 5, 6, 7, 8, 9], [10, 11, 12, 13, 14], [15, 16, 17, 18, 19]])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果数组是多维的  则只会在第一维度打散数据</span></span><br><span class="line">np.random.shuffle(a)</span><br><span class="line">a  <span class="comment">#array([[10, 11, 12, 13, 14], [15, 16, 17, 18, 19], [ 5, 6, 7, 8, 9], [ 0, 1, 2, 3, 4]])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># permutation 把一个数组进行随机排列  或者数字的全排列</span></span><br><span class="line">np.random.permutation(<span class="number">10</span>)  <span class="comment">#array([4, 9, 8, 7, 3, 5, 6, 1, 0, 2])</span></span><br><span class="line"></span><br><span class="line">arr = np.arange(<span class="number">9</span>).reshape((<span class="number">3</span>,<span class="number">3</span>))</span><br><span class="line">arr  <span class="comment">#array([[0, 1, 2], [3, 4, 5], [6, 7, 8]])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># permutation 与 shuffle 函数功能相同  区别在于：</span></span><br><span class="line"><span class="comment"># 注意 permutation不会更改原来的arr 会返回一个新的copy</span></span><br><span class="line">np.random.permutation(arr)  <span class="comment">#array([[3, 4, 5], [6, 7, 8], [0, 1, 2]])</span></span><br><span class="line">arr  <span class="comment">#array([[0, 1, 2], [3, 4, 5], [6, 7, 8]])</span></span><br></pre></td></tr></table></figure><h4 id="NumPy-的数组索引"><a href="#NumPy-的数组索引" class="headerlink" title="NumPy 的数组索引"></a>NumPy 的数组索引</h4><ol><li>基础索引：</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 一维向量</span></span><br><span class="line">x = np.arange(<span class="number">10</span>)</span><br><span class="line">x  <span class="comment">#array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 二维向量 一般用大写字母</span></span><br><span class="line">Y = np.arange(<span class="number">20</span>).reshape(<span class="number">4</span>, <span class="number">5</span>)</span><br><span class="line">Y  <span class="comment">#array([[ 0, 1, 2, 3, 4], [ 5, 6, 7, 8, 9], [10, 11, 12, 13, 14], [15, 16, 17, 18, 19]])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 取索引从2到 倒数第一个（不包含倒数第一个）</span></span><br><span class="line">x[<span class="number">2</span>:-<span class="number">1</span>]  <span class="comment">#array([2, 3, 4, 5, 6, 7, 8])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 取第1行第1列的数 </span></span><br><span class="line"><span class="comment"># 注意：索引是从0开始的，我们日常所说的第1行，它的索引值是0</span></span><br><span class="line">Y[<span class="number">0</span>, <span class="number">0</span>]  <span class="comment">#0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 取索引为第2行的数据</span></span><br><span class="line">Y[<span class="number">2</span>]  <span class="comment">#array([10, 11, 12, 13, 14])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 取索引为第2列的数据</span></span><br><span class="line">Y[:,<span class="number">2</span>]  <span class="comment">#array([ 2, 7, 12, 17])</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#注意：切片的修改会修改原来的数组</span></span><br><span class="line"><span class="comment">#原因：numpy经常要处理大数组，避免每次都复制</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改x的第0-2（不包含2）数据</span></span><br><span class="line">x[:<span class="number">2</span>] = <span class="number">666</span></span><br><span class="line">x  <span class="comment">#array([666, 666, 2, 3, 4, 5, 6, 7, 8, 9])</span></span><br></pre></td></tr></table></figure><ol><li>神奇索引（即用整数数组进行的索引）：</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x = np.arange(<span class="number">10</span>)</span><br><span class="line">x  <span class="comment">#array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])</span></span><br><span class="line">x[[<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]]  <span class="comment">#array([2, 3, 4])</span></span><br><span class="line">indexs = np.array([[<span class="number">0</span>,<span class="number">2</span>],[<span class="number">1</span>,<span class="number">3</span>]])</span><br><span class="line">x[indexs]  <span class="comment">#array([[0, 2], [1, 3]])</span></span><br></pre></td></tr></table></figure><p>获取数组中最大的前 n 个数字：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 随机生成1-100之间的10个数字</span></span><br><span class="line">arr = np.random.randint(<span class="number">1</span>, <span class="number">100</span>, <span class="number">10</span>)</span><br><span class="line">arr  <span class="comment">#array([37, 30, 76, 20, 63, 80, 42, 83, 91, 67])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># arr.argsort() 会返回排序后的索引index</span></span><br><span class="line"><span class="comment"># 取最大值对应的3个下标</span></span><br><span class="line">arr.argsort()[-<span class="number">3</span>:]  <span class="comment">#array([5, 7, 8], dtype=int64)</span></span><br><span class="line">arr[arr.argsort()[-<span class="number">3</span>:]]  <span class="comment">#array([80, 83, 91])</span></span><br></pre></td></tr></table></figure><p>对于二维数组：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Y = np.arange(<span class="number">20</span>).reshape(<span class="number">4</span>, <span class="number">5</span>)</span><br><span class="line">Y  <span class="comment">#array([[ 0, 1, 2, 3, 4], [ 5, 6, 7, 8, 9], [10, 11, 12, 13, 14], [15, 16, 17, 18, 19]])</span></span><br><span class="line"><span class="comment"># 筛选多行，列可以省略</span></span><br><span class="line">Y[[<span class="number">0</span>,<span class="number">2</span>]]  <span class="comment">#array([[ 0, 1, 2, 3, 4], [10, 11, 12, 13, 14]])</span></span><br><span class="line">Y[[<span class="number">0</span>,<span class="number">2</span>],:]  <span class="comment">#array([[ 0, 1, 2, 3, 4], [10, 11, 12, 13, 14]])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 筛选多列 行不能省略</span></span><br><span class="line">Y[:,[<span class="number">0</span>, <span class="number">2</span>]]  <span class="comment">#array([[ 0, 2], [ 5, 7], [10, 12], [15, 17]])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 同时指定行列</span></span><br><span class="line">Y[[<span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]]  <span class="comment">#array([ 1, 12, 18])</span></span><br></pre></td></tr></table></figure><ol><li>布尔索引：</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">x = np.arange(<span class="number">10</span>)</span><br><span class="line">x  <span class="comment">#array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 返回bool值的数组</span></span><br><span class="line">x&gt;<span class="number">5</span>  <span class="comment">#array([False, False, False, False, False, False, True, True, True, True])</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#返回通过条件判断的数组</span></span><br><span class="line">x[x&gt;<span class="number">5</span>]  <span class="comment">#array([6, 7, 8, 9])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过条件进行赋值</span></span><br><span class="line">x[x&lt;=<span class="number">5</span>] = <span class="number">0</span></span><br><span class="line">x[x&gt;<span class="number">5</span>] = <span class="number">1</span></span><br><span class="line">x  <span class="comment">#array([0, 0, 0, 0, 0, 0, 1, 1, 1, 1])</span></span><br><span class="line"></span><br><span class="line">x = np.arange(<span class="number">10</span>)</span><br><span class="line">x[x&lt;<span class="number">5</span>] += <span class="number">20</span></span><br><span class="line">x  <span class="comment">#array([20, 21, 22, 23, 24, 5, 6, 7, 8, 9])</span></span><br></pre></td></tr></table></figure><p>对于二维数组：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Y = np.arange(<span class="number">20</span>).reshape(<span class="number">4</span>, <span class="number">5</span>)</span><br><span class="line">Y  <span class="comment">#array([[ 0, 1, 2, 3, 4], [ 5, 6, 7, 8, 9], [10, 11, 12, 13, 14], [15, 16, 17, 18, 19]])</span></span><br><span class="line"></span><br><span class="line">Y &gt; <span class="number">5</span>  <span class="comment">#array([[False, False, False, False, False], [False, True, True, True, True], [ True, True, True, True, True], [ True, True, True, True, True]])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Y&gt;5 的boolean数组 既有行又有列 因此返回的是 行列一维数组</span></span><br><span class="line">Y[Y&gt;<span class="number">5</span>]  <span class="comment">#array([ 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19])</span></span><br><span class="line"></span><br><span class="line">Y[:, <span class="number">3</span>]  <span class="comment">#array([ 3, 8, 13, 18])</span></span><br><span class="line"></span><br><span class="line">Y[:, <span class="number">3</span>]&gt;<span class="number">5</span>  <span class="comment">#array([False, True, True, True])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 把第3列大于5的行数据筛选出来</span></span><br><span class="line">Y[:, <span class="number">3</span>][Y[:, <span class="number">3</span>]&gt;<span class="number">5</span>]  <span class="comment">#array([ 8, 13, 18])</span></span><br></pre></td></tr></table></figure><p>条件的组合：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">x = np.arange(<span class="number">10</span>)</span><br><span class="line">x  <span class="comment">#array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])</span></span><br><span class="line"></span><br><span class="line">condition = (x%<span class="number">2</span>==<span class="number">0</span>)| (x&gt;<span class="number">7</span>)</span><br><span class="line">condition  <span class="comment">#array([ True, False, True, False, True, False, True, False, True, True])</span></span><br><span class="line"></span><br><span class="line">x[condition]  <span class="comment">#array([0, 2, 4, 6, 8, 9])</span></span><br></pre></td></tr></table></figure><h3 id="三、NumPy-的操作与函数"><a href="#三、NumPy-的操作与函数" class="headerlink" title="三、NumPy 的操作与函数"></a>三、NumPy 的操作与函数</h3><h4 id="数组的计算"><a href="#数组的计算" class="headerlink" title="数组的计算"></a>数组的计算</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">A  = np.arange(<span class="number">6</span>).reshape(<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">A  <span class="comment">#array([[0, 1, 2], [3, 4, 5]])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 相当于 A中的每个数据都+1</span></span><br><span class="line">A+<span class="number">1</span>  <span class="comment">#array([[1, 2, 3], [4, 5, 6]])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 相当于 A中的每个数据都*3</span></span><br><span class="line">A*<span class="number">3</span>  <span class="comment">#array([[ 0, 3, 6], [ 9, 12, 15]])</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#三角函数</span></span><br><span class="line">np.sin(A)  <span class="comment">#array([[ 0. , 0.84147098, 0.90929743], [ 0.14112001, -0.7568025 , -0.95892427]])</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#指数函数</span></span><br><span class="line">np.exp(A)  <span class="comment">#array([[ 1. , 2.71828183, 7.3890561 ], [ 20.08553692, 54.59815003, 148.4131591 ]])</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#矩阵运算</span></span><br><span class="line">B  = np.arange(<span class="number">6</span>,<span class="number">12</span>).reshape(<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">B  <span class="comment">#array([[ 6, 7, 8], [ 9, 10, 11]])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对应位置元素相加</span></span><br><span class="line">A + B  <span class="comment">#array([[ 6, 8, 10], [12, 14, 16]])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对应位置元素相减</span></span><br><span class="line">A - B   <span class="comment">#array([[-6, -6, -6], [-6, -6, -6]])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对应位置元素相乘</span></span><br><span class="line">A*B  <span class="comment">#array([[ 0, 7, 16], [27, 40, 55]])</span></span><br></pre></td></tr></table></figure><h4 id="NumPy-的数学统计函数"><a href="#NumPy-的数学统计函数" class="headerlink" title="NumPy 的数学统计函数"></a>NumPy 的数学统计函数</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">arr = np.arange(<span class="number">12</span>).reshape(<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line">arr  <span class="comment">#array([[ 0, 1, 2, 3], [ 4, 5, 6, 7], [ 8, 9, 10, 11]])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 求和</span></span><br><span class="line">np.<span class="built_in">sum</span>(arr)  <span class="comment">#66</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 乘积</span></span><br><span class="line">np.prod(arr)  <span class="comment">#0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 累加</span></span><br><span class="line">np.cumsum(arr)  <span class="comment">#array([ 0, 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, 66], dtype=int32)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 累乘</span></span><br><span class="line">np.cumprod(arr)  <span class="comment">#array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=int32)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 最小值</span></span><br><span class="line">np.<span class="built_in">min</span>(arr)  <span class="comment">#0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 最大值</span></span><br><span class="line">np.<span class="built_in">max</span>(arr)  <span class="comment">#11</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 求取数列第?分位的数值</span></span><br><span class="line">np.percentile(arr,[<span class="number">25</span>,<span class="number">50</span>,<span class="number">75</span>])  <span class="comment">#array([2.75, 5.5 , 8.25])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 功能同上面  只不过范围为0-1直接</span></span><br><span class="line">np.quantile(arr,[<span class="number">0.25</span>,<span class="number">0.5</span>,<span class="number">0.75</span>])  <span class="comment">#array([2.75, 5.5 , 8.25])</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#中位数</span></span><br><span class="line">np.median(arr)  <span class="comment">#5.5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 平均值</span></span><br><span class="line">np.mean(arr)  <span class="comment">#5.5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 标准差</span></span><br><span class="line">np.std(arr)  <span class="comment">#3.452052529534663</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方差</span></span><br><span class="line">np.var(arr)  <span class="comment">#11.916666666666666</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加权平均</span></span><br><span class="line"><span class="comment"># weights 的 shape 需要和 arr 一样</span></span><br><span class="line">weights = np.random.rand(*arr.shape)</span><br><span class="line">np.average(arr, weights=weights)  <span class="comment">#5.355698948848374</span></span><br></pre></td></tr></table></figure><h4 id="NumPy-的-axis参数"><a href="#NumPy-的-axis参数" class="headerlink" title="NumPy 的 axis参数"></a>NumPy 的 <code>axis</code>参数</h4><p><code>axis=0</code> 代表行，<code>axis=1</code> 代表列，对于 <code>sum/mean/media</code> 等聚合函数：</p><ul><li><code>axis=0</code> 代表把行消解掉，<code>axis=1</code> 代表把列消解掉；</li><li><code>axis=0</code>代表跨行计算，<code>axis=1</code> 代表跨列计算。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">arr = np.arange(<span class="number">12</span>).reshape(<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line">arr  <span class="comment">#array([[ 0, 1, 2, 3], [ 4, 5, 6, 7], [ 8, 9, 10, 11]])</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#当axis=0的时候，我们可以将数据和轴组成的整体看作是一串竖着摆放的糖葫芦</span></span><br><span class="line"><span class="comment">#此时[ 0, 1, 2, 3]、[ 4, 5, 6, 7]、[ 8, 9, 10, 11]可以分别看作是糖葫芦的三个果子，互相做运算</span></span><br><span class="line">arr.<span class="built_in">sum</span>(axis=<span class="number">0</span>)  <span class="comment">#array([12, 15, 18, 21])</span></span><br><span class="line"></span><br><span class="line">arr.<span class="built_in">sum</span>(axis=<span class="number">1</span>)  <span class="comment">#array([ 6, 22, 38])</span></span><br><span class="line"></span><br><span class="line">arr.cumsum(axis=<span class="number">0</span>)  <span class="comment">#array([[ 0, 1, 2, 3], [ 4, 6, 8, 10], [12, 15, 18, 21]], dtype=int32)</span></span><br><span class="line"></span><br><span class="line">arr.cumsum(axis=<span class="number">1</span>)  <span class="comment">#array([[ 0, 1, 3, 6], [ 4, 9, 15, 22], [ 8, 17, 27, 38]], dtype=int32)</span></span><br><span class="line"></span><br><span class="line">mean = np.mean(arr, axis=<span class="number">0</span>)</span><br><span class="line">mean  <span class="comment">#array([4., 5., 6., 7.])</span></span><br><span class="line"></span><br><span class="line">std = np.std(arr,axis=<span class="number">0</span>)</span><br><span class="line">std  <span class="comment">#array([3.26598632, 3.26598632, 3.26598632, 3.26598632])</span></span><br><span class="line"></span><br><span class="line">result = arr-mean</span><br><span class="line">result  <span class="comment">#array([[-4., -4., -4., -4.], [ 0., 0., 0., 0.], [ 4., 4., 4., 4.]])</span></span><br></pre></td></tr></table></figure><h4 id="给数组添加维度"><a href="#给数组添加维度" class="headerlink" title="给数组添加维度"></a>给数组添加维度</h4><p>建立一个一维数组：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">arr = np.arange(<span class="number">5</span>)</span><br><span class="line">arr  <span class="comment">#array([0, 1, 2, 3, 4])</span></span><br><span class="line">arr.shape  <span class="comment">#(5,)</span></span><br></pre></td></tr></table></figure><ol><li><code>np.newaxis</code> 关键字：</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#np.newaxis 就是None的别名</span></span><br><span class="line">np.newaxis <span class="keyword">is</span> <span class="literal">None</span>  <span class="comment">#True</span></span><br><span class="line">np.newaxis == <span class="literal">None</span>  <span class="comment">#True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 给一维向量添加一个行维度</span></span><br><span class="line">arr[np.newaxis, :]  <span class="comment">#array([[0, 1, 2, 3, 4]])</span></span><br><span class="line">arr[np.newaxis, :].shape  <span class="comment">#(1, 5)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 给一维向量添加一个列维度</span></span><br><span class="line">arr[:, np.newaxis]  <span class="comment">#array([[0], [1], [2], [3], [4]])</span></span><br><span class="line">arr[:,np.newaxis].shape  <span class="comment">#(5, 1)</span></span><br></pre></td></tr></table></figure><ol><li><code>np.expand_dims</code> 方法</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 给一维向量添加一个行维度</span></span><br><span class="line">np.expand_dims(arr, axis=<span class="number">0</span>)  <span class="comment">#array([[0, 1, 2, 3, 4]])</span></span><br><span class="line">np.expand_dims(arr,axis=<span class="number">0</span>).shape  <span class="comment">#(1, 5)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 给一维向量添加一个列维度</span></span><br><span class="line">np.expand_dims(arr,axis=<span class="number">1</span>)  <span class="comment">#array([[0], [1], [2], [3], [4]])</span></span><br><span class="line">np.expand_dims(arr,axis=<span class="number">1</span>).shape  <span class="comment">#(5, 1)</span></span><br></pre></td></tr></table></figure><ol><li><code>np.reshape</code> 方法：</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">np.reshape(arr, (<span class="number">1</span>,<span class="number">5</span>))  <span class="comment">#array([[0, 1, 2, 3, 4]])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -1表示 自动计算出结果  </span></span><br><span class="line">np.reshape(arr,(<span class="number">1</span>,-<span class="number">1</span>))  <span class="comment">#array([[0, 1, 2, 3, 4]])</span></span><br><span class="line"></span><br><span class="line">np.reshape(arr,(<span class="number">1</span>,-<span class="number">1</span>)).shape  <span class="comment">#(1, 5)</span></span><br><span class="line"></span><br><span class="line">np.reshape(arr,(-<span class="number">1</span>,<span class="number">1</span>))  <span class="comment">#array([[0], [1], [2], [3], [4]])</span></span><br><span class="line"></span><br><span class="line">np.reshape(arr,(-<span class="number">1</span>,<span class="number">1</span>)).shape  <span class="comment">#(5, 1)</span></span><br></pre></td></tr></table></figure><h4 id="数组合并、插入操作"><a href="#数组合并、插入操作" class="headerlink" title="数组合并、插入操作"></a>数组合并、插入操作</h4><p>合并行：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a = np.arange(<span class="number">6</span>).reshape(<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">b = np.arange(<span class="number">6</span>,<span class="number">18</span>).reshape(<span class="number">4</span>,<span class="number">3</span>)</span><br><span class="line">a  <span class="comment">#array([[0, 1, 2], [3, 4, 5]])</span></span><br><span class="line">b  <span class="comment">#array([[ 6, 7, 8], [ 9, 10, 11], [12, 13, 14], [15, 16, 17]])</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#首尾合并</span></span><br><span class="line">np.concatenate([a,b])  <span class="comment">#array([[ 0, 1, 2], [ 3, 4, 5], [ 6, 7, 8], [ 9, 10, 11], [12, 13, 14], [15, 16, 17]])</span></span><br><span class="line">np.vstack([a,b])  <span class="comment">#array([[ 0, 1, 2], [ 3, 4, 5], [ 6, 7, 8], [ 9, 10, 11], [12, 13, 14], [15, 16, 17]])</span></span><br><span class="line">np.row_stack([a,b])  <span class="comment">#array([[ 0, 1, 2], [ 3, 4, 5], [ 6, 7, 8], [ 9, 10, 11], [12, 13, 14], [15, 16, 17]])</span></span><br></pre></td></tr></table></figure><p>合并列：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a = np.arange(<span class="number">12</span>).reshape(<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line">a  <span class="comment">#array([[ 0, 1, 2, 3], [ 4, 5, 6, 7], [ 8, 9, 10, 11]])</span></span><br><span class="line">b = np.arange(<span class="number">12</span>,<span class="number">18</span>).reshape(<span class="number">3</span>,<span class="number">2</span>)</span><br><span class="line">b  <span class="comment">#array([[12, 13], [14, 15], [16, 17]])</span></span><br><span class="line"></span><br><span class="line">np.concatenate([a,b],axis=<span class="number">1</span>)  <span class="comment">#array([[ 0, 1, 2, 3, 12, 13], [ 4, 5, 6, 7, 14, 15], [ 8, 9, 10, 11, 16, 17]])</span></span><br><span class="line">np.hstack([a,b])  <span class="comment">#array([[ 0, 1, 2, 3, 12, 13], [ 4, 5, 6, 7, 14, 15], [ 8, 9, 10, 11, 16, 17]])</span></span><br><span class="line">np.column_stack([a,b])  <span class="comment">#array([[ 0, 1, 2, 3, 12, 13], [ 4, 5, 6, 7, 14, 15], [ 8, 9, 10, 11, 16, 17]])</span></span><br></pre></td></tr></table></figure><p>插入数组到指定位置（<code>np.insert(arr, obj, values, axis)</code> ）： </p><ul><li><code>arr</code> 是原始数组，可一可多，<code>obj</code> 是插入元素位置，<code>values</code> 是是插入内容，<code>axis</code> 是按行按列插入。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#插入的数组是一维的</span></span><br><span class="line">a = np.array([<span class="number">1</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>])</span><br><span class="line">np.insert(a, <span class="number">0</span>, <span class="number">9</span>)  <span class="comment">#array([9, 1, 4, 6, 5, 6, 8])</span></span><br><span class="line"><span class="comment">#插入元素都是在所给位置之前</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#多维：如果axis没有给出，相当于是做降维操作，与一维数组一致</span></span><br><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">4</span>],[<span class="number">5</span>,<span class="number">6</span>]])</span><br><span class="line">np.insert(a,<span class="number">1</span>,<span class="number">11</span>,axis = <span class="number">1</span>)  <span class="comment">#array([[ 1, 11,  2], [ 3, 11,  4], [ 5, 11,  6]])</span></span><br><span class="line"></span><br><span class="line">a = np.array([[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">4</span>],[<span class="number">5</span>,<span class="number">6</span>]])</span><br><span class="line">np.insert(a,<span class="number">1</span>,[<span class="number">2</span>,<span class="number">6</span>],axis = <span class="number">0</span>)  <span class="comment">#array([[1, 2], [2, 6], [3, 4], [5, 6]])</span></span><br></pre></td></tr></table></figure><h4 id="数组的拷贝、去重操作"><a href="#数组的拷贝、去重操作" class="headerlink" title="数组的拷贝、去重操作"></a>数组的拷贝、去重操作</h4><p>数组的拷贝：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#首先创建一个从 0 到 50，并且平分元素为 10 个的数组</span></span><br><span class="line">x = np.linspace(<span class="number">0</span>, <span class="number">50</span>, <span class="number">10</span>)  </span><br><span class="line">x  <span class="comment">#array([ 0.        ,  5.55555556, 11.11111111, 16.66666667, 22.22222222,27.77777778, 33.33333333, 38.88888889, 44.44444444, 50.        ])</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#使用view方法拷贝</span></span><br><span class="line">y = x.view()  </span><br><span class="line">y  <span class="comment">#array([ 0.        ,  5.55555556, 11.11111111, 16.66666667, 22.22222222, 27.77777778, 33.33333333, 38.88888889, 44.44444444, 50.        ])</span></span><br><span class="line"><span class="comment">#view方法如果对拷贝后的元素进行修改，会影响到原来的数组</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#使用copy方法拷贝</span></span><br><span class="line">z = x.copy() </span><br><span class="line">z  <span class="comment">#array([ 0.        ,  5.55555556, 11.11111111, 16.66666667, 22.22222222, 27.77777778, 33.33333333, 38.88888889, 44.44444444, 50.        ])</span></span><br></pre></td></tr></table></figure><p>去除重复的字符串：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">arr = np.array([<span class="string">&#x27;鸡蛋&#x27;</span>, <span class="string">&#x27;鸭蛋&#x27;</span>, <span class="string">&#x27;龟蛋&#x27;</span>, <span class="string">&#x27;鸵鸟蛋&#x27;</span>, <span class="string">&#x27;鸭蛋&#x27;</span>, <span class="string">&#x27;龟蛋&#x27;</span>, <span class="string">&#x27;鸵鸟蛋&#x27;</span>])</span><br><span class="line">arr2 = np.unique(arr)</span><br><span class="line"><span class="built_in">print</span>( arr2 )  <span class="comment">#[&#x27;鸡蛋&#x27; &#x27;鸭蛋&#x27; &#x27;鸵鸟蛋&#x27; &#x27;龟蛋&#x27;]</span></span><br></pre></td></tr></table></figure><p>删除数组指定位置的元素：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arr = np.array([<span class="string">&#x27;鸡蛋&#x27;</span>, <span class="string">&#x27;鸭蛋&#x27;</span>, <span class="string">&#x27;鸵鸟蛋&#x27;</span>, <span class="string">&#x27;龟蛋&#x27;</span>])</span><br><span class="line">np.delete(arr, <span class="number">3</span>)  <span class="comment">#array([&#x27;鸡蛋&#x27;, &#x27;鸭蛋&#x27;, &#x27;鸵鸟蛋&#x27;], dtype=&#x27;&lt;U3&#x27;)</span></span><br></pre></td></tr></table></figure><h3 id="四、Pandas-的基础操作"><a href="#四、Pandas-的基础操作" class="headerlink" title="四、Pandas 的基础操作"></a>四、Pandas 的基础操作</h3><h4 id="选择表格（DataFrame）中的行或者列"><a href="#选择表格（DataFrame）中的行或者列" class="headerlink" title="选择表格（DataFrame）中的行或者列"></a>选择表格（DataFrame）中的行或者列</h4><p>从 Python 字典生成 <code>DataFrame</code> 表格：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建表格</span></span><br><span class="line">workout_dict = &#123;</span><br><span class="line">  <span class="string">&quot;calories&quot;</span>: [<span class="number">420</span>, <span class="number">380</span>, <span class="number">390</span>, <span class="number">390</span>],</span><br><span class="line">  <span class="string">&quot;duration&quot;</span>: [<span class="number">50</span>, <span class="number">40</span>, <span class="number">45</span>, <span class="number">45</span>],</span><br><span class="line">  <span class="string">&quot;type&quot;</span>: [<span class="string">&#x27;run&#x27;</span>, <span class="string">&#x27;walk&#x27;</span>, <span class="string">&#x27;walk&#x27;</span>, <span class="string">&#x27;run&#x27;</span>]</span><br><span class="line">&#125;</span><br><span class="line">workout = pd.DataFrame(workout_dict)</span><br><span class="line">display(workout)</span><br></pre></td></tr></table></figure><p>查看列名/索引（column index）和行索引：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">workout.columns  <span class="comment">#Index([&#x27;calories&#x27;, &#x27;duration&#x27;, &#x27;type&#x27;], dtype=&#x27;object&#x27;)</span></span><br><span class="line">workout.index  <span class="comment">#RangeIndex(start=0, stop=4, step=1)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#转换成其他数据类型</span></span><br><span class="line">workout.columns.tolist()  <span class="comment">#[&#x27;calories&#x27;, &#x27;duration&#x27;, &#x27;type&#x27;]</span></span><br><span class="line">workout.index.to_numpy()  <span class="comment">#array([0, 1, 2, 3])</span></span><br></pre></td></tr></table></figure><p>当然我们也可以单独指定/改变索引：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#直接重新赋值行索引</span></span><br><span class="line">workout.index=[<span class="string">&quot;day1&quot;</span>, <span class="string">&quot;day2&quot;</span>, <span class="string">&quot;day3&quot;</span>, <span class="string">&quot;day4&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#直接重新赋值列列名/索引</span></span><br><span class="line">workout.columns=[<span class="string">&quot;Calories&quot;</span>, <span class="string">&quot;Duration&quot;</span>, <span class="string">&quot;Type&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 单独改变某一列列名/索引</span></span><br><span class="line">workout = workout.rename(columns=&#123;<span class="string">&quot;Calories&quot;</span>: <span class="string">&quot;Cal&quot;</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">#转换回dict字典</span></span><br><span class="line">workout_dict = workout.to_dict()</span><br><span class="line"></span><br><span class="line"><span class="comment">#在构建pandas时单独指定索引</span></span><br><span class="line">workout = pd.DataFrame(workout_dict, index=[<span class="string">&#x27;day1&#x27;</span>, <span class="string">&#x27;day2&#x27;</span>, <span class="string">&#x27;day3&#x27;</span>, <span class="string">&#x27;day4&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用reset_index()重新建立索引，把成为索引的列恢复成正常列</span></span><br><span class="line">survive_by_class = survive_by_class.reset_index()</span><br><span class="line"></span><br><span class="line"><span class="comment"># set_index与reset_index互为逆运算</span></span><br><span class="line">survive_by_class.set_index([<span class="string">&#x27;Pclass&#x27;</span>, <span class="string">&#x27;Survived&#x27;</span>])</span><br></pre></td></tr></table></figure><p>访问表格中的列与行：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#选择一列</span></span><br><span class="line">workout[<span class="string">&#x27;Calories&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#选择一列（保留列表形式）</span></span><br><span class="line">workout[[<span class="string">&#x27;Calories&#x27;</span>]]</span><br><span class="line"></span><br><span class="line"><span class="comment">#loc: 根据索引选取数据</span></span><br><span class="line">workout.loc[<span class="string">&#x27;day1&#x27;</span>, :]</span><br><span class="line"></span><br><span class="line"><span class="comment">#保留DataFrame格式</span></span><br><span class="line">workout.loc[[<span class="string">&#x27;day1&#x27;</span>], :]</span><br><span class="line"></span><br><span class="line"><span class="comment">#iloc: 根据位置选取数据，从0开始编号（类比: 访问list中的数据）</span></span><br><span class="line">workout.iloc[<span class="number">0</span>, :]</span><br><span class="line">workout.iloc[[<span class="number">0</span>], :]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 访问表格左上角前两行前两列的数据</span></span><br><span class="line">workout.iloc[<span class="number">0</span>:<span class="number">2</span>, <span class="number">0</span>:<span class="number">2</span>]</span><br><span class="line"><span class="comment"># workout.iloc[[0,1], [0,1]]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#.at[]: 访问单独数据</span></span><br><span class="line">workout.at[<span class="string">&#x27;day1&#x27;</span>, <span class="string">&#x27;calories&#x27;</span>]  <span class="comment">#420</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#改变单个数据的值</span></span><br><span class="line">workout.at[<span class="string">&#x27;day1&#x27;</span>, <span class="string">&#x27;calories&#x27;</span>] = <span class="number">800</span></span><br></pre></td></tr></table></figure><h4 id="数据的输出-输入"><a href="#数据的输出-输入" class="headerlink" title="数据的输出/输入"></a>数据的输出/输入</h4><p>读取外部文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#例如若txt文件是用Tab分隔的，指定分隔符为&quot;\t&quot;</span></span><br><span class="line">pd.read_csv(<span class="string">&#x27;imdb_top_10000.txt&#x27;</span>, sep=<span class="string">&quot;\t&quot;</span>)</span><br></pre></td></tr></table></figure><p>导出到文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.to_csv(<span class="string">&#x27;test.csv&#x27;</span>, header=<span class="literal">True</span>, index=<span class="literal">True</span>, sep=<span class="string">&#x27;,&#x27;</span>)</span><br></pre></td></tr></table></figure><p>使用 <code>names</code> 设置列标题行，使用<code>index_col=0</code>，直接将第一列作为索引，不额外添加列。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">names = [<span class="string">&#x27;id&#x27;</span>,<span class="string">&#x27;title&#x27;</span>,<span class="string">&#x27;year&#x27;</span>,<span class="string">&#x27;rating&#x27;</span>,<span class="string">&#x27;votes&#x27;</span>,<span class="string">&#x27;length&#x27;</span>,<span class="string">&#x27;genres&#x27;</span>]</span><br><span class="line">data = pd.read_csv(<span class="string">&#x27;imdb_top_10000.txt&#x27;</span>, sep=<span class="string">&quot;\t&quot;</span>, names=names, index_col=<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>使用 Pandas 方法查看表格信息：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打印表格的行数</span></span><br><span class="line"><span class="built_in">len</span>(data)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印表格的形状(行数与列数)</span></span><br><span class="line">data.shape</span><br><span class="line"></span><br><span class="line"><span class="comment">#默认返回前5行，也可以在在方法中指定行数</span></span><br><span class="line">data.head()</span><br><span class="line">data.head(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#默认返回倒数5行，也可以在方法中指定行数</span></span><br><span class="line">data.tail()</span><br><span class="line">data.tail(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#随机返回5行数据</span></span><br><span class="line">data.sample(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#返回统计性信息（索引、每一列的信息、表格占用电脑内存的大小）等。</span></span><br><span class="line">data.info()</span><br><span class="line"></span><br><span class="line"><span class="comment">#返回表格中所有数字类型列的分布信息（平均值、标准偏差）等。</span></span><br><span class="line">data.describe()</span><br><span class="line"></span><br><span class="line"><span class="comment">#返回每一列的数据类型信息</span></span><br><span class="line">data.dtypes</span><br></pre></td></tr></table></figure><p>表格列搜索排序：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#按rating从高到低排序</span></span><br><span class="line">data.sort_values(by=<span class="string">&#x27;rating&#x27;</span>, ascending=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#打印所有的不重复的元素</span></span><br><span class="line">data[<span class="string">&#x27;year&#x27;</span>].unique()</span><br><span class="line"></span><br><span class="line"><span class="comment"># # 使用for loop 查看每一列的独特值</span></span><br><span class="line"><span class="comment"># for col in titanic.columns:</span></span><br><span class="line"><span class="comment">#     print(&#x27;列名：&#x27;, col, titanic[col].unique())</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#分组title、year两列</span></span><br><span class="line">data[[<span class="string">&#x27;title&#x27;</span>, <span class="string">&#x27;year&#x27;</span>]]</span><br><span class="line"></span><br><span class="line"><span class="comment">#返回特定数值</span></span><br><span class="line">data[<span class="string">&#x27;rating&#x27;</span>].mean()</span><br><span class="line">data[<span class="string">&#x27;rating&#x27;</span>].<span class="built_in">max</span>()</span><br><span class="line">data[<span class="string">&#x27;rating&#x27;</span>].<span class="built_in">min</span>()</span><br><span class="line">data[<span class="string">&#x27;rating&#x27;</span>].value_counts()</span><br><span class="line">data[<span class="string">&#x27;rating&#x27;</span>].value_counts().sort_index()</span><br><span class="line">data[<span class="string">&#x27;rating&#x27;</span>].value_counts().sort_index(ascending=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><p>删除一些列</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除一列</span></span><br><span class="line"><span class="keyword">del</span> titanic[<span class="string">&#x27;SibSp&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除多个列</span></span><br><span class="line">titanic = titanic.drop(columns=[<span class="string">&#x27;Parch&#x27;</span>, <span class="string">&#x27;Ticket&#x27;</span>, <span class="string">&#x27;Fare&#x27;</span>])</span><br><span class="line"><span class="comment"># titanic.drop(columns=[&#x27;Parch&#x27;, &#x27;Ticket&#x27;, &#x27;Fare&#x27;], inplace=True)</span></span><br></pre></td></tr></table></figure><p>高级选择：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#看看特定年份之后的所有数据</span></span><br><span class="line">data[data[<span class="string">&#x27;year&#x27;</span>] &gt; <span class="number">1995</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#查找特定年份的电影</span></span><br><span class="line">data[data[<span class="string">&#x27;year&#x27;</span>] == <span class="number">1966</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#查找一个范围</span></span><br><span class="line">data[(data[<span class="string">&#x27;year&#x27;</span>] &gt; <span class="number">1995</span>) &amp; (data[<span class="string">&#x27;year&#x27;</span>] &lt; <span class="number">2000</span>)]</span><br><span class="line"></span><br><span class="line"><span class="comment">#查找1996年至1999年收视率最高的电影</span></span><br><span class="line">data[(data[<span class="string">&#x27;year&#x27;</span>] &gt; <span class="number">1995</span>) &amp; (data[<span class="string">&#x27;year&#x27;</span>] &lt; <span class="number">2000</span>)].sort_values(by=<span class="string">&#x27;rating&#x27;</span>, ascending=<span class="literal">False</span>).head(<span class="number">10</span>) </span><br></pre></td></tr></table></figure><p>根据列的值分类，对每个类型集计信息（groupby）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打印表格中的男女数量分布</span></span><br><span class="line">titanic[[<span class="string">&#x27;Sex&#x27;</span>, <span class="string">&#x27;PassengerId&#x27;</span>]].groupby([<span class="string">&#x27;Sex&#x27;</span>]).count()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 针对多列进行信息集计</span></span><br><span class="line"><span class="comment"># 每个船舱等级乘客生存和死亡的概率</span></span><br><span class="line">survive_by_class = titanic[[<span class="string">&#x27;Pclass&#x27;</span>, <span class="string">&#x27;Survived&#x27;</span>, <span class="string">&#x27;PassengerId&#x27;</span>]].groupby([<span class="string">&#x27;Pclass&#x27;</span>, <span class="string">&#x27;Survived&#x27;</span>]).count()</span><br><span class="line"></span><br><span class="line">survive_by_class = survive_by_class.reset_index()</span><br><span class="line">survive_by_class = survive_by_class.rename(columns=&#123;<span class="string">&quot;PassengerId&quot;</span>: <span class="string">&quot;count&quot;</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">#每年电影的平均评分</span></span><br><span class="line">data.groupby(data[<span class="string">&#x27;year&#x27;</span>])[<span class="string">&#x27;rating&#x27;</span>].mean()</span><br></pre></td></tr></table></figure><p>根据列的值，动态选择记录（filter）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#isnull 返回是否缺失的值，缺失返回True</span></span><br><span class="line"><span class="comment">#～表示按位取反</span></span><br><span class="line">filt = (~titanic[<span class="string">&#x27;Age&#x27;</span>].isnull())  <span class="comment"># &amp; | ~</span></span><br><span class="line">titanic = titanic.loc[filt, :]</span><br><span class="line">titanic.head()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 年龄中位数</span></span><br><span class="line">titanic[[<span class="string">&#x27;Pclass&#x27;</span>, <span class="string">&#x27;Survived&#x27;</span>, <span class="string">&#x27;Age&#x27;</span>]].groupby([<span class="string">&#x27;Pclass&#x27;</span>, <span class="string">&#x27;Survived&#x27;</span>]).median()</span><br></pre></td></tr></table></figure><p><img src="https://blog.zhuangzhihao.top/img/pandas.png" alt></p><p>使用 <code>agg</code> 可以完成很多统计量的计算：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">percentile_25</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="keyword">return</span> x.quantile(<span class="number">0.25</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">percentile_75</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="keyword">return</span> x.quantile(<span class="number">0.75</span>)</span><br><span class="line"></span><br><span class="line">age_agg = titanic[[<span class="string">&#x27;Pclass&#x27;</span>, <span class="string">&#x27;Survived&#x27;</span>, <span class="string">&#x27;Age&#x27;</span>]].groupby([<span class="string">&#x27;Pclass&#x27;</span>, <span class="string">&#x27;Survived&#x27;</span>]).agg(</span><br><span class="line">    [<span class="string">&#x27;min&#x27;</span>, <span class="string">&#x27;max&#x27;</span>, <span class="string">&#x27;median&#x27;</span>, <span class="string">&#x27;mean&#x27;</span>, <span class="built_in">len</span>, np.std, percentile_25, percentile_75])</span><br><span class="line"></span><br><span class="line">age_agg</span><br></pre></td></tr></table></figure><h3 id="五、可视化表格"><a href="#五、可视化表格" class="headerlink" title="五、可视化表格"></a>五、可视化表格</h3><p>一旦我们评估了数据，可以以更直观的形式绘制数据可能会有用。我们使用 Matplotlib 库来做到这一点。Matplotlib是一个 Python 2D 绘图库，以各种格式生成数字。使用 Matplotlib 可以轻松生成绘图、直方图、框图、功率谱、条形图、饼图、误差图、散点图等。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line"><span class="comment">#默认Plot</span></span><br><span class="line">data.plot()</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置图片参数</span></span><br><span class="line">plt.figure(figsize=(<span class="number">10</span>,<span class="number">5</span>),dpi=<span class="number">600</span>,facecolor=<span class="string">&#x27;white&#x27;</span>,edgecolor=<span class="string">&#x27;white&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#做一个散点图：</span></span><br><span class="line">data.plot(kind=<span class="string">&#x27;scatter&#x27;</span>, x=<span class="string">&#x27;rating&#x27;</span>, y=<span class="string">&#x27;votes&#x27;</span>, alpha=<span class="string">&#x27;0.3&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#做一个矩形图</span></span><br><span class="line">data[<span class="string">&#x27;rating&#x27;</span>].plot(kind=<span class="string">&#x27;hist&#x27;</span>)</span><br></pre></td></tr></table></figure><p>查看 DataFrame.plot <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.plot.html">文档</a>，您会发现创建所有不同的变体的方法。</p><p>另一个绘图库是 Seaborn。Seaborn 是一个基于 matplotlib 的 Python 数据可视化库。它提供了一个高级界面，用于绘制有吸引力且信息丰富的统计图形。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"></span><br><span class="line">plt.figure(facecolor=<span class="string">&#x27;white&#x27;</span>)</span><br><span class="line"></span><br><span class="line">sns.lmplot(x=<span class="string">&#x27;rating&#x27;</span>, y=<span class="string">&#x27;votes&#x27;</span>, data=data)</span><br><span class="line"><span class="comment">#这是一个与使用Matplotlib非常相似的绘图，但有一个自动线性回归来解释数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Seaborn能做的另一件很酷的事情是pairplot，它会自动绘制所有数字列相互比较的图像</span></span><br><span class="line">sns.pairplot(data)</span><br></pre></td></tr></table></figure><p>现在我们已经可视化了数据，我们挖掘出了一个普通的最小二乘（或OLS）回归。如果对计算统计数据感兴趣，有一个名为 <a href="http://www.statsmodels.org/stable/index.html">StatsModels</a> 的库可以帮助您做到这一点。StatsModels为估计许多不同的统计模型以及进行统计测试和统计数据探索提供了类和功能。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 研究一个普通的最小二乘（或OLS）回归</span></span><br><span class="line"><span class="keyword">import</span> statsmodels.api <span class="keyword">as</span> sm</span><br><span class="line">results = sm.OLS(data[<span class="string">&quot;votes&quot;</span>], data[<span class="string">&quot;rating&quot;</span>]).fit()</span><br><span class="line">results.summary()</span><br></pre></td></tr></table></figure><h3 id="六、数据清洗"><a href="#六、数据清洗" class="headerlink" title="六、数据清洗"></a>六、数据清洗</h3><p>数据清理是数据分析的重要组成部分。为了进行适当的分析，您必须确保您的数据干净且没有错误。</p><p>例如，如果想去除电影标题后的年份，可以字符串切片：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#The Dark Knight(2008)</span></span><br><span class="line">data[<span class="string">&#x27;formatted title&#x27;</span>] = data[<span class="string">&#x27;title&#x27;</span>].<span class="built_in">str</span>[:-<span class="number">7</span>]  <span class="comment">#The Dark Knight</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#另一种方法，寻找括号并拆分它们（将一些东西分成一个列表）</span></span><br><span class="line">data[<span class="string">&#x27;title&#x27;</span>].<span class="built_in">str</span>.split(<span class="string">&#x27;\(&#x27;</span>).<span class="built_in">str</span>[<span class="number">0</span>] </span><br><span class="line"><span class="comment">#或</span></span><br><span class="line">data[<span class="string">&#x27;title&#x27;</span>].<span class="built_in">str</span>.split(<span class="string">&#x27;\(&#x27;</span>).<span class="built_in">str</span>.get(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>又如，如果想去除时长后的字符串：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#142 mins.</span></span><br><span class="line">data[<span class="string">&#x27;length&#x27;</span>].<span class="built_in">str</span>(-<span class="number">6</span>)  <span class="comment">#142</span></span><br><span class="line">data[<span class="string">&#x27;length&#x27;</span>].<span class="built_in">str</span>.split().<span class="built_in">str</span>.get(<span class="number">0</span>)  <span class="comment">#142</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#问题是Jupyter仍然认为这是一根字符串，但我们可以快速将其转换为整数</span></span><br><span class="line">data[<span class="string">&#x27;length&#x27;</span>].<span class="built_in">str</span>.split().<span class="built_in">str</span>.get(<span class="number">0</span>).astype(<span class="string">&#x27;int&#x27;</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment">#或</span></span><br><span class="line">data[<span class="string">&#x27;length&#x27;</span>].<span class="built_in">str</span>.replace(<span class="string">&#x27; min &#x27;</span>, <span class="string">&#x27; &#x27;</span> ).astype(<span class="string">&#x27;int)</span></span><br></pre></td></tr></table></figure><p>当我们将其转换为格式化的长度列时，就像我们创建格式化的标题列一样，我们就可以在与所有其他数字列的配对绘图中正确地看到它。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;NumPy 是 Numerical Python 的缩写，是一个开源的 Python 科学计算库，也是 SciPy、Scikit-Learn、tenorflow、paddlepaddle 等各种数据科学类库的基础库。使用 NumPy 可以方便的使用数组、矩阵进行计算。Pandas 是基于 NumPy 数组构建的，但二者最大的不同是 Pandas 是专门为处理表格和混杂数据设计的，适用于统计分析中的表结构，而 NumPy 更适合处理统一的数值数组数据。虽然在之前已经在 &lt;a href=&quot;/Python-for-Data-Science&quot;&gt;Python for Data Science&lt;/a&gt; 一课中学习并整理英文笔记，但我认为还是有必要对于数据处理中的基础内容、工作流程和注意事项进行详细补充。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Python" scheme="http://blog.zhuangzhihao.top/categories/Python/"/>
    
    
    <category term="Pandas" scheme="http://blog.zhuangzhihao.top/tags/Pandas/"/>
    
    <category term="NumPy" scheme="http://blog.zhuangzhihao.top/tags/NumPy/"/>
    
  </entry>
  
  <entry>
    <title>Selenium for Python</title>
    <link href="http://blog.zhuangzhihao.top/Selenium%E7%88%AC%E8%99%AB/"/>
    <id>http://blog.zhuangzhihao.top/Selenium%E7%88%AC%E8%99%AB/</id>
    <published>2022-11-30T16:00:00.000Z</published>
    <updated>2022-12-01T13:14:00.930Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="http://www.seleniumhq.org/">Selenium</a> 是一个 Web 的自动化测试工具，最初是为网站自动化测试而开发的，Selenium 可以直接运行在浏览器上，它支持所有主流的浏览器。因为 Selenium 可以控制浏览器发送请求，并获取网页数据，因此可以应用于爬虫领域。Selenium 可以根据我们的指令，让浏览器自动加载页面，获取需要的数据，甚至页面截屏，或者判断网站上某些动作是否发生。Selenium Python bindings 提供了一个简单的 API，让你使用 Python 和 Selenium WebDriver 来编写功能/校验测试。 </p></blockquote><span id="more"></span><h3 id="一、Selenium-概述"><a href="#一、Selenium-概述" class="headerlink" title="一、Selenium 概述"></a>一、Selenium 概述</h3><p>Selenium 支持多平台、多浏览器、多语言去实现自动化测试，是一个开源和可移植的 Web 测试框架，支持并行测试执行，从而减少了时间并提高了测试效率。利用它，我们可以编写相关的自动化程序，让程序完全像人一样在浏览器里面操作 Web 界面，比如模拟鼠标点击、模拟键盘输入等等。不但能够操作 Web 界面，还能从 Web 中获取信息，并且相对来说，使用 Selenium 来获取信息更加简单，它的基本原理是我们编写自动化程序之后利用浏览器驱动直接对浏览器进行操作，只要我们用户能在浏览器上获得的信息使用 Selenium 都可以获得。</p><p>安装 Selenium：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install selenium </span><br></pre></td></tr></table></figure><h3 id="二、浏览器驱动"><a href="#二、浏览器驱动" class="headerlink" title="二、浏览器驱动"></a>二、浏览器驱动</h3><p>Selenium 自己不带浏览器，不支持浏览器的功能，它需要与第三方浏览器结合在一起才能使用。浏览器驱动用于使用 selenium 操控本地浏览器执行自动化操作。根据本地电脑 Chrome 的版本需要下载对应的﻿﻿<a href="https://npmmirror.com/mirrors/chromedriver"> ChromeDriver</a>，否则无法操控 Chrome 浏览器使用 Selenium 启动。其他浏览器也可以下载对应的驱动包，例如：<a href="https://developer.microsoft.com/en-us/microsoft-edge/tools/webdriver/#downloads">新版 Edge 驱动</a>，<a href="https://github.com/mozilla/geckodriver/releases">Firefox 驱动</a>。</p><p>驱动包不需要安装，只需要解压到 <code>/usr/local/bin</code> 目录，后续会在代码中调用：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> ~/Downloads/msedgedriver  /usr/local/bin</span><br></pre></td></tr></table></figure><p>由于 Safari 浏览器本身已经集成了 <code>safaridriver</code>，只要勾选 Safari - 开发 - 允许远程自动化并在终端输入开启即可：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">safaridriver --<span class="built_in">enable</span></span><br></pre></td></tr></table></figure><h3 id="三、控制浏览器自动网页"><a href="#三、控制浏览器自动网页" class="headerlink" title="三、控制浏览器自动网页"></a>三、控制浏览器自动网页</h3><p>控制 Safari 浏览器打开网页：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入 webdriver</span></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="comment"># 调用环境变量指定的浏览器创建浏览器对象</span></span><br><span class="line">driver = webdriver.Safari()</span><br><span class="line"><span class="comment"># 隐性等待设置了一个时间，在一段时间内网页是否加载完成，如果完成了，就进行下一步；在设置的时间内没有加载完成，则会报超时加载。</span></span><br><span class="line">driver.implicitly_wait(<span class="number">10</span>)</span><br><span class="line"><span class="comment"># get方法会一直等到页面被完全加载，然后才会继续程序</span></span><br><span class="line">driver.get(<span class="string">&#x27;https://www.baidu.com&#x27;</span>)</span><br><span class="line"><span class="comment"># id=&quot;kw&quot;是百度搜索输入框，输入字符串&quot;长城&quot;</span></span><br><span class="line">driver.find_element(<span class="string">&#x27;id&#x27;</span>, <span class="string">&#x27;kw&#x27;</span>).send_keys(<span class="string">&#x27;长城&#x27;</span>)</span><br><span class="line"><span class="comment"># id=&quot;su&quot;是百度搜索按钮，click() 是模拟点击</span></span><br><span class="line">driver.find_element(<span class="string">&#x27;id&#x27;</span>, <span class="string">&#x27;su&#x27;</span>).click()</span><br><span class="line"><span class="comment"># 等待一定时间</span></span><br><span class="line">sleep(<span class="number">5</span>)</span><br><span class="line"><span class="comment"># 关闭浏览器</span></span><br><span class="line">driver.quit()</span><br></pre></td></tr></table></figure><p>当然也可以调用 Chrome 驱动，控制 Chrome 浏览器打开网页：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入 webdriver</span></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="comment"># 调用键盘按键操作时需要引入的Keys包</span></span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.keys <span class="keyword">import</span> Keys</span><br><span class="line"><span class="comment"># 调用环境变量指定的PhantomJS浏览器创建浏览器对象</span></span><br><span class="line">driver = webdriver.Chrome(<span class="string">&quot;/usr/local/bin/chromedriver&quot;</span>)</span><br><span class="line"><span class="comment"># get方法会一直等到页面被完全加载，然后才会继续程序，通常测试会在这里选择 time.sleep(2)</span></span><br><span class="line">driver.get(<span class="string">&quot;http://www.baidu.com/&quot;</span>)</span><br><span class="line"><span class="comment"># id=&quot;kw&quot;是百度搜索输入框，输入字符串&quot;长城&quot;</span></span><br><span class="line">driver.find_element(By.CSS_SELECTOR,<span class="string">&quot;#kw&quot;</span>).send_keys(<span class="string">&quot;长城&quot;</span>)</span><br><span class="line"><span class="comment"># id=&quot;su&quot;是百度搜索按钮，click() 是模拟点击</span></span><br><span class="line">driver.find_element(By.CSS_SELECTOR,<span class="string">&quot;#su&quot;</span>).click()</span><br><span class="line"><span class="comment"># 关闭浏览器</span></span><br><span class="line">driver.quit()</span><br></pre></td></tr></table></figure><h3 id="四、常用操作"><a href="#四、常用操作" class="headerlink" title="四、常用操作"></a>四、常用操作</h3><h4 id="元素定位"><a href="#元素定位" class="headerlink" title="元素定位"></a>元素定位</h4><p>获取单个元素：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">driver.find_element(By.ID,<span class="string">&quot;inputOriginal&quot;</span>)</span><br><span class="line">driver.find_element(By.CSS_SELECTOR,<span class="string">&quot;#inputOriginal&quot;</span>)</span><br><span class="line">driver.find_element(By.TAG_NAME,<span class="string">&quot;div&quot;</span>)</span><br><span class="line">driver.find_element(By.NAME,<span class="string">&quot;username&quot;</span>)</span><br><span class="line">driver.find_element(By.LINK_TEXT,<span class="string">&quot;下一页&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li>如果找不到相应的元素会报错：<code>selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: xx</code>。</li></ul><p>获取多个元素：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">driver.find_elements(By.ID,<span class="string">&quot;inputOriginal&quot;</span>)</span><br><span class="line">driver.find_elements(By.CSS_SELECTOR,<span class="string">&quot;#inputOriginal&quot;</span>)</span><br><span class="line">driver.find_elements(By.TAG_NAME,<span class="string">&quot;div&quot;</span>)</span><br><span class="line">driver.find_elements(By.NAME,<span class="string">&quot;username&quot;</span>)</span><br><span class="line">driver.find_elements(By.LINK_TEXT,<span class="string">&quot;下一页&quot;</span>)</span><br></pre></td></tr></table></figure><p>访问有道翻译网站，输入单词，并获取翻译后的内容：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line">driver = webdriver.Safari()</span><br><span class="line"><span class="comment"># 加载有道翻译页面</span></span><br><span class="line">driver.get(<span class="string">&quot;https://fanyi.youdao.com/&quot;</span>)</span><br><span class="line"><span class="comment"># 获取输入框</span></span><br><span class="line"><span class="built_in">input</span> = driver.find_element(By.ID,<span class="string">&quot;inputOriginal&quot;</span>)</span><br><span class="line"><span class="comment"># 输入内容</span></span><br><span class="line"><span class="built_in">input</span>.send_keys(<span class="string">&quot;hello&quot;</span>)</span><br><span class="line"><span class="comment"># 获取翻译按钮</span></span><br><span class="line">tbtn = driver.find_element(By.ID,<span class="string">&quot;transMachine&quot;</span>)</span><br><span class="line"><span class="comment"># 发现页面被遮挡，此时无法点击</span></span><br><span class="line"><span class="comment"># 先获取遮挡的广告条，点击关闭按钮</span></span><br><span class="line">close_btn = driver.find_element(By.CSS_SELECTOR,<span class="string">&quot;.guide-con .guide-close&quot;</span>)</span><br><span class="line">close_btn.click()</span><br><span class="line"><span class="comment">#点击翻译</span></span><br><span class="line">tbtn.click()</span><br><span class="line"><span class="comment">#获取翻译后的内容</span></span><br><span class="line">transTarget = driver.find_element(By.ID,<span class="string">&quot;transTarget&quot;</span>)</span><br><span class="line">sleep(<span class="number">5</span>)</span><br><span class="line"><span class="built_in">print</span>(transTarget.text)</span><br></pre></td></tr></table></figure><h4 id="内容获取"><a href="#内容获取" class="headerlink" title="内容获取"></a>内容获取</h4><ul><li><code>size</code>：返回元素大小；</li><li><code>text</code>：获取元素的文本（<code>&lt;div&gt;hello&lt;/div&gt;</code>）；</li><li><code>title</code>：获取页面 <code>title</code>；</li><li><code>current_url</code>：获取当前页面 <code>URL</code>；</li><li><code>get_attribute()</code>：获取属性值（<code>&lt;a href=&quot;xxxx&quot;&gt;百度&lt;/a&gt;</code>）；</li><li><code>is_display()</code>：判断元素是否可见；</li><li><code>is_enabled()</code>：判断元素是否可用。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">driver = webdriver.Chrome(<span class="string">&quot;./chromedriver.exe&quot;</span>)</span><br><span class="line"><span class="comment"># 加载有道翻译页面</span></span><br><span class="line">driver.get(<span class="string">&quot;https://fanyi.youdao.com/&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(driver.title)</span><br><span class="line"><span class="built_in">print</span>(driver.current_url)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取输入框</span></span><br><span class="line">transMachine = driver.find_element(By.ID,<span class="string">&quot;transMachine&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(transMachine.size)</span><br><span class="line"><span class="built_in">print</span>(transMachine.text)</span><br><span class="line"><span class="built_in">print</span>(transMachine.get_attribute(<span class="string">&quot;href&quot;</span>))</span><br><span class="line"><span class="built_in">print</span>(transMachine.is_displayed())</span><br><span class="line"><span class="built_in">print</span>(transMachine.is_enabled())</span><br></pre></td></tr></table></figure><h4 id="窗口操作"><a href="#窗口操作" class="headerlink" title="窗口操作"></a>窗口操作</h4><ul><li><code>maximize_window()</code>：模拟浏览器最大化按钮；</li><li><code>set_window_size(100,100)</code>：设置浏览器大小（宽、高像素点）；</li><li><code>set_window_position(300,200)</code>：设置浏览器位置；</li><li><code>back()</code>：模拟浏览器后退按钮；</li><li><code>forward()</code>：模拟浏览器前进按钮；</li><li><code>refresh()</code>：模拟浏览器 F5 刷新；</li><li><code>close()</code> ：模拟浏览器关闭按钮（关闭单个窗口）；</li><li><code>quit()</code>：关闭所有 WebDriver 启动的窗口。</li></ul><h3 id="五、元素等待"><a href="#五、元素等待" class="headerlink" title="五、元素等待"></a>五、元素等待</h3><p>例如对于程序翻页获取每页元素：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.keys <span class="keyword">import</span> Keys</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome(<span class="string">&quot;./chromedriver.exe&quot;</span>)</span><br><span class="line"><span class="comment"># 加载当当网</span></span><br><span class="line">driver.get(<span class="string">&quot;https://www.dangdang.com/&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取输入框</span></span><br><span class="line">key = driver.find_element(By.ID,<span class="string">&quot;key_S&quot;</span>)</span><br><span class="line">key.send_keys(<span class="string">&quot;科幻&quot;</span>)</span><br><span class="line"><span class="comment"># 获取搜索框，点击搜索</span></span><br><span class="line">search = driver.find_element(By.CSS_SELECTOR,<span class="string">&quot;.search .button&quot;</span>)</span><br><span class="line">search.click()</span><br><span class="line"><span class="comment"># 获取商品标题及价格</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    shoplist = driver.find_elements(By.CSS_SELECTOR, <span class="string">&quot;.shoplist li&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> li <span class="keyword">in</span> shoplist:</span><br><span class="line">        <span class="built_in">print</span>(li.find_element(By.CSS_SELECTOR, <span class="string">&quot;a&quot;</span>).get_attribute(<span class="string">&quot;title&quot;</span>))</span><br><span class="line">    <span class="comment"># 获取下一页按钮</span></span><br><span class="line">    <span class="built_in">next</span> = driver.find_element(By.LINK_TEXT, <span class="string">&quot;下一页&quot;</span>)</span><br><span class="line">    <span class="built_in">next</span>.click()</span><br></pre></td></tr></table></figure><p>现在的网页越来越多采用了 <code>Ajax</code> 技术，这样程序便不能确定何时某个元素完全加载出来了。如果实际页面等待时间过长导致某个 <code>dom</code> 元素还没出来，但是你的代码直接使用了这个 <code>WebElement</code>，那么就会抛出 <code>NullPointer</code> 的异常。</p><p>为了避免这种元素定位困难而且会提高产生 <code>ElementNotVisibleException</code> 的概率。所以 <code>Selenium</code> 提供了两种等待方式，一种是隐式等待，一种是显式等待。隐式等待是等待特定的时间，显式等待是指定某一条件直到这个条件成立时继续执行。</p><h4 id="显式等待"><a href="#显式等待" class="headerlink" title="显式等待"></a>显式等待</h4><p>显式等待使用 <code>WebDriverWait</code> 完成，指定某个条件，然后设置最长等待时间。如果在这个时间还没有找到元素，那么便会抛出异常了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WebDriverWait(driver, timeout, poll_frequency=POLL_FREQUENCY, ignored_exceptions=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><ul><li><code>driver</code>：所创建的浏览器 driver；</li><li><code>timeout</code>：最长时间长度（默认单位：秒）；</li><li><code>poll_frequency</code>：间隔检测时长（每）默认 0.5 秒；</li><li><code>ignored_exceptions</code>：方法调用中忽略的异常，默认只抛出找不到元素的异常。</li></ul><p>显式等待基础格式：<code>webDriverWait</code> + <code>until</code> +（判断条件）。</p><ul><li><p><code>until</code>：直到调用的方法返回值为 True：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">until(method, message=’’)</span><br><span class="line"><span class="comment"># method：expected_conditions 库中定义的方法</span></span><br><span class="line"><span class="comment"># message：自定义报错信息</span></span><br></pre></td></tr></table></figure></li><li><p>判断条件：</p><ul><li>判断当前页面标题是否为 <code>title</code>：<code>title_is(title)</code></li><li>判断当前页面标题是否包含 <code>title</code>：<code>title_contains(title)</code></li><li>判断此定位的元素是否存在：<code>presence_of_element_located(locator)</code></li><li>判断页面网址中是否包含 <code>url</code>：<code>url_contains(url)</code></li><li>判断此定位的元素是否可见：<code>visibility_of_element_located(locator)</code></li><li>判断此元素是否可见：<code>visibility_of(element)</code></li><li>判断此定位的一组元素是否至少存在一个：<code>presence_of_all_elements_located(locator)</code></li><li>判断此定位的一组元素至少有一个可见：<code>visibility_of_any_elements_located(locator)</code></li><li>判断此定位的一组元素全部可见：<code>visibility_of_all_elements_located(locator)</code></li><li>判断此定位中是否包含 <code>text_</code>的内容：<code>text_to_be_present_in_element(locator, text_)</code>_</li><li>判断此定位中的 <code>value</code> 属性中是否包含 <code>text_</code> 的内容：<code>text_to_be_present_in_element_value(locator, text_)</code></li><li>判断定位的元素是否为 <code>frame</code>，并直接切换到这个 <code>frame</code> 中：<code>frame_to_be_available_and_switch_to_it(locator)</code></li><li>判断定位的元素是否不可见：<code>invisibility_of_element_located(locator)</code></li><li>判断此元素是否不可见：<code>invisibility_of_element(element)</code></li><li>判断所定位的元素是否可见且可点击：<code>element_to_be_clickable(locator)</code></li><li>判断此元素是否不可用：<code>staleness_of(element)</code></li><li>判断该元素是否被选中：<code>element_to_be_selected(element)</code></li><li>判断定位的元素是否被选中：<code>element_located_to_be_selected(locator)</code></li><li><code>element</code>：所获得的元素</li><li><code>locator</code>：元素的定位信息</li><li><code>text_</code>：期望的文本信息</li></ul></li></ul><p>示例程序：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium.webdriver.support.ui <span class="keyword">import</span> WebDriverWait</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC</span><br><span class="line"><span class="comment"># 程序每0.5秒检查，是否满足：标题包含“百度一下”这个条件，检查是否满足条件的最长时间为：15秒，超过15秒仍未满足条件则抛出异常</span></span><br><span class="line">WebDriverWait(driver, <span class="number">15</span>, <span class="number">0.5</span>).until(EC.title_contains(<span class="string">&quot;百度一下&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 程序每0.5秒检查，是否满足：某定位的元素出现，检查是否满足条件的最长时间为：15秒，超过15秒仍未满足条件则抛出异常</span></span><br><span class="line">WebDriverWait(driver, <span class="number">15</span>, <span class="number">0.5</span>).until(EC.visibility_of_element_located(By.CSS_SELECTOR,<span class="string">&quot;XX&quot;</span>))</span><br></pre></td></tr></table></figure><h4 id="隐式等待"><a href="#隐式等待" class="headerlink" title="隐式等待"></a>隐式等待</h4><p>隐式等待比较简单，就是设置全局元素查找的超时时间：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">implicitly_wait(time_to_wait)</span><br></pre></td></tr></table></figure><p>设置的时间单位为秒，例如 <code>implicitly_wait(30)</code>，意思是超过 30 秒没有定位到一个元素，程序就会报错抛出异常，期间会一直轮询查找定位元素。</p><h3 id="六、页面操作和动作链"><a href="#六、页面操作和动作链" class="headerlink" title="六、页面操作和动作链"></a>六、页面操作和动作链</h3><h4 id="鼠标及键盘操作"><a href="#鼠标及键盘操作" class="headerlink" title="鼠标及键盘操作"></a>鼠标及键盘操作</h4><p>鼠标操作：</p><ul><li><code>context_click()</code>：此方法模拟鼠标右键点击效果；</li><li><code>double_click()</code>：此方法模拟双标双击效果；</li><li><code>drag_and_drop()</code>：此方法模拟双标拖动效果；</li><li><code>move_to_element()</code>：此方法模拟鼠标悬停效果；</li><li><code>perform()</code>：此方法用来触发执行以上的鼠标方法。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#导入动作链</span></span><br><span class="line"><span class="keyword">from</span> selenium.webdriver <span class="keyword">import</span> ActionChains</span><br><span class="line"></span><br><span class="line">driver.get(<span class="string">&quot;https://www.baidu.com/&quot;</span>)</span><br><span class="line">more = driver.find_element(By.LINK_TEXT,<span class="string">&quot;更多&quot;</span>)</span><br><span class="line"><span class="comment">#将鼠标移动到更多按钮</span></span><br><span class="line">ActionChains(driver).move_to_element(more).context_click().perform()</span><br></pre></td></tr></table></figure><p>键盘操作：</p><ul><li><code>send_keys(Keys.BACK_SPACE)</code>：删除键（BackSpace） ;</li><li><code>send_keys(Keys.SPACE)</code>：空格键（Space）;</li><li><code>send_keys(Keys.TAB)</code>：制表键（Tab）； </li><li><code>send_keys(Keys.ESCAPE)</code>：回退键（Esc）； </li><li><code>send_keys(Keys.ENTER)</code>：回车键（Enter） ；</li><li><code>send_keys(Keys.CONTROL,&#39;a&#39;)</code>：全选（Ctrl+A）； </li><li><code>send_keys(Keys.CONTROL,&#39;c&#39;)</code>：复制（Ctrl+C）；</li><li><code>driver.forward()</code>：前进；</li><li><code>driver.back()</code>：后退。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium.webdriver.common.keys <span class="keyword">import</span> Keys</span><br><span class="line"></span><br><span class="line">driver.get(<span class="string">&quot;https://www.baidu.com/&quot;</span>)</span><br><span class="line"></span><br><span class="line">element = driver.find_element(By.ID,<span class="string">&quot;kw&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输入用户名</span></span><br><span class="line">element.send_keys(<span class="string">&quot;admin1&quot;</span>)</span><br><span class="line"><span class="comment"># 删除1</span></span><br><span class="line">element.send_keys(Keys.BACK_SPACE)</span><br><span class="line"><span class="comment"># 全选</span></span><br><span class="line">element.send_keys(Keys.CONTROL,<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line"><span class="comment"># 复制</span></span><br><span class="line">element.send_keys(Keys.CONTROL,<span class="string">&#x27;c&#x27;</span>)</span><br><span class="line"><span class="comment"># 粘贴</span></span><br><span class="line"><span class="comment"># element.send_keys(Keys.CONTROL,&#x27;v&#x27;)</span></span><br></pre></td></tr></table></figure><h4 id="滚动条操作"><a href="#滚动条操作" class="headerlink" title="滚动条操作"></a>滚动条操作</h4><p>在 HTML 页面中，由于前端技术框架的原因，页面元素为动态显示，元素根据滚动条的下拉而被加载：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1. 设置 JavaScritp 脚本控制滚动条（左边距：0；上边距：1000）</span></span><br><span class="line"><span class="comment"># 单位像素</span></span><br><span class="line">js=<span class="string">&quot;window.scrollTo(0,1000)&quot;</span> </span><br><span class="line"><span class="comment">#2. WebDriver 调用 JS 脚本方法</span></span><br><span class="line">driver.execute_script(js)</span><br></pre></td></tr></table></figure><h4 id="窗口截图"><a href="#窗口截图" class="headerlink" title="窗口截图"></a>窗口截图</h4><p>自动化脚本是由程序去执行的，因此有时候打印的错误信息并不是十分明确。如果在执行出错的时候对当前窗口截图保存，那么通过图片就可以非常直观地看到出错的原因：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 截取当前窗口</span></span><br><span class="line">driver.get_screenshot_as_file(<span class="string">&quot;./demo.png&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="七、存储数据"><a href="#七、存储数据" class="headerlink" title="七、存储数据"></a>七、存储数据</h3><p>将数据写入 CSV 文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 读写CSV文件</span></span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"><span class="comment"># 以写入方式打开文件，如果文件不存在则自动创建</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;/Users/zhihaozhuang/Downloads/test.csv&quot;</span>, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line"><span class="comment"># 获取csv writer，用于写入csv格式数据</span></span><br><span class="line">writer = csv.writer(f)</span><br><span class="line"><span class="comment"># 写入数据</span></span><br><span class="line">writer.writerow([<span class="string">&quot;张三&quot;</span>, <span class="string">&quot;男&quot;</span>, <span class="string">&quot;1.7&quot;</span>])</span><br><span class="line"><span class="comment"># 关闭文件</span></span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>使用 <a href="https://zhuanlan.zhihu.com/p/60003892">pymysql</a> 将数据写入至 MySQL：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install pymysql</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line">  </span><br><span class="line"><span class="comment"># 创建连接</span></span><br><span class="line">conn = pymysql.connect(host=<span class="string">&#x27;127.0.0.1&#x27;</span>, port=<span class="number">3306</span>, user=<span class="string">&#x27;root&#x27;</span>, passwd=<span class="string">&#x27;&#x27;</span>, db=<span class="string">&#x27;tkq1&#x27;</span>, charset=<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line"><span class="comment"># 创建游标</span></span><br><span class="line">cursor = conn.cursor()</span><br><span class="line">  </span><br><span class="line"><span class="comment"># 执行SQL，并返回收影响行数</span></span><br><span class="line">effect_row = cursor.execute(<span class="string">&quot;select * from tb7&quot;</span>)</span><br><span class="line">  </span><br><span class="line"><span class="comment"># 执行SQL，并返回受影响行数</span></span><br><span class="line"><span class="comment">#effect_row = cursor.execute(&quot;update tb7 set pass = &#x27;123&#x27; where nid = %s&quot;, (11,))</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 执行SQL，并返回受影响行数,执行多次</span></span><br><span class="line"><span class="comment">#effect_row = cursor.executemany(&quot;insert into tb7(user,pass,licnese)values(%s,%s,%s)&quot;, [(&quot;u1&quot;,&quot;u1pass&quot;,&quot;11111&quot;),(&quot;u2&quot;,&quot;u2pass&quot;,&quot;22222&quot;)])</span></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="comment"># 提交，不然无法保存新建或者修改的数据</span></span><br><span class="line">conn.commit()</span><br><span class="line">  </span><br><span class="line"><span class="comment"># 关闭游标</span></span><br><span class="line">cursor.close()</span><br><span class="line"><span class="comment"># 关闭连接</span></span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure><h3 id="八、下载页面上的图片"><a href="#八、下载页面上的图片" class="headerlink" title="八、下载页面上的图片"></a>八、下载页面上的图片</h3><p>可以借助 <code>requests</code> 库来完成图片的保存，通过 <code>selenium</code> 获取图片的地址，再通过 <code>requests</code> 来将图片保存到本地。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install requests</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">driver = webdriver.Safari()</span><br><span class="line">driver.implicitly_wait(<span class="number">30</span>)</span><br><span class="line"></span><br><span class="line">driver.get(<span class="string">&#x27;http://baidu.com&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#  使用get_attribute()方法获取对应属性的属性值，src属性值就是图片地址。</span></span><br><span class="line">url = driver.find_element_by_css_selector(<span class="string">&#x27;#lg&gt;img&#x27;</span>).get_attribute(<span class="string">&#x27;src&#x27;</span>)</span><br><span class="line">driver.quit()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过requests发送一个get请求到图片地址，返回的响应就是图片内容</span></span><br><span class="line">r = requests.get(url)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将获取到的图片二进制流写入本地文件</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;baidu.png&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="comment"># 对于图片类型的通过r.content方式访问响应内容，将响应内容写入baidu.png中</span></span><br><span class="line">    f.write(r.content)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://www.seleniumhq.org/&quot;&gt;Selenium&lt;/a&gt; 是一个 Web 的自动化测试工具，最初是为网站自动化测试而开发的，Selenium 可以直接运行在浏览器上，它支持所有主流的浏览器。因为 Selenium 可以控制浏览器发送请求，并获取网页数据，因此可以应用于爬虫领域。Selenium 可以根据我们的指令，让浏览器自动加载页面，获取需要的数据，甚至页面截屏，或者判断网站上某些动作是否发生。Selenium Python bindings 提供了一个简单的 API，让你使用 Python 和 Selenium WebDriver 来编写功能/校验测试。 &lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Python" scheme="http://blog.zhuangzhihao.top/categories/Python/"/>
    
    
    <category term="Automation" scheme="http://blog.zhuangzhihao.top/tags/Automation/"/>
    
  </entry>
  
  <entry>
    <title>React 即时通信 ChatUI 其他列表组件</title>
    <link href="http://blog.zhuangzhihao.top/ChatUI%E5%85%B6%E4%BB%96%E5%88%97%E8%A1%A8/"/>
    <id>http://blog.zhuangzhihao.top/ChatUI%E5%85%B6%E4%BB%96%E5%88%97%E8%A1%A8/</id>
    <published>2022-11-24T16:00:00.000Z</published>
    <updated>2022-11-25T13:57:39.713Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>React 即时通信 UI 实战第九章。React 即时通信 UI 实战为<a href="https://www.bilibili.com/video/BV1PK4y1b7bY?p=2&amp;spm_id_from=pageDriver&amp;vd_source=0965c74096f788f105780e5d5d0e9ebf">峰华前端工程师</a>推出的 React 实战课程，以聊天（即时通信）为原型，构建了一整套的 UI 组件库，课程重点在于 UI 组件的分析和实现，力求打造自用组件库。本章包括其他列表组件，包括联系人列表、笔记列表和文件列表组件。</p></blockquote><span id="more"></span><h3 id="一、抽离过滤列表组件"><a href="#一、抽离过滤列表组件" class="headerlink" title="一、抽离过滤列表组件"></a>一、抽离过滤列表组件</h3><p>使用 Hygen 创建一个 <code>FilterList</code> 组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new FilterList</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/FilterList/index.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledFilterList</span> <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Input</span> <span class="keyword">from</span> <span class="string">&quot;components/Input&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Filter</span> <span class="keyword">from</span> <span class="string">&quot;components/Filter&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Select</span> <span class="keyword">from</span> <span class="string">&quot;components/Select&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Option</span> <span class="keyword">from</span> <span class="string">&quot;components/Option&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Button</span> <span class="keyword">from</span> <span class="string">&quot;components/Button&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">Plus</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/plus.svg&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">FilterList</span>(<span class="params">&#123;</span></span><br><span class="line"><span class="params">  children,</span></span><br><span class="line"><span class="params">  options,</span></span><br><span class="line"><span class="params">  filterLabel = <span class="string">&quot;列表排序&quot;</span>,</span></span><br><span class="line"><span class="params">  actionLabel,</span></span><br><span class="line"><span class="params">  ...rest</span></span><br><span class="line"><span class="params">&#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledFilterList</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Input.Search</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Filter</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">padding:</span> &quot;<span class="attr">20px</span> <span class="attr">0</span>&quot; &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;options &amp;&amp; (</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Filter.Filters</span> <span class="attr">label</span>=<span class="string">&#123;filterLabel&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              &#123;options.map((option, index) =&gt; (</span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">Option</span> <span class="attr">key</span>=<span class="string">&#123;index&#125;</span>&gt;</span>&#123;option&#125;<span class="tag">&lt;/<span class="name">Option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              ))&#125;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">Select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">Filter.Filters</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        )&#125;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        &#123;actionLabel &amp;&amp; (</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Filter.Action</span> <span class="attr">label</span>=<span class="string">&#123;actionLabel&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Icon</span> <span class="attr">icon</span>=<span class="string">&#123;Plus&#125;</span> <span class="attr">width</span>=<span class="string">&#123;12&#125;</span> <span class="attr">height</span>=<span class="string">&#123;12&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">Filter.Action</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        )&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Filter</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledFilterList</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">FilterList</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">  <span class="attr">options</span>: <span class="title class_">PropTypes</span>.<span class="property">array</span>,</span><br><span class="line">  <span class="attr">filterLabel</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">  <span class="attr">actionLabel</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">FilterList</span>;</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/FilterList/style.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledFilterList</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  padding: 30px;</span></span><br><span class="line"><span class="string">  height: 100vh;</span></span><br><span class="line"><span class="string">  overflow-y: auto;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledFilterList</span>;</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/FilterList/filterList.stories.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">FilterList</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;页面组件/FilterList&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">FilterList</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">FilterList</span>&gt;</span>此处添加 children list<span class="tag">&lt;/<span class="name">FilterList</span>&gt;</span></span>;</span><br></pre></td></tr></table></figure><p>再让 <code>MessageList</code> 使用新抽离出的 <code>FilterList</code> 组件，编辑 <code>src/components/MessageList/index.js</code>  文件：：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledMessageList</span>, &#123; <span class="title class_">ChatList</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">Plus</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/plus.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Filter</span> <span class="keyword">from</span> <span class="string">&quot;components/Filter&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Select</span> <span class="keyword">from</span> <span class="string">&quot;components/Select&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Option</span> <span class="keyword">from</span> <span class="string">&quot;components/Option&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Button</span> <span class="keyword">from</span> <span class="string">&quot;components/Button&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Input</span> <span class="keyword">from</span> <span class="string">&quot;components/Input&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">MessageCard</span> <span class="keyword">from</span> <span class="string">&quot;components/MessageCard&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> face1 <span class="keyword">from</span> <span class="string">&quot;assets/images/face-male-1.jpg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">FilterList</span> <span class="keyword">from</span> <span class="string">&quot;components/FilterList&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">MessageList</span>(<span class="params">&#123; children, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledMessageList</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">FilterList</span> <span class="attr">options</span>=<span class="string">&#123;[</span>&quot;<span class="attr">最新消息优先</span>&quot;, &quot;<span class="attr">在线好友优先</span>&quot;]&#125; <span class="attr">actionLabel</span>=<span class="string">&quot;创建会话&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ChatList</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          &#123;[1, 2, 3, 4, 5, 6].map((_, index) =&gt; (</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">MessageCard</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">key</span>=<span class="string">&#123;index&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">active</span>=<span class="string">&#123;index</span> === <span class="string">3&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">replied</span>=<span class="string">&#123;index</span> % <span class="attr">3</span> === <span class="string">0&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">avatarSrc</span>=<span class="string">&#123;face1&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">name</span>=<span class="string">&quot;李铭浩&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">avatarStatus</span>=<span class="string">&quot;online&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">statusText</span>=<span class="string">&quot;在线&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">time</span>=<span class="string">&quot;3 小时之前&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">message</span>=<span class="string">&quot;即使爬到最高的山上，一次也只能脚踏实地地&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">unreadCount</span>=<span class="string">&#123;2&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            /&gt;</span></span></span><br><span class="line"><span class="language-xml">          ))&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">ChatList</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">FilterList</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledMessageList</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">MessageList</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">MessageList</span>;</span><br></pre></td></tr></table></figure><h3 id="二、联系人列表组件开发"><a href="#二、联系人列表组件开发" class="headerlink" title="二、联系人列表组件开发"></a>二、联系人列表组件开发</h3><p>使用 Hygen 创建一个 <code>ContactCard</code> 组件，用于展示联系人卡片：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new ContactCard</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/ContactCard/index.js</code>  文件：：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">import React from <span class="string">&quot;react&quot;</span>;</span><br><span class="line">import PropTypes from <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line">import StyledContactCard, &#123; Intro, Name &#125; from <span class="string">&quot;./style&quot;</span>;</span><br><span class="line">import face from <span class="string">&quot;assets/images/face-male-1.jpg&quot;</span>;</span><br><span class="line">import Avatar from <span class="string">&quot;components/Avatar&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> ContactCard(&#123; children, ...rest &#125;) &#123;</span><br><span class="line">  <span class="built_in">return</span> (</span><br><span class="line">    &lt;StyledContactCard &#123;...rest&#125;&gt;</span><br><span class="line">      &lt;Avatar src=&#123;face&#125; status=<span class="string">&quot;online&quot;</span> /&gt;</span><br><span class="line">      &lt;Name&gt;李浩&lt;/Name&gt;</span><br><span class="line">      &lt;Intro&gt;我是前端工程师&lt;/Intro&gt;</span><br><span class="line">    &lt;/StyledContactCard&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ContactCard.propTypes = &#123;</span><br><span class="line">  children: PropTypes.any,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> default ContactCard;</span><br></pre></td></tr></table></figure><p>再在 <code>style.js</code> 中修改样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Paragraph</span> <span class="keyword">from</span> <span class="string">&quot;components/Paragraph&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; card &#125; <span class="keyword">from</span> <span class="string">&quot;utils/mixins&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledAvatar</span> <span class="keyword">from</span> <span class="string">&quot;components/Avatar/style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Name</span> = <span class="title function_">styled</span>(<span class="title class_">Paragraph</span>).<span class="title function_">attrs</span>(&#123; <span class="attr">size</span>: <span class="string">&quot;large&quot;</span> &#125;)<span class="string">`</span></span><br><span class="line"><span class="string">  grid-area: name;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Intro</span> = <span class="title function_">styled</span>(<span class="title class_">Paragraph</span>).<span class="title function_">attrs</span>(&#123; <span class="attr">type</span>: <span class="string">&quot;secondary&quot;</span> &#125;)<span class="string">`</span></span><br><span class="line"><span class="string">  grid-area: intro;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledContactCard</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;card()&#125;</span></span></span><br><span class="line"><span class="string">  display: grid;</span></span><br><span class="line"><span class="string">  grid-template-areas:</span></span><br><span class="line"><span class="string">    &quot;avatar name&quot;</span></span><br><span class="line"><span class="string">    &quot;avatar intro&quot;;</span></span><br><span class="line"><span class="string">  grid-template-columns: 62px auto;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;StyledAvatar&#125;</span> &#123;</span></span><br><span class="line"><span class="string">    grid-area: avatar;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledContactCard</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">Name</span>, <span class="title class_">Intro</span> &#125;;</span><br></pre></td></tr></table></figure><p>最后修改 <code>contactCard.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ContactCard</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/ContactCard&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">ContactCard</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">ContactCard</span> /&gt;</span></span>;</span><br></pre></td></tr></table></figure><p>使用 Hygen 创建一个 <code>ContactList</code> 组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new ContactList</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/ContactList/index.js</code>  文件：：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">import React from <span class="string">&quot;react&quot;</span>;</span><br><span class="line">import PropTypes from <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line">import StyledContactList, &#123; Contacts &#125; from <span class="string">&quot;./style&quot;</span>;</span><br><span class="line">import FilterList from <span class="string">&quot;components/FilterList&quot;</span>;</span><br><span class="line">import ContactCard from <span class="string">&quot;components/ContactCard&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> ContactList(&#123; children, ...rest &#125;) &#123;</span><br><span class="line">  <span class="built_in">return</span> (</span><br><span class="line">    &lt;StyledContactList &#123;...rest&#125;&gt;</span><br><span class="line">      &lt;FilterList options=&#123;[<span class="string">&quot;新添加优先&quot;</span>, <span class="string">&quot;按姓名排序&quot;</span>]&#125; actionLabel=<span class="string">&quot;添加好友&quot;</span>&gt;</span><br><span class="line">        &lt;Contacts&gt;</span><br><span class="line">          &#123;new Array(10).fill(0).map((_, i) =&gt; (</span><br><span class="line">            &lt;ContactCard key=&#123;i&#125; /&gt;</span><br><span class="line">          ))&#125;</span><br><span class="line">        &lt;/Contacts&gt;</span><br><span class="line">      &lt;/FilterList&gt;</span><br><span class="line">    &lt;/StyledContactList&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ContactList.propTypes = &#123;</span><br><span class="line">  children: PropTypes.any,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> default ContactList;</span><br></pre></td></tr></table></figure><p>再在 <code>style.js</code> 中修改样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Contacts</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  margin-top: -8px;</span></span><br><span class="line"><span class="string">  &amp; &gt; * &#123;</span></span><br><span class="line"><span class="string">    margin: 8px 0;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledContactList</span> = styled.<span class="property">div</span><span class="string">``</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledContactList</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">Contacts</span> &#125;;</span><br></pre></td></tr></table></figure><p>最后修改 <code>contactList.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ContactList</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;页面组件/ContactList&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">ContactList</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">ContactList</span> /&gt;</span></span>;</span><br></pre></td></tr></table></figure><h3 id="三、文件列表组件开发"><a href="#三、文件列表组件开发" class="headerlink" title="三、文件列表组件开发"></a>三、文件列表组件开发</h3><p>使用 Hygen 创建一个 <code>FileCard</code> 组件，用于展示联系人卡片：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new FileCard</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/FileCard/index.js</code>  文件：：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">import React from <span class="string">&quot;react&quot;</span>;</span><br><span class="line">import PropTypes from <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line">import StyledFileCard, &#123;</span><br><span class="line">  FileName,</span><br><span class="line">  FileSize,</span><br><span class="line">  Options,</span><br><span class="line">  Time,</span><br><span class="line">  FileIcon,</span><br><span class="line">&#125; from <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"></span><br><span class="line">import &#123; ReactComponent as FileZip &#125; from <span class="string">&quot;assets/icon/fileZip.svg&quot;</span>;</span><br><span class="line">import &#123; ReactComponent as FileExcel &#125; from <span class="string">&quot;assets/icon/fileExcel.svg&quot;</span>;</span><br><span class="line">import &#123; ReactComponent as FileWord &#125; from <span class="string">&quot;assets/icon/fileWord.svg&quot;</span>;</span><br><span class="line">import &#123; ReactComponent as FilePpt &#125; from <span class="string">&quot;assets/icon/filePpt.svg&quot;</span>;</span><br><span class="line">import &#123; ReactComponent as FileImage &#125; from <span class="string">&quot;assets/icon/fileImage.svg&quot;</span>;</span><br><span class="line">import &#123; ReactComponent as FilePdf &#125; from <span class="string">&quot;assets/icon/filePdf.svg&quot;</span>;</span><br><span class="line">import &#123; ReactComponent as OptionsIcon &#125; from <span class="string">&quot;assets/icon/options.svg&quot;</span>;</span><br><span class="line">import Icon from <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"></span><br><span class="line">const fileIcons = &#123;</span><br><span class="line">  zip: FileZip,</span><br><span class="line">  image: FileImage,</span><br><span class="line">  pdf: FilePdf,</span><br><span class="line">  word: FileWord,</span><br><span class="line">  excel: FileExcel,</span><br><span class="line">  ppt: FilePpt,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> FileCard(&#123; children, ...rest &#125;) &#123;</span><br><span class="line">  <span class="built_in">return</span> (</span><br><span class="line">    &lt;StyledFileCard &#123;...rest&#125;&gt;</span><br><span class="line">      &lt;FileIcon icon=&#123;fileIcons.zip&#125; /&gt;</span><br><span class="line">      &lt;FileName&gt;Source Code.zip&lt;/FileName&gt;</span><br><span class="line">      &lt;FileSize&gt;1.5M&lt;/FileSize&gt;</span><br><span class="line">      &lt;Options&gt;</span><br><span class="line">        &lt;Icon icon=&#123;OptionsIcon&#125; opacity=&#123;0.3&#125; /&gt;</span><br><span class="line">      &lt;/Options&gt;</span><br><span class="line">      &lt;Time&gt;2019年02月03日&lt;/Time&gt;</span><br><span class="line">    &lt;/StyledFileCard&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">FileCard.propTypes = &#123;</span><br><span class="line">  children: PropTypes.any,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> default FileCard;</span><br></pre></td></tr></table></figure><p>再在 <code>style.js</code> 中修改样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Heading</span> <span class="keyword">from</span> <span class="string">&quot;components/Heading&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Paragraph</span> <span class="keyword">from</span> <span class="string">&quot;components/Paragraph&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Popover</span> <span class="keyword">from</span> <span class="string">&quot;components/Popover&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; card &#125; <span class="keyword">from</span> <span class="string">&quot;utils/mixins&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">FileIcon</span> = <span class="title function_">styled</span>(<span class="title class_">Icon</span>).<span class="title function_">attrs</span>(&#123;</span><br><span class="line">  <span class="attr">width</span>: <span class="number">60</span>,</span><br><span class="line">  <span class="attr">height</span>: <span class="number">60</span>,</span><br><span class="line">&#125;)<span class="string">`</span></span><br><span class="line"><span class="string">  grid-area: icon;</span></span><br><span class="line"><span class="string">  justify-self: start;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">FileName</span> = <span class="title function_">styled</span>(<span class="title class_">Heading</span>).<span class="title function_">attrs</span>(&#123; <span class="attr">level</span>: <span class="number">2</span> &#125;)<span class="string">`</span></span><br><span class="line"><span class="string">  grid-area: name;</span></span><br><span class="line"><span class="string">  align-self: center;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">FileSize</span> = <span class="title function_">styled</span>(<span class="title class_">Paragraph</span>).<span class="title function_">attrs</span>(&#123; <span class="attr">type</span>: <span class="string">&quot;secondary&quot;</span> &#125;)<span class="string">`</span></span><br><span class="line"><span class="string">  grid-area: size;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Options</span> = <span class="title function_">styled</span>(<span class="title class_">Popover</span>)<span class="string">`</span></span><br><span class="line"><span class="string">  grid-area: options;</span></span><br><span class="line"><span class="string">  justify-self: end;</span></span><br><span class="line"><span class="string">  align-self: center;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Time</span> = <span class="title function_">styled</span>(<span class="title class_">Paragraph</span>).<span class="title function_">attrs</span>(&#123; <span class="attr">type</span>: <span class="string">&quot;secondary&quot;</span> &#125;)<span class="string">`</span></span><br><span class="line"><span class="string">  grid-area: time;</span></span><br><span class="line"><span class="string">  justify-self: end;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledFileCard</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;card()&#125;</span></span></span><br><span class="line"><span class="string">  display: grid;</span></span><br><span class="line"><span class="string">  grid-template-areas:</span></span><br><span class="line"><span class="string">    &quot;icon name options&quot;</span></span><br><span class="line"><span class="string">    &quot;icon size time&quot;;</span></span><br><span class="line"><span class="string">  grid-template-columns: 74px 1fr 1fr;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledFileCard</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">FileIcon</span>, <span class="title class_">FileName</span>, <span class="title class_">FileSize</span>, <span class="title class_">Options</span>, <span class="title class_">Time</span> &#125;;</span><br></pre></td></tr></table></figure><p>最后修改 <code>fileCard.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">FileCard</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/FileCard&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">FileCard</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">FileCard</span> /&gt;</span></span>;</span><br></pre></td></tr></table></figure><p>使用 Hygen 创建一个 <code>FileList</code> 组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new FileList</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/FileList/index.js</code>  文件：：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">import React from <span class="string">&quot;react&quot;</span>;</span><br><span class="line">import PropTypes from <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line">import StyledFileList, &#123; Files &#125; from <span class="string">&quot;./style&quot;</span>;</span><br><span class="line">import FilterList from <span class="string">&quot;components/FilterList&quot;</span>;</span><br><span class="line">import FileCard from <span class="string">&quot;components/FileCard&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> FileList(&#123; children, ...rest &#125;) &#123;</span><br><span class="line">  <span class="built_in">return</span> (</span><br><span class="line">    &lt;StyledFileList &#123;...rest&#125;&gt;</span><br><span class="line">      &lt;FilterList options=&#123;[<span class="string">&quot;最新文件优先&quot;</span>, <span class="string">&quot;按文件名排序&quot;</span>]&#125;&gt;</span><br><span class="line">        &lt;Files&gt;</span><br><span class="line">          &#123;new Array(10).fill(0).map((_, i) =&gt; (</span><br><span class="line">            &lt;FileCard key=&#123;i&#125; /&gt;</span><br><span class="line">          ))&#125;</span><br><span class="line">        &lt;/Files&gt;</span><br><span class="line">      &lt;/FilterList&gt;</span><br><span class="line">    &lt;/StyledFileList&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">FileList.propTypes = &#123;</span><br><span class="line">  children: PropTypes.any,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> default FileList;</span><br></pre></td></tr></table></figure><p>再在 <code>style.js</code> 中修改样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Files</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  margin-top: -8px;</span></span><br><span class="line"><span class="string">  &amp; &gt; * &#123;</span></span><br><span class="line"><span class="string">    margin: 8px 0;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledFileList</span> = styled.<span class="property">div</span><span class="string">``</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledFileList</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">Files</span> &#125;;</span><br></pre></td></tr></table></figure><p>最后修改 <code>fileList.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">FileList</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;页面组件/FileList&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">FileList</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">FileList</span> /&gt;</span></span>;</span><br></pre></td></tr></table></figure><h3 id="四、笔记列表组件开发"><a href="#四、笔记列表组件开发" class="headerlink" title="四、笔记列表组件开发"></a>四、笔记列表组件开发</h3><p>使用 Hygen 创建一个 <code>NoteCard</code> 组件，用于展示联系人卡片：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new NoteCard</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/NoteCard/index.js</code>  文件：：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">import note1 from <span class="string">&quot;assets/images/note-1.jpg&quot;</span>;</span><br><span class="line">import PropTypes from <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line">import React from <span class="string">&quot;react&quot;</span>;</span><br><span class="line">import StyledNoteCard, &#123;</span><br><span class="line">  NoteImage,</span><br><span class="line">  NoteTitle,</span><br><span class="line">  NoteExcerpt,</span><br><span class="line">  NotePublishTime,</span><br><span class="line">&#125; from <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> NoteCard(&#123; children, ...rest &#125;) &#123;</span><br><span class="line">  <span class="built_in">return</span> (</span><br><span class="line">    &lt;StyledNoteCard &#123;...rest&#125;&gt;</span><br><span class="line">      &lt;NoteImage src=&#123;note1&#125; /&gt;</span><br><span class="line">      &lt;NoteTitle&gt;这是笔记标题&lt;/NoteTitle&gt;</span><br><span class="line">      &lt;NoteExcerpt&gt;这是笔记内容摘要&lt;/NoteExcerpt&gt;</span><br><span class="line">      &lt;NotePublishTime&gt;2020-02-08&lt;/NotePublishTime&gt;</span><br><span class="line">    &lt;/StyledNoteCard&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">NoteCard.propTypes = &#123;</span><br><span class="line">  children: PropTypes.any,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> default NoteCard;</span><br></pre></td></tr></table></figure><p>再在 <code>style.js</code> 中修改样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Heading</span> <span class="keyword">from</span> <span class="string">&quot;components/Heading&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Paragraph</span> <span class="keyword">from</span> <span class="string">&quot;components/Paragraph&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; card &#125; <span class="keyword">from</span> <span class="string">&quot;utils/mixins&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">NoteImage</span> = styled.<span class="property">img</span><span class="string">`</span></span><br><span class="line"><span class="string">  grid-area: image;</span></span><br><span class="line"><span class="string">  width: 60px;</span></span><br><span class="line"><span class="string">  height: 60px;</span></span><br><span class="line"><span class="string">  object-fit: cover;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">NoteTitle</span> = <span class="title function_">styled</span>(<span class="title class_">Heading</span>).<span class="title function_">attrs</span>(&#123; <span class="attr">level</span>: <span class="number">2</span> &#125;)<span class="string">`</span></span><br><span class="line"><span class="string">  grid-area: title;</span></span><br><span class="line"><span class="string">  align-self: center;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">NoteExcerpt</span> = <span class="title function_">styled</span>(<span class="title class_">Paragraph</span>).<span class="title function_">attrs</span>(&#123; <span class="attr">size</span>: <span class="string">&quot;small&quot;</span> &#125;)<span class="string">`</span></span><br><span class="line"><span class="string">  grid-area: excerpt;</span></span><br><span class="line"><span class="string">  align-self: center;</span></span><br><span class="line"><span class="string">  white-space: nowrap;</span></span><br><span class="line"><span class="string">  text-overflow: ellipsis;</span></span><br><span class="line"><span class="string">  overflow: hidden;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">NotePublishTime</span> = <span class="title function_">styled</span>(<span class="title class_">Paragraph</span>).<span class="title function_">attrs</span>(&#123; <span class="attr">type</span>: <span class="string">&quot;secondary&quot;</span> &#125;)<span class="string">`</span></span><br><span class="line"><span class="string">  grid-area: time;</span></span><br><span class="line"><span class="string">  justify-self: end;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledNoteCard</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;card()&#125;</span></span></span><br><span class="line"><span class="string">  display: grid;</span></span><br><span class="line"><span class="string">  grid-template-areas:</span></span><br><span class="line"><span class="string">    &quot;image title time&quot;</span></span><br><span class="line"><span class="string">    &quot;image excerpt excerpt&quot;;</span></span><br><span class="line"><span class="string">  grid-template-columns: 72px 2fr 1fr;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledNoteCard</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">NoteImage</span>, <span class="title class_">NoteTitle</span>, <span class="title class_">NoteExcerpt</span>, <span class="title class_">NotePublishTime</span> &#125;;</span><br></pre></td></tr></table></figure><p>最后修改 <code>noteCard.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">NoteCard</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/NoteCard&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">NoteCard</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">NoteCard</span> /&gt;</span></span>;</span><br></pre></td></tr></table></figure><p>使用 Hygen 创建一个 <code>NoteList</code> 组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new NoteList</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/NoteList/index.js</code>  文件：：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">import React from <span class="string">&quot;react&quot;</span>;</span><br><span class="line">import PropTypes from <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line">import StyledNoteList, &#123; Notes &#125; from <span class="string">&quot;./style&quot;</span>;</span><br><span class="line">import FilterList from <span class="string">&quot;components/FilterList&quot;</span>;</span><br><span class="line">import NoteCard from <span class="string">&quot;components/NoteCard&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> NoteList(&#123; children, ...rest &#125;) &#123;</span><br><span class="line">  <span class="built_in">return</span> (</span><br><span class="line">    &lt;StyledNoteList &#123;...rest&#125;&gt;</span><br><span class="line">      &lt;FilterList</span><br><span class="line">        options=&#123;[<span class="string">&quot;最新笔记优先&quot;</span>, <span class="string">&quot;有改动的优先&quot;</span>]&#125;</span><br><span class="line">        actionLabel=<span class="string">&quot;添加笔记&quot;</span></span><br><span class="line">      &gt;</span><br><span class="line">        &lt;Notes&gt;</span><br><span class="line">          &#123;new Array(10).fill(0).map((_, i) =&gt; (</span><br><span class="line">            &lt;NoteCard key=&#123;i&#125; /&gt;</span><br><span class="line">          ))&#125;</span><br><span class="line">        &lt;/Notes&gt;</span><br><span class="line">      &lt;/FilterList&gt;</span><br><span class="line">    &lt;/StyledNoteList&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">NoteList.propTypes = &#123;</span><br><span class="line">  children: PropTypes.any,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> default NoteList;</span><br></pre></td></tr></table></figure><p>再在 <code>style.js</code> 中修改样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Notes</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  &amp; &gt; * &#123;</span></span><br><span class="line"><span class="string">    margin: 8px 0;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  margin-top: -8px;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledNoteList</span> = styled.<span class="property">div</span><span class="string">``</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledNoteList</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">Notes</span> &#125;;</span><br></pre></td></tr></table></figure><p>最后修改 <code>noteList.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">NoteList</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;页面组件/NoteList&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">NoteList</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">NoteList</span> /&gt;</span></span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;React 即时通信 UI 实战第九章。React 即时通信 UI 实战为&lt;a href=&quot;https://www.bilibili.com/video/BV1PK4y1b7bY?p=2&amp;amp;spm_id_from=pageDriver&amp;amp;vd_source=0965c74096f788f105780e5d5d0e9ebf&quot;&gt;峰华前端工程师&lt;/a&gt;推出的 React 实战课程，以聊天（即时通信）为原型，构建了一整套的 UI 组件库，课程重点在于 UI 组件的分析和实现，力求打造自用组件库。本章包括其他列表组件，包括联系人列表、笔记列表和文件列表组件。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Web前端" scheme="http://blog.zhuangzhihao.top/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="React" scheme="http://blog.zhuangzhihao.top/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>Learn Bitcoin &amp; Ethereum</title>
    <link href="http://blog.zhuangzhihao.top/Bitcoin&amp;Ethereum/"/>
    <id>http://blog.zhuangzhihao.top/Bitcoin&amp;Ethereum/</id>
    <published>2022-11-18T16:00:00.000Z</published>
    <updated>2022-12-02T10:05:31.330Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>This course provided by <a href="https://onemonth.com">One Month</a> is intended to be an introduction for us to understand how to get started with Bitcoin, Blockchain, Altcoins, Ethereum, and much more. Giving us the ability to speak confidently with friends and co-workers, and be able to answer that most frequently asked question: “Should I buy Bitcoin?” The following are the notes I took during this course.</p></blockquote><span id="more"></span><h3 id="1-What-is-Bitcoin"><a href="#1-What-is-Bitcoin" class="headerlink" title="1. What is Bitcoin?"></a>1. What is Bitcoin?</h3><p>Bitcoin is two things: it’s a digital currency, and a technology.</p><p>Digital Currency: Most of us don’t actually have money physically in a bank. Most of the ‘money’ we make and spend is moved and managed digitally. If you use direct deposit, money is moving between you and you’re company digitally. The US dollar and most other national currencies are just as digital as Bitcoin. </p><p>Bitcoin (BTC): It is not a coin! But it is a digital currency. you can send someone bitcoins much faster, more safely, and without the middlemen or fees associated with traditional banking - because it is controlled by a network of people, not one single authority. </p><p>Coinbase: A site where you can buy and sell bitcoins. </p><h3 id="2-How-does-the-Bitcoin-technology-work"><a href="#2-How-does-the-Bitcoin-technology-work" class="headerlink" title="2. How does the Bitcoin technology work?"></a>2. How does the Bitcoin technology work?</h3><p>The Bitcoin technology (known as the blockchain) revolutionizes how we share data, and identity across the Internet.</p><p>Decentralization: No permission is needed from a central authority to post anything on the web, there is no central controlling node, and so no single point of failure.</p><p>Blockchain is a combination of proven technologies applied together to allow folks to share decentralized information without compromising their identity, including:</p><ul><li>Private Key Cryptography: Kind of like a username and password for you’re identity. You have a public key, which anyone can access, and is a big hashed number. The private key is you’re password and allows you to access it. We get the term Cryptocurrency from this.</li><li>P2P Networks: It means peer to peer network, and basically means that everyone holds a little bit of information so that everyone can see what everyone else has. BitTorrent works this way. </li><li>The Blockchain Protocol : This puts the blocks of identity together so that they build on top of each other and are tied together. </li></ul><p>Bitcoin’s innovation is that it allows many entities who do not know one another to reliably reach consensus about the state of the bitcoin blockchain.</p><h3 id="3-Where-did-Bitcoin-come-from"><a href="#3-Where-did-Bitcoin-come-from" class="headerlink" title="3. Where did Bitcoin come from?"></a>3. Where did Bitcoin come from?</h3><p>Digital Currencies Before Bitcoin: Digicash (1990), Hashcash (1997), B-Money (1998), BitGold (1998).</p><p><a href="https://bitcoin.org/bitcoin.pdf">Bitcoin White Paper</a>: Satoshi Nakamoto released a Bitcoin white paper in 2008. The 8 page paper announced the vision for a decentralized digital currency.</p><p>In January 2009, the bitcoin network came into existence with the release of the first open source bitcoin client and the issuance of the first bitcoins, with Satoshi Nakamoto mining the first block of bitcoins ever (known as the genesis block), which had a reward of 50 bitcoins.</p><p>The First Bitcoin Transaction: On May 22nd 2010, Laszlo Hanyecz paid 10,000 BTC for two Papa John’s pizzas.</p><p>In June 2011 Wikileaks began to accept bitcoins for donations.</p><p>By December 2013, Mt. Gox, a bitcoin exchange based in Tokyo, Japan, was handling over 70% of all bitcoin transactions worldwide, as the world’s leading bitcoin exchange. However in March 2014, Mt. Gox announced that approximately 850,000 bitcoins belonging to customers and the company were missing and likely stolen, an amount valued at more than $450 million at the time.</p><p>As of August 2015 it was estimated that 160,000 merchants accept bitcoin payments.</p><p>In August 2016, a major bitcoin exchange, Bitfinex, was hacked and nearly 120,000 BTC (around $60m) was stolen.</p><p>On August 1st, 2017 bitcoin split into two derivative digital currencies, the classic bitcoin (BTC) and the Bitcoin Cash (BCH).</p><h3 id="4-How-to-buy-your-first-bitcoin-BTC"><a href="#4-How-to-buy-your-first-bitcoin-BTC" class="headerlink" title="4. How to buy your first bitcoin (BTC)"></a>4. How to buy your first bitcoin (BTC)</h3><p><a href="https://www.coinbase.com/join/5341c04e2e00c46d2100006c">Set up a Coinbase account</a> and follow the <a href="https://support.coinbase.com/customer/portal/articles/1148716-payment-methods-for-us-customers">Coinbase Payment Methods </a>, With $5 USD you can purchase a percentage of one bitcoin.</p><p>There will also be a miners fee. Miners are essentially the bookkeepers that verify bitcoin transactions, and the miner that verifies you’re transaction will be paid a small fee. </p><p>In Coinbase, you can set up your bitcoin wallet to only receive bitcoins, and well as to send bitcoins to other people. Your wallet address is almost like an email address, so when people send you money, they use your wallet’s QC code or hash. </p><p>When you want to send money from your wallet, you’ll put in the person in question’s address. The fees involved should be pretty low, and the transfer should happen pretty quickly.</p><h3 id="5-Public-keys-and-Private-keys"><a href="#5-Public-keys-and-Private-keys" class="headerlink" title="5. Public keys and Private keys"></a>5. Public keys and Private keys</h3><p>Your bitcoin address is a Public Key. And it is publicly viewable on the blockchain. So Bitcoin isn’t anonymous, not really. There is a record of everything you do with your public key. </p><p>But don’t panic. The level of public access only stretches as far as the address your sending/receiving with. If you use a new address for every transaction, there won’t be a consistent purchase history. </p><ul><li><a href="https://www.blockchain.com/explorer">https://www.blockchain.com/explorer</a></li></ul><p>The truth is, you never own bitcoin. All you own is a private key.</p><p>A private key in the context of Bitcoin is a secret number that allows bitcoins to be spent. It is, more or less, your password. If you’re on Coinbase, the site holds onto your private key for you, and you get access to it by logging in. Which makes Coinbase kind of like a bank. </p><h3 id="6-Never-leave-your-money-at-the-exchange"><a href="#6-Never-leave-your-money-at-the-exchange" class="headerlink" title="6. Never leave your money at the exchange"></a>6. Never leave your money at the exchange</h3><p>Three reasons why you should never leave your money in Coinbase, Kraken, Poloniex or ANY online exchange.</p><p>Private keys are vulnerable if you leave them in centralized places (like Coinbase) with a lot of valuable data. For hackers, banks are like <a href="https://medium.com/@CodyBrown/how-to-lose-8k-worth-of-bitcoin-in-15-minutes-with-verizon-and-coinbase-com-ba75fb8d0bac">honey pots</a>. They will try much harder to break into a honeypot because there’s so much honey inside! </p><p>They’re’s also government regulation to consider. Because Bitcoin is decentralized, no one government can put a stop to it. But the government could come in and freeze all you’re assets in coinbase, or certain state regulations may hamper your ability to send and receive bitcoins. </p><p>And finally, there are the exchanges themselves, which can have human-error issues of they’re own. </p><p>How not to lose your coins: Move money into your cold wallet storage; Have a backup of you’re password &amp; check on you’re backups; Use a password manager like <a href="http://www.1password.com/">1password.com</a>; Use 2-Factor Authentication.</p><h3 id="7-Hot-wallet-vs-cold-wallet"><a href="#7-Hot-wallet-vs-cold-wallet" class="headerlink" title="7. Hot wallet vs. cold wallet"></a>7. Hot wallet vs. cold wallet</h3><p>Hot wallet refers to any cryptocurrency wallet that is connected to the internet. Generally hot wallets are easier to set up, access, and accept more tokens. But, hot wallets are also more susceptible to hackers, possible regulation, and other technical vulnerabilities. </p><p>Cold storage refers to any cryptocurrency wallet that IS NOT connected to the internet. Generally cold storage is more secure, but they don’t accept as many cryptocurrencies as do many of the hot wallets. Cold storage devices (aka. Trezor, Ledger) also cost close to $80 USD, whereas hot wallets are free. </p><ul><li>Cold Wallets: <a href="https://shop.trezor.io/?a=e6b70aee88bf">Trezor</a> or <a href="https://www.ledgerwallet.com/r/a616">LedgerWallet</a></li><li>Hot Wallets: <a href="http://www.coinbase.com/">coinbase</a> or Any exchange would be considered a hot wallet.</li></ul><h3 id="8-Bitcoin-vs-Ethereum"><a href="#8-Bitcoin-vs-Ethereum" class="headerlink" title="8. Bitcoin vs. Ethereum"></a>8. Bitcoin vs. Ethereum</h3><p>Altcoins are an “alternative to Bitcoin.” <a href="https://github.com/bitcoin/bitcoin">Bitcoin is open source,</a> so anyone can go to Github and download it and make their own coin.</p><p>It’s important to understand that there are two categories of digital coins: Cryptocurrencies (e.g. Bitcoin, Litecoin, ZCash, Monero, etc) and Tokens (e.g. Ethereum, Filecoin, Storj, Blockstack, etc.).</p><p>Bitcoin is a “Cryptocurrency”. Bitcoin and other cryptocurrencies are competing against existing money (and gold) to replace them with a truly global currency.</p><p>Tokens are another type of altcoin. One of the most popular tokens is Ether, which is on the Ethereum blockchain. </p><p>Ethereum is a “Token”. What Bitcoin does for money, Ethereum does for contracts. Ethereum’s innovation is that it allows you to write Smart Contracts: basically, any digital agreement where you can say “if this” happens, “then something else happens.” Up until now, we’ve carried out these agreements with a signature at the bottom of a paper document. Ethereum dramatically improves this model because it is digital, and proof of the transaction can never be deleted.</p><div class="table-container"><table><thead><tr><th></th><th>Bitcoin (BTC)</th><th>Ether (ETH)</th></tr></thead><tbody><tr><td>What is it?</td><td>A currency</td><td>A token</td></tr><tr><td>Inventor</td><td>Satoshi Nakamoto</td><td>Vitalik Buterin, Joseph Lubin, Gavin Wood, etc.</td></tr><tr><td>Went alive</td><td>January 2009</td><td>July 2015</td></tr><tr><td>Supply Style</td><td>Deflationary (a finite # of bitcoin will be made)</td><td>Inflationary (much like fiat currency, where more tokens can be made over time)</td></tr><tr><td>Supply Cap</td><td>21 million in total</td><td>18 million every year</td></tr><tr><td>Smallest Unit</td><td>1 Satoshi = 0.00000001 BTC</td><td>1 Wei = 0.000000000000000001 ETH</td></tr><tr><td>New token issuance time</td><td>Every 10 minutes approximately</td><td>Every 10 to 20 seconds</td></tr><tr><td>Amount of new token at issuance</td><td>12.5 at the moment. Half at every 210,000 blocks</td><td>5 per every new block</td></tr><tr><td>Utility</td><td>Used for purchasing goods and services, as well as storing value (much like how we currently use gold).</td><td>Used for making dApps (decentralized apps) on the Ethereum blockchain.</td></tr><tr><td>Price</td><td>Around $18,000 (in 2020)</td><td>Around $610 (in 2020)</td></tr><tr><td>Purpose</td><td>Bitcoin is a new currency created to compete against the gold standard and fiat currencies</td><td>Ethereum is a token capable of facilitating <a href="https://en.wikipedia.org/wiki/Smart_contract">Smart Contracts</a> (For example a lawyer’s contract, an exchange of ownership of property, and voting)</td></tr></tbody></table></div><p>Ether is not as popular as BTC for purchasing goods. At the moment ether is mainly being used by developers <a href="https://www.coindesk.com/7-cool-decentralized-apps-built-ethereum/">building applications</a> on top of it. Over time, and as more apps are developed, the value of ether will likely move from being speculative (as it is now), to more useful in everyday life. </p><p>Ethereum is a token that allows other tokens to be created on top of it using the Ethereum standard (officially called the ERC-20 Standard). So you’ll see tokens like OMG come out, which are new tokens created on the Ethereum Network.</p><p>Buying or having ETH isn’t what makes a smart contract. Smart Contracts in Ethereum are written using a coding language called Solidity. It’s very similar to JavaScript. With Solidity you can write contractual logic.</p><p>In order to confirm that transaction as valid, you pay the miners in ETH, the ETH miners works similarly to BTC. You’ll see the word “gas” used for the payment. Gas is the name of the execution fee, and it’s paid in ETH.</p><p>Is it possible to trade bitcoin into Ethereum? Yes. You can use <a href="https://shapeshift.io/">ShapeShift</a> so that you can exchange your bitcoin for almost any altcoin.</p><h3 id="9-The-5-Investors-in-Bitcoin"><a href="#9-The-5-Investors-in-Bitcoin" class="headerlink" title="9. The 5 Investors in Bitcoin"></a>9. The 5 Investors in Bitcoin</h3><p>There are 5 types of people that invest they’re energy into bitcoin. The user, miner, developer, investor, and business owner.</p><ul><li>The User: Anyone who has a Bitcoin account, and has a general education about it. </li><li>The Miner: An entirely different stakeholder in Bitcoin, and involves a lot of hardware setup and use. </li><li>The Developer: People who contribute code to the project, build things that use Bitcoin, write in Solidity (<a href="https://solidity.readthedocs.io/en/develop/">Ethereum’s language</a>), or otherwise work on the Blockchain.  </li><li>The Investor: Speculators of the 21st century, folks investing with a focus through making money on Bitcoin, or other initial offerings (ICOs) for Altcoins. <a href="https://pro.coinbase.com/">Coinbase Pro</a> (formerly GDAX) is a great tool for investors. </li><li>The Business Owner: Someone who owns a business and wants to accept Bitcoin. If you use <a href="https://stripe.com/">Stripe</a>, it’s really easy to turn it out. And <a href="https://www.coinbase.com/merchants?locale=en-US">Coinbase</a> has a payment processing system as well. Fees will tend to be less than credit cards, and the more payment options you have, the more people who might be able to buy your products.</li></ul><h3 id="10-Resources-for-going-deeper"><a href="#10-Resources-for-going-deeper" class="headerlink" title="10. Resources for going deeper"></a>10. Resources for going deeper</h3><p>Books:</p><ul><li><a href="http://amzn.to/2y2nrCi">The Internet of Money</a>, by Andreas Antonopoulos</li><li><a href="http://amzn.to/2fLlfoa">The Age of Cryptocurrency</a>, by Paul Vigna</li></ul><p>More ways to keep learning:</p><ul><li>The Quiet Master of Cryptocurrency — Nick Szabo <a href="https://tim.blog/2017/06/04/nick-szabo/">Tim Ferris Podcast</a></li><li>The Rise and Rise of Bitcoin <a href="http://amzn.to/2wQB4zp">Documentary</a></li><li><a href="https://www.coindesk.com/">Coindesk.com</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;This course provided by &lt;a href=&quot;https://onemonth.com&quot;&gt;One Month&lt;/a&gt; is intended to be an introduction for us to understand how to get started with Bitcoin, Blockchain, Altcoins, Ethereum, and much more. Giving us the ability to speak confidently with friends and co-workers, and be able to answer that most frequently asked question: “Should I buy Bitcoin?” The following are the notes I took during this course.&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="区块链技术" scheme="http://blog.zhuangzhihao.top/categories/%E5%8C%BA%E5%9D%97%E9%93%BE%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="BTC" scheme="http://blog.zhuangzhihao.top/tags/BTC/"/>
    
    <category term="ETH" scheme="http://blog.zhuangzhihao.top/tags/ETH/"/>
    
  </entry>
  
  <entry>
    <title>React 即时通信 ChatUI 设置页面</title>
    <link href="http://blog.zhuangzhihao.top/ChatUI%E8%AE%BE%E7%BD%AE%E9%A1%B5%E9%9D%A2/"/>
    <id>http://blog.zhuangzhihao.top/ChatUI%E8%AE%BE%E7%BD%AE%E9%A1%B5%E9%9D%A2/</id>
    <published>2022-11-07T16:00:00.000Z</published>
    <updated>2022-12-02T10:22:41.946Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>React 即时通信 UI 实战第八章。React 即时通信 UI 实战为<a href="https://www.bilibili.com/video/BV1PK4y1b7bY?p=2&amp;spm_id_from=pageDriver&amp;vd_source=0965c74096f788f105780e5d5d0e9ebf">峰华前端工程师</a>推出的 React 实战课程，以聊天（即时通信）为原型，构建了一整套的 UI 组件库，课程重点在于 UI 组件的分析和实现，力求打造自用组件库。本章包括设置页面中的 InputText、Select（表单）、Radio、Switch 开关等组件。</p></blockquote><span id="more"></span><h3 id="一、文本输入框组件开发"><a href="#一、文本输入框组件开发" class="headerlink" title="一、文本输入框组件开发"></a>一、文本输入框组件开发</h3><p>使用 Hygen 创建一个 <code>InputText</code> 组件，并移动到 <code>src/components/Input</code> 组件目录下，作为 <code>Input</code> 的子组件导出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new InputText</span><br></pre></td></tr></table></figure><p>再使用 Hygen 创建一个 <code>LabelContainer</code> 组件，对 Label 和控件进行布局：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new LabelContainer</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/LabelContainer/index.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledLabelContainer</span> <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Text</span> <span class="keyword">from</span> <span class="string">&quot;components/Text&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">LabelContainer</span>(<span class="params">&#123; children, label, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledLabelContainer</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;label &amp;&amp; <span class="tag">&lt;<span class="name">Text</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">marginBottom:</span> &quot;<span class="attr">8px</span>&quot; &#125;&#125;&gt;</span>&#123;label&#125;: <span class="tag">&lt;/<span class="name">Text</span>&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">      &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledLabelContainer</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">LabelContainer</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">LabelContainer</span>;</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/LabelContainer/style.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledLabelContainer</span> = styled.<span class="property">label</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: flex;</span></span><br><span class="line"><span class="string">  flex-direction: column;</span></span><br><span class="line"><span class="string">  font-size: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.normal&#125;</span>;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledLabelContainer</span>;</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/Input/InputText/style.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">InputUnderline</span> = styled.<span class="property">input</span><span class="string">`</span></span><br><span class="line"><span class="string">  border: none;</span></span><br><span class="line"><span class="string">  border-bottom: 1px solid <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.gray4&#125;</span>;</span></span><br><span class="line"><span class="string">  font-size: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.normal&#125;</span>;</span></span><br><span class="line"><span class="string">  width: 100%;</span></span><br><span class="line"><span class="string">  background: none;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  &amp;::placeholder &#123;</span></span><br><span class="line"><span class="string">    color: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.gray5&#125;</span>;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  :focus,</span></span><br><span class="line"><span class="string">  :hover &#123;</span></span><br><span class="line"><span class="string">    border-bottom-color: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.primaryColor&#125;</span>;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledInputText</span> = styled.<span class="property">div</span><span class="string">``</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledInputText</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">InputUnderline</span> &#125;;</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/Input/InputText/index.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledInputText</span>, &#123; <span class="title class_">InputUnderline</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">LabelContainer</span> <span class="keyword">from</span> <span class="string">&quot;components/LabelContainer&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">InputText</span>(<span class="params">&#123; label, placeholder = <span class="string">&quot;请输入内容&quot;</span>, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> input = <span class="language-xml"><span class="tag">&lt;<span class="name">InputUnderline</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&#123;placeholder&#125;</span> /&gt;</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledInputText</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;label ? <span class="tag">&lt;<span class="name">LabelContainer</span> <span class="attr">label</span>=<span class="string">&#123;label&#125;</span>&gt;</span>&#123;input&#125;<span class="tag">&lt;/<span class="name">LabelContainer</span>&gt;</span> : input&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledInputText</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">InputText</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">label</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">  <span class="attr">placeholder</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">InputText</span>;</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/Input/index.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledInput</span>, &#123; <span class="title class_">InputContainer</span>, <span class="title class_">Prefix</span>, <span class="title class_">Suffix</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">SearchIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/search.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useTheme &#125; <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">InputText</span> <span class="keyword">from</span> <span class="string">&quot;./InputText&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Input</span>(<span class="params">&#123; placeholder = <span class="string">&quot;请输入内容...&quot;</span>, prefix, suffix, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">InputContainer</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;prefix &amp;&amp; <span class="tag">&lt;<span class="name">Prefix</span>&gt;</span>&#123;prefix&#125;<span class="tag">&lt;/<span class="name">Prefix</span>&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">StyledInput</span> <span class="attr">placeholder</span>=<span class="string">&#123;placeholder&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;suffix &amp;&amp; <span class="tag">&lt;<span class="name">Suffix</span>&gt;</span>&#123;suffix&#125;<span class="tag">&lt;/<span class="name">Suffix</span>&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">InputContainer</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Search</span>(<span class="params">&#123; placeholder = <span class="string">&quot;请输入搜索内容...&quot;</span>, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> theme = <span class="title function_">useTheme</span>();</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">placeholder</span>=<span class="string">&#123;placeholder&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">prefix</span>=<span class="string">&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &lt;<span class="attr">Icon</span> <span class="attr">icon</span>=<span class="string">&#123;SearchIcon&#125;</span> <span class="attr">color</span>=<span class="string">&#123;theme.gray3&#125;</span> <span class="attr">width</span>=<span class="string">&#123;18&#125;</span> <span class="attr">height</span>=<span class="string">&#123;18&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#125;</span></span><br><span class="line"><span class="language-xml">      &#123;...rest&#125;</span></span><br><span class="line"><span class="language-xml">    /&gt;</span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Input</span>.<span class="property">Search</span> = <span class="title class_">Search</span>;</span><br><span class="line"><span class="title class_">Input</span>.<span class="property">Text</span> = <span class="title class_">InputText</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Input</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">placeholder</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">  <span class="attr">prefix</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">  <span class="attr">suffix</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Input</span>;</span><br></pre></td></tr></table></figure><p>在 <code>src/components/Input/input.stories.js</code>  文件中添加两行 stories：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">InputTextWithLabel</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Input.Text</span> <span class="attr">label</span>=<span class="string">&quot;昵称&quot;</span> /&gt;</span></span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">InputTextWithoutLabel</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Input.Text</span> /&gt;</span></span>;</span><br></pre></td></tr></table></figure><p>使用 <code>yarn</code> 命令启动 storybook：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn run storybook</span><br></pre></td></tr></table></figure><h3 id="二、重构-Select-组件"><a href="#二、重构-Select-组件" class="headerlink" title="二、重构 Select 组件"></a>二、重构 Select 组件</h3><p>编辑 <code>src/components/Select/index.js</code>  文件：：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">import React from <span class="string">&quot;react&quot;</span>;</span><br><span class="line">import PropTypes from <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line">import StyledSelect from <span class="string">&quot;./style&quot;</span>;</span><br><span class="line">import LabelContainer from <span class="string">&quot;components/LabelContainer&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> Select(&#123; label, <span class="built_in">type</span>, children, ...rest &#125;) &#123;</span><br><span class="line">  const selectWithoutLabel = (</span><br><span class="line">    &lt;StyledSelect <span class="built_in">type</span>=&#123;<span class="built_in">type</span>&#125; &#123;...rest&#125;&gt;</span><br><span class="line">      &#123;children&#125;</span><br><span class="line">    &lt;/StyledSelect&gt;</span><br><span class="line">  );</span><br><span class="line">  <span class="built_in">return</span> label ? (</span><br><span class="line">    &lt;LabelContainer label=&#123;label&#125;&gt;selectWithoutLabel&lt;/LabelContainer&gt;</span><br><span class="line">  ) : (</span><br><span class="line">    selectWithoutLabel</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Select.propTypes = &#123;</span><br><span class="line">  <span class="built_in">type</span>: PropTypes.oneOf([<span class="string">&quot;form&quot;</span>]),</span><br><span class="line">  children: PropTypes.any,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> default Select;</span><br></pre></td></tr></table></figure><p>再在 <code>style.js</code> 中修改样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled, &#123; css &#125; <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">CaretDown</span> <span class="keyword">from</span> <span class="string">&quot;assets/icon/caret_down.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">CaretDown2</span> <span class="keyword">from</span> <span class="string">&quot;assets/icon/caretDown2.svg&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> typeVariants = &#123;</span><br><span class="line">  <span class="attr">form</span>: css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(</span><span class="subst">$&#123;CaretDown2&#125;</span><span class="language-css">);</span></span><br><span class="line"><span class="language-css">  `</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledSelect</span> = styled.<span class="property">select</span><span class="string">`</span></span><br><span class="line"><span class="string">  appearance: none;</span></span><br><span class="line"><span class="string">  background-image: url(<span class="subst">$&#123;CaretDown&#125;</span>);</span></span><br><span class="line"><span class="string">  background-repeat: no-repeat;</span></span><br><span class="line"><span class="string">  background-position: right center;</span></span><br><span class="line"><span class="string">  background-color: transparent;</span></span><br><span class="line"><span class="string">  border: none;</span></span><br><span class="line"><span class="string">  padding-right: 14px;</span></span><br><span class="line"><span class="string">  font-size: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.normal&#125;</span>;</span></span><br><span class="line"><span class="string">  color: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.grayDark&#125;</span>;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;(&#123; type &#125;) =&gt; type &amp;&amp; typeVariants[type]&#125;</span></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  ::-ms-expand &#123;</span></span><br><span class="line"><span class="string">    display: none;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledSelect</span>;</span><br></pre></td></tr></table></figure><p>最后在 <code>select.stories.js</code> 文件中添加一个 story：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">FormSelect</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Select</span> <span class="attr">type</span>=<span class="string">&quot;form&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Option</span>&gt;</span>北京市<span class="tag">&lt;/<span class="name">Option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Option</span>&gt;</span>河北省<span class="tag">&lt;/<span class="name">Option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Select</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="三、Radio-单选按钮组件开发"><a href="#三、Radio-单选按钮组件开发" class="headerlink" title="三、Radio 单选按钮组件开发"></a>三、Radio 单选按钮组件开发</h3><p>使用 Hygen 创建一个 <code>Radio</code> 组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new Radio</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/Radio/index.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledRadio</span>, &#123; <span class="title class_">RadioButton</span>, <span class="title class_">Circle</span>, <span class="title class_">StyledRadioGroup</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">LabelContainer</span> <span class="keyword">from</span> <span class="string">&quot;components/LabelContainer&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Radio</span>(<span class="params">&#123; name, children, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledRadio</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">RadioButton</span> <span class="attr">name</span>=<span class="string">&#123;name&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Circle</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledRadio</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">RadioGroup</span>(<span class="params">&#123; label, children, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">LabelContainer</span> <span class="attr">label</span>=<span class="string">&#123;label&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">StyledRadioGroup</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span>&#123;children&#125;<span class="tag">&lt;/<span class="name">StyledRadioGroup</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">LabelContainer</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Radio</span>.<span class="property">Group</span> = <span class="title class_">RadioGroup</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Radio</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title class_">RadioGroup</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">label</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Radio</span>;</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/Radio/style.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Circle</span> = styled.<span class="property">span</span><span class="string">`</span></span><br><span class="line"><span class="string">  line-height: 16px;</span></span><br><span class="line"><span class="string">  width: 16px;</span></span><br><span class="line"><span class="string">  height: 16px;</span></span><br><span class="line"><span class="string">  border: 1px solid <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.primaryColor&#125;</span>;</span></span><br><span class="line"><span class="string">  border-radius: 50%;</span></span><br><span class="line"><span class="string">  position: absolute;</span></span><br><span class="line"><span class="string">  left: 0;</span></span><br><span class="line"><span class="string">  top: 0;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  ::after &#123;</span></span><br><span class="line"><span class="string">    content: &quot;&quot;;</span></span><br><span class="line"><span class="string">    width: 10px;</span></span><br><span class="line"><span class="string">    height: 10px;</span></span><br><span class="line"><span class="string">    background-color: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.primaryColor&#125;</span>;</span></span><br><span class="line"><span class="string">    border-radius: 50%;</span></span><br><span class="line"><span class="string">    position: absolute;</span></span><br><span class="line"><span class="string">    left: 2px;</span></span><br><span class="line"><span class="string">    top: 2px;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    opacity: 0;</span></span><br><span class="line"><span class="string">    transform: scale(0);</span></span><br><span class="line"><span class="string">    transition: 0.2s ease;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">RadioButton</span> = styled.<span class="property">input</span>.<span class="title function_">attrs</span>(&#123; <span class="attr">type</span>: <span class="string">&quot;radio&quot;</span> &#125;)<span class="string">`</span></span><br><span class="line"><span class="string">  width: 0;</span></span><br><span class="line"><span class="string">  height: 0;</span></span><br><span class="line"><span class="string">  opacity: 0;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  :checked + <span class="subst">$&#123;Circle&#125;</span>::after &#123;</span></span><br><span class="line"><span class="string">    opacity: 1;</span></span><br><span class="line"><span class="string">    transform: scale(1);</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  :not(:checked) + <span class="subst">$&#123;Circle&#125;</span>::after &#123;</span></span><br><span class="line"><span class="string">    opacity: 0;</span></span><br><span class="line"><span class="string">    transform: scale(0);</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledRadioGroup</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: flex;</span></span><br><span class="line"><span class="string">  &amp; &gt; *:not(:first-child) &#123;</span></span><br><span class="line"><span class="string">    margin-left: 24px;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledRadio</span> = styled.<span class="property">label</span><span class="string">`</span></span><br><span class="line"><span class="string">  position: relative;</span></span><br><span class="line"><span class="string">  padding-left: 22px;</span></span><br><span class="line"><span class="string">  cursor: pointer;</span></span><br><span class="line"><span class="string">  display: inline-block;</span></span><br><span class="line"><span class="string">  line-height: 16px;</span></span><br><span class="line"><span class="string">  font-size: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.normal&#125;</span>;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledRadio</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">RadioButton</span>, <span class="title class_">Circle</span>, <span class="title class_">StyledRadioGroup</span> &#125;;</span><br></pre></td></tr></table></figure><p>在 <code>src/components/Radio/radio.stories.js</code>  文件中添加 stories：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Radio</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/Input/Radio&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Radio</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Radio</span>&gt;</span>选项<span class="tag">&lt;/<span class="name">Radio</span>&gt;</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">RadioGroup</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">Radio.Group</span> <span class="attr">label</span>=<span class="string">&quot;请选择&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Radio</span> <span class="attr">name</span>=<span class="string">&quot;option&quot;</span>&gt;</span>选项1<span class="tag">&lt;/<span class="name">Radio</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Radio</span> <span class="attr">name</span>=<span class="string">&quot;option&quot;</span>&gt;</span>选项2<span class="tag">&lt;/<span class="name">Radio</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Radio</span> <span class="attr">name</span>=<span class="string">&quot;option&quot;</span>&gt;</span>选项3<span class="tag">&lt;/<span class="name">Radio</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">Radio.Group</span>&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="四、Switch-开关组件开发"><a href="#四、Switch-开关组件开发" class="headerlink" title="四、Switch 开关组件开发"></a>四、Switch 开关组件开发</h3><p>使用 Hygen 创建一个 <code>Switch</code> 组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new Switch</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/LabelContainer/index.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledSwitch</span>, &#123; <span class="title class_">Checkbox</span>, <span class="title class_">Slider</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Switch</span>(<span class="params">&#123; children, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledSwitch</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Checkbox</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Slider</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledSwitch</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Switch</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Switch</span>;</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/LabelContainer/style.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Slider</span> = styled.<span class="property">span</span><span class="string">`</span></span><br><span class="line"><span class="string">  background-color: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.gray4&#125;</span>;</span></span><br><span class="line"><span class="string">  position: absolute;</span></span><br><span class="line"><span class="string">  left: 0;</span></span><br><span class="line"><span class="string">  right: 0;</span></span><br><span class="line"><span class="string">  top: 0;</span></span><br><span class="line"><span class="string">  bottom: 0;</span></span><br><span class="line"><span class="string">  border-radius: 16px;</span></span><br><span class="line"><span class="string">  transition: 0.4s;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  &amp;::before &#123;</span></span><br><span class="line"><span class="string">    display: block;</span></span><br><span class="line"><span class="string">    content: &quot;&quot;;</span></span><br><span class="line"><span class="string">    position: absolute;</span></span><br><span class="line"><span class="string">    width: 28px;</span></span><br><span class="line"><span class="string">    height: 28px;</span></span><br><span class="line"><span class="string">    top: 1px;</span></span><br><span class="line"><span class="string">    left: 1px;</span></span><br><span class="line"><span class="string">    background-color: white;</span></span><br><span class="line"><span class="string">    box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.05), 0px 2px 2px rgba(0, 0, 0, 0.1),</span></span><br><span class="line"><span class="string">      0px 3px 1px rgba(0, 0, 0, 0.0510643);</span></span><br><span class="line"><span class="string">    border-radius: 50%;</span></span><br><span class="line"><span class="string">    transition: 0.4s;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Checkbox</span> = styled.<span class="property">input</span>.<span class="title function_">attrs</span>(&#123; <span class="attr">type</span>: <span class="string">&quot;checkbox&quot;</span> &#125;)<span class="string">`</span></span><br><span class="line"><span class="string">  width: 0;</span></span><br><span class="line"><span class="string">  height: 0;</span></span><br><span class="line"><span class="string">  opacity: 0;</span></span><br><span class="line"><span class="string">  :checked + <span class="subst">$&#123;Slider&#125;</span> &#123;</span></span><br><span class="line"><span class="string">    background-color: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.primaryColor&#125;</span>;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    ::before &#123;</span></span><br><span class="line"><span class="string">      transform: translateX(20px);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledSwitch</span> = styled.<span class="property">label</span><span class="string">`</span></span><br><span class="line"><span class="string">  width: 51px;</span></span><br><span class="line"><span class="string">  height: 31px;</span></span><br><span class="line"><span class="string">  position: relative;</span></span><br><span class="line"><span class="string">  display: inline-block;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledSwitch</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">Checkbox</span>, <span class="title class_">Slider</span> &#125;;</span><br></pre></td></tr></table></figure><p>在 <code>src/components/Input/input.stories.js</code>  文件中添加 stories：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Switch</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/Input/Switch&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Switch</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">padding:</span> &quot;<span class="attr">1vw</span>&quot; &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Switch</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="五、组装设置页编辑个人资料页面"><a href="#五、组装设置页编辑个人资料页面" class="headerlink" title="五、组装设置页编辑个人资料页面"></a>五、组装设置页编辑个人资料页面</h3><p>使用 Hygen 创建一个 EditProfile 组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new EditProfile</span><br></pre></td></tr></table></figure><p>在 <code>index.js</code> 文件中编辑组件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useState &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledEditProfile</span>, &#123;</span><br><span class="line">  <span class="title class_">GroupTitle</span>,</span><br><span class="line">  <span class="title class_">GenderAndRegion</span>,</span><br><span class="line">  <span class="title class_">SelectGroup</span>,</span><br><span class="line">  <span class="title class_">StyledIconInput</span>,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Profile</span> <span class="keyword">from</span> <span class="string">&quot;components/Profile&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> face <span class="keyword">from</span> <span class="string">&quot;assets/images/face-male-1.jpg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Avatar</span> <span class="keyword">from</span> <span class="string">&quot;components/Avatar&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FontAwesomeIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/react-fontawesome&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; faCheck &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-solid-svg-icons&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Button</span> <span class="keyword">from</span> <span class="string">&quot;components/Button&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;styled-components/macro&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">InputText</span> <span class="keyword">from</span> <span class="string">&quot;components/Input/InputText&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Radio</span> <span class="keyword">from</span> <span class="string">&quot;components/Radio&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">LabelContainer</span> <span class="keyword">from</span> <span class="string">&quot;components/LabelContainer&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Select</span> <span class="keyword">from</span> <span class="string">&quot;components/Select&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Option</span> <span class="keyword">from</span> <span class="string">&quot;components/Option&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  faWeibo,</span><br><span class="line">  faGithub,</span><br><span class="line">  faLinkedin,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-brands-svg-icons&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">EditProfile</span>(<span class="params">&#123; children, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> [showEdit, setShowEdit] = <span class="title function_">useState</span>(<span class="literal">false</span>);</span><br><span class="line">  <span class="keyword">if</span> (!showEdit) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">Profile</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">onEdit</span>=<span class="string">&#123;()</span> =&gt;</span> setShowEdit(true)&#125;</span></span><br><span class="line"><span class="language-xml">        showEditBtn</span></span><br><span class="line"><span class="language-xml">        showCloseIcon=&#123;false&#125;</span></span><br><span class="line"><span class="language-xml">      /&gt;</span></span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledEditProfile</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Avatar</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">src</span>=<span class="string">&#123;face&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">size</span>=<span class="string">&quot;160px&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">css</span>=<span class="string">&#123;</span>`</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">grid-area:</span> <span class="attr">1</span> / <span class="attr">1</span> / <span class="attr">2</span> / <span class="attr">2</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">justify-self:</span> <span class="attr">center</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">margin-bottom:</span> <span class="attr">12px</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        `&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">size</span>=<span class="string">&quot;52px&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">css</span>=<span class="string">&#123;</span>`</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">grid-area:</span> <span class="attr">1</span> / <span class="attr">1</span> / <span class="attr">3</span> / <span class="attr">2</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">z-index:</span> <span class="attr">10</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">align-self:</span> <span class="attr">end</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">justify-self:</span> <span class="attr">end</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        `&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faCheck&#125;</span> <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> setShowEdit(false)&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">GroupTitle</span>&gt;</span>基本信息<span class="tag">&lt;/<span class="name">GroupTitle</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">InputText</span> <span class="attr">label</span>=<span class="string">&quot;昵称&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">GenderAndRegion</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Radio.Group</span> <span class="attr">label</span>=<span class="string">&quot;性别&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Radio</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">Radio</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Radio</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">Radio</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Radio.Group</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">LabelContainer</span> <span class="attr">label</span>=<span class="string">&quot;地区&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">SelectGroup</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Select</span> <span class="attr">type</span>=<span class="string">&quot;form&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Option</span>&gt;</span>省份<span class="tag">&lt;/<span class="name">Option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">Select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Select</span> <span class="attr">type</span>=<span class="string">&quot;form&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Option</span>&gt;</span>城市<span class="tag">&lt;/<span class="name">Option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">Select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Select</span> <span class="attr">type</span>=<span class="string">&quot;form&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Option</span>&gt;</span>区县<span class="tag">&lt;/<span class="name">Option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">Select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">SelectGroup</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">LabelContainer</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">GenderAndRegion</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">InputText</span> <span class="attr">label</span>=<span class="string">&quot;个性签名&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">GroupTitle</span>&gt;</span>联系信息<span class="tag">&lt;/<span class="name">GroupTitle</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">InputText</span> <span class="attr">label</span>=<span class="string">&quot;联系电话&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">InputText</span> <span class="attr">label</span>=<span class="string">&quot;电子邮箱&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">InputText</span> <span class="attr">label</span>=<span class="string">&quot;个人网站&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">GroupTitle</span>&gt;</span>社交信息<span class="tag">&lt;/<span class="name">GroupTitle</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">IconInput</span> <span class="attr">icon</span>=<span class="string">&#123;faWeibo&#125;</span> <span class="attr">bgColor</span>=<span class="string">&quot;#F06767&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">IconInput</span> <span class="attr">icon</span>=<span class="string">&#123;faGithub&#125;</span> <span class="attr">bgColor</span>=<span class="string">&quot;black&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">IconInput</span> <span class="attr">icon</span>=<span class="string">&#123;faLinkedin&#125;</span> <span class="attr">bgColor</span>=<span class="string">&quot;#2483C0&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledEditProfile</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">IconInput</span>(<span class="params">&#123; icon, bgColor, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledIconInput</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Icon.Social</span> <span class="attr">icon</span>=<span class="string">&#123;icon&#125;</span> <span class="attr">bgColor</span>=<span class="string">&#123;bgColor&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">InputText</span> &#123;<span class="attr">...rest</span>&#125; /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledIconInput</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">EditProfile</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">EditProfile</span>;</span><br></pre></td></tr></table></figure><p>再在 <code>style.js</code> 中修改样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Text</span> <span class="keyword">from</span> <span class="string">&quot;components/Text&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">GroupTitle</span> = <span class="title function_">styled</span>(<span class="title class_">Text</span>).<span class="title function_">attrs</span>(&#123; <span class="attr">size</span>: <span class="string">&quot;large&quot;</span> &#125;)<span class="string">`</span></span><br><span class="line"><span class="string">  align-self: end;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">GenderAndRegion</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: grid;</span></span><br><span class="line"><span class="string">  grid-template-columns: 1fr 1fr;</span></span><br><span class="line"><span class="string">  justify-items: space-between;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">SelectGroup</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  &gt; * &#123;</span></span><br><span class="line"><span class="string">    margin: 0 4px;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  margin: 0 -4px;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledIconInput</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: grid;</span></span><br><span class="line"><span class="string">  grid-template-columns: 38px 1fr;</span></span><br><span class="line"><span class="string">  align-items: end;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledEditProfile</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: grid;</span></span><br><span class="line"><span class="string">  grid-template-columns: 1fr;</span></span><br><span class="line"><span class="string">  row-gap: 20px;</span></span><br><span class="line"><span class="string">  padding: 30px;</span></span><br><span class="line"><span class="string">  max-height: 100vh;</span></span><br><span class="line"><span class="string">  overflow-y: auto;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledEditProfile</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">GroupTitle</span>, <span class="title class_">GenderAndRegion</span>, <span class="title class_">SelectGroup</span>, <span class="title class_">StyledIconInput</span> &#125;;</span><br></pre></td></tr></table></figure><p>最后编辑 <code>editProfile.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">EditProfile</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;页面组件/EditProfile&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">EditProfile</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">EditProfile</span> /&gt;</span></span>;</span><br></pre></td></tr></table></figure><h3 id="六、设置项组件开发"><a href="#六、设置项组件开发" class="headerlink" title="六、设置项组件开发"></a>六、设置项组件开发</h3><p>使用 Hygen 创建一个 <code>Settings</code> 组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new Settings</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/Settings/index.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledSettings</span>, &#123;</span><br><span class="line">  <span class="title class_">StyledSettingsItem</span>,</span><br><span class="line">  <span class="title class_">SettingsItemControl</span>,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">ArrowMenuRight</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/arrowMenuRight.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Paragraph</span> <span class="keyword">from</span> <span class="string">&quot;components/Paragraph&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Switch</span> <span class="keyword">from</span> <span class="string">&quot;components/Switch&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Seperator</span> <span class="keyword">from</span> <span class="string">&quot;components/Seperator&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Settings</span>(<span class="params">&#123; children, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">StyledSettings</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span>&#123;children&#125;<span class="tag">&lt;/<span class="name">StyledSettings</span>&gt;</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">SettingsItem</span>(<span class="params">&#123;</span></span><br><span class="line"><span class="params">  type = <span class="string">&quot;switch&quot;</span>,</span></span><br><span class="line"><span class="params">  label,</span></span><br><span class="line"><span class="params">  description,</span></span><br><span class="line"><span class="params">  children,</span></span><br><span class="line"><span class="params">  ...rest</span></span><br><span class="line"><span class="params">&#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledSettingsItem</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">SettingsItemControl</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Paragraph</span> <span class="attr">size</span>=<span class="string">&quot;large&quot;</span>&gt;</span>&#123;label&#125;<span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;type === &quot;switch&quot; &amp;&amp; <span class="tag">&lt;<span class="name">Switch</span> /&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">        &#123;type === &quot;menu&quot; &amp;&amp; <span class="tag">&lt;<span class="name">Icon</span> <span class="attr">icon</span>=<span class="string">&#123;ArrowMenuRight&#125;</span> /&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">SettingsItemControl</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      &#123;description &amp;&amp; (</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Paragraph</span> <span class="attr">type</span>=<span class="string">&quot;secondary&quot;</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">margin:</span> &quot;<span class="attr">4px</span> <span class="attr">0</span>&quot; &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">          &#123;description&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      )&#125;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Seperator</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">marginTop:</span> &quot;<span class="attr">8px</span>&quot;, <span class="attr">marginBottom:</span> &quot;<span class="attr">20px</span>&quot; &#125;&#125; /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledSettingsItem</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Settings</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">type</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">  <span class="attr">label</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">  <span class="attr">description</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Settings</span>;</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/Settings/style.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledSettingsItem</span> = styled.<span class="property">div</span><span class="string">``</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">SettingsItemControl</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: flex;</span></span><br><span class="line"><span class="string">  justify-content: space-between;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledSettings</span> = styled.<span class="property">div</span><span class="string">``</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledSettings</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">StyledSettingsItem</span>, <span class="title class_">SettingsItemControl</span> &#125;;</span><br></pre></td></tr></table></figure><p>在 <code>src/components/Settings/settings.stories.js</code>  文件中添加两行 stories：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Settings</span>, &#123; <span class="title class_">SettingsItem</span> &#125; <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;页面组件/Settings&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Settings</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Settings</span>&gt;</span>默认<span class="tag">&lt;/<span class="name">Settings</span>&gt;</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">WithoutDescription</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">SettingsItem</span> <span class="attr">label</span>=<span class="string">&quot;这是一个没有描述的设置项&quot;</span> /&gt;</span></span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">WithDescription</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">SettingsItem</span> <span class="attr">label</span>=<span class="string">&quot;这是一个有描述的设置项&quot;</span> <span class="attr">description</span>=<span class="string">&quot;这是设置项描述&quot;</span> /&gt;</span></span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">WithMenu</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">SettingsItem</span> <span class="attr">label</span>=<span class="string">&quot;有子菜单的设置项&quot;</span> <span class="attr">type</span>=<span class="string">&quot;menu&quot;</span> /&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="七、组装设置页面"><a href="#七、组装设置页面" class="headerlink" title="七、组装设置页面"></a>七、组装设置页面</h3><p>编辑 <code>src/components/Settings/style.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledSettingsItem</span> = styled.<span class="property">div</span><span class="string">``</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">SettingsItemControl</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: flex;</span></span><br><span class="line"><span class="string">  justify-content: space-between;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledSettingsGroup</span> = styled.<span class="property">div</span><span class="string">``</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledSettings</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  padding: 72px;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledSettings</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">StyledSettingsItem</span>, <span class="title class_">SettingsItemControl</span>, <span class="title class_">StyledSettingsGroup</span> &#125;;</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/Settings/index.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledSettings</span>, &#123;</span><br><span class="line">  <span class="title class_">StyledSettingsItem</span>,</span><br><span class="line">  <span class="title class_">SettingsItemControl</span>,</span><br><span class="line">  <span class="title class_">StyledSettingsGroup</span>,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">ArrowMenuRight</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/arrowMenuRight.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Paragraph</span> <span class="keyword">from</span> <span class="string">&quot;components/Paragraph&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Switch</span> <span class="keyword">from</span> <span class="string">&quot;components/Switch&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Seperator</span> <span class="keyword">from</span> <span class="string">&quot;components/Seperator&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Settings</span>(<span class="params">&#123; children, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledSettings</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">SettingsGroup</span> <span class="attr">groupName</span>=<span class="string">&quot;隐私设置&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">SettingsItem</span> <span class="attr">label</span>=<span class="string">&quot;添加好友时需要验证&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">SettingsItem</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">label</span>=<span class="string">&quot;推荐通讯录好友&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">description</span>=<span class="string">&quot;上传的通讯录只用来匹配好友列表，本应用不会记录和发送任何信息给其它机构或&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">SettingsItem</span> <span class="attr">label</span>=<span class="string">&quot;只能通过手机号找到我&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">SettingsGroup</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">SettingsGroup</span> <span class="attr">groupName</span>=<span class="string">&quot;通知设置&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">SettingsItem</span> <span class="attr">label</span>=<span class="string">&quot;新消息通知&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">SettingsItem</span> <span class="attr">label</span>=<span class="string">&quot;语音和视频通话提醒&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">SettingsItem</span> <span class="attr">label</span>=<span class="string">&quot;显示通知详情&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">SettingsItem</span> <span class="attr">label</span>=<span class="string">&quot;声音&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">SettingsItem</span> <span class="attr">label</span>=<span class="string">&quot;查看已静音的好友列表&quot;</span> <span class="attr">type</span>=<span class="string">&quot;menu&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">SettingsGroup</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledSettings</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">SettingsGroup</span>(<span class="params">&#123; groupName, children, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledSettingsGroup</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Paragraph</span> <span class="attr">size</span>=<span class="string">&quot;xxlarge&quot;</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">paddingBottom:</span> &quot;<span class="attr">24px</span>&quot; &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;groupName&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledSettingsGroup</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">SettingsItem</span>(<span class="params">&#123;</span></span><br><span class="line"><span class="params">  type = <span class="string">&quot;switch&quot;</span>,</span></span><br><span class="line"><span class="params">  label,</span></span><br><span class="line"><span class="params">  description,</span></span><br><span class="line"><span class="params">  children,</span></span><br><span class="line"><span class="params">  ...rest</span></span><br><span class="line"><span class="params">&#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledSettingsItem</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">SettingsItemControl</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Paragraph</span> <span class="attr">size</span>=<span class="string">&quot;large&quot;</span>&gt;</span>&#123;label&#125;<span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;type === &quot;switch&quot; &amp;&amp; <span class="tag">&lt;<span class="name">Switch</span> /&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">        &#123;type === &quot;menu&quot; &amp;&amp; <span class="tag">&lt;<span class="name">Icon</span> <span class="attr">icon</span>=<span class="string">&#123;ArrowMenuRight&#125;</span> /&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">SettingsItemControl</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      &#123;description &amp;&amp; (</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Paragraph</span> <span class="attr">type</span>=<span class="string">&quot;secondary&quot;</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">margin:</span> &quot;<span class="attr">4px</span> <span class="attr">0</span>&quot; &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">          &#123;description&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      )&#125;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Seperator</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">marginTop:</span> &quot;<span class="attr">8px</span>&quot;, <span class="attr">marginBottom:</span> &quot;<span class="attr">20px</span>&quot; &#125;&#125; /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledSettingsItem</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Settings</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">type</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">  <span class="attr">label</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">  <span class="attr">description</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Settings</span>;</span><br></pre></td></tr></table></figure><p>在 <code>src/components/Settings/settings.stories.js</code>  文件中更改 Default Story：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Settings</span> /&gt;</span></span>;</span><br></pre></td></tr></table></figure><h3 id="八、屏蔽列表组件开发"><a href="#八、屏蔽列表组件开发" class="headerlink" title="八、屏蔽列表组件开发"></a>八、屏蔽列表组件开发</h3><p>使用 Hygen 创建一个 <code>BlockedList</code> 组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new BlockedList</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/BlockedList/index.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledBlockedList</span>, &#123;</span><br><span class="line">  <span class="title class_">SettingsMenu</span>,</span><br><span class="line">  <span class="title class_">ClosableAvatar</span>,</span><br><span class="line">  <span class="title class_">BlockedAvatar</span>,</span><br><span class="line">  <span class="title class_">CloseIcon</span>,</span><br><span class="line">  <span class="title class_">BlockedName</span>,</span><br><span class="line">  <span class="title class_">FriendList</span>,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">ArrowMenuLeft</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/arrowMenuLeft.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> closeCircle &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/closeCircle.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> face <span class="keyword">from</span> <span class="string">&quot;assets/images/face-male-1.jpg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;styled-components/macro&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Text</span> <span class="keyword">from</span> <span class="string">&quot;components/Text&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">BlockedList</span>(<span class="params">&#123; children, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledBlockedList</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">SettingsMenu</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Icon</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">icon</span>=<span class="string">&#123;ArrowMenuLeft&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">css</span>=<span class="string">&#123;</span>`</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">cursor:</span> <span class="attr">pointer</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          `&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Text</span> <span class="attr">size</span>=<span class="string">&quot;xxlarge&quot;</span>&gt;</span>已屏蔽的好友<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">SettingsMenu</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">FriendList</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;new Array(8).fill(0).map((_, i) =&gt; &#123;</span></span><br><span class="line"><span class="language-xml">          return (</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">ClosableAvatar</span> <span class="attr">key</span>=<span class="string">&#123;i&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">BlockedAvatar</span> <span class="attr">size</span>=<span class="string">&quot;105px&quot;</span> <span class="attr">src</span>=<span class="string">&#123;face&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">CloseIcon</span> <span class="attr">width</span>=<span class="string">&#123;46&#125;</span> <span class="attr">height</span>=<span class="string">&#123;51&#125;</span> <span class="attr">icon</span>=<span class="string">&#123;closeCircle&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">BlockedName</span>&gt;</span>李浩<span class="tag">&lt;/<span class="name">BlockedName</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">ClosableAvatar</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          );</span></span><br><span class="line"><span class="language-xml">        &#125;)&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">FriendList</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledBlockedList</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">BlockedList</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">BlockedList</span>;</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/BlockedList/style.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledText</span> <span class="keyword">from</span> <span class="string">&quot;components/Text/style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Avatar</span> <span class="keyword">from</span> <span class="string">&quot;components/Avatar&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Text</span> <span class="keyword">from</span> <span class="string">&quot;components/Text&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">BlockedAvatar</span> = <span class="title function_">styled</span>(<span class="title class_">Avatar</span>)<span class="string">`</span></span><br><span class="line"><span class="string">  grid-area: avatar;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">BlockedName</span> = <span class="title function_">styled</span>(<span class="title class_">Text</span>).<span class="title function_">attrs</span>(&#123; <span class="attr">size</span>: <span class="string">&quot;xlarge&quot;</span> &#125;)<span class="string">`</span></span><br><span class="line"><span class="string">  grid-area: name;</span></span><br><span class="line"><span class="string">  margin-top: 20px;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">CloseIcon</span> = <span class="title function_">styled</span>(<span class="title class_">Icon</span>)<span class="string">`</span></span><br><span class="line"><span class="string">  grid-area: 2 / 3 / 5 / 4;</span></span><br><span class="line"><span class="string">  z-index: 10;</span></span><br><span class="line"><span class="string">  margin-top: 10px;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">ClosableAvatar</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: grid;</span></span><br><span class="line"><span class="string">  grid-template-areas:</span></span><br><span class="line"><span class="string">    &quot;avatar avatar avatar&quot;</span></span><br><span class="line"><span class="string">    &quot;avatar avatar avatar&quot;</span></span><br><span class="line"><span class="string">    &quot;avatar avatar avatar&quot;</span></span><br><span class="line"><span class="string">    &quot;name name name&quot;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  justify-items: center;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">SettingsMenu</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  height: 148px;</span></span><br><span class="line"><span class="string">  display: grid;</span></span><br><span class="line"><span class="string">  grid-template-columns: 10px 1fr;</span></span><br><span class="line"><span class="string">  align-items: center;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;StyledText&#125;</span> &#123;</span></span><br><span class="line"><span class="string">    grid-column: span 1/-1;</span></span><br><span class="line"><span class="string">    justify-self: center;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">FriendList</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: grid;</span></span><br><span class="line"><span class="string">  grid-template-columns: repeat(5, 1fr);</span></span><br><span class="line"><span class="string">  row-gap: 24px;</span></span><br><span class="line"><span class="string">  justify-items: center;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledBlockedList</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  padding: 2vh 4vw;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledBlockedList</span>;</span><br><span class="line"><span class="keyword">export</span> &#123;</span><br><span class="line">  <span class="title class_">SettingsMenu</span>,</span><br><span class="line">  <span class="title class_">ClosableAvatar</span>,</span><br><span class="line">  <span class="title class_">BlockedAvatar</span>,</span><br><span class="line">  <span class="title class_">BlockedName</span>,</span><br><span class="line">  <span class="title class_">CloseIcon</span>,</span><br><span class="line">  <span class="title class_">FriendList</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>修改 <code>src/components/BlockedList/blockedList.stories.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">BlockedList</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;页面组件/BlockedList&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">BlockedList</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">BlockedList</span> /&gt;</span></span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;React 即时通信 UI 实战第八章。React 即时通信 UI 实战为&lt;a href=&quot;https://www.bilibili.com/video/BV1PK4y1b7bY?p=2&amp;amp;spm_id_from=pageDriver&amp;amp;vd_source=0965c74096f788f105780e5d5d0e9ebf&quot;&gt;峰华前端工程师&lt;/a&gt;推出的 React 实战课程，以聊天（即时通信）为原型，构建了一整套的 UI 组件库，课程重点在于 UI 组件的分析和实现，力求打造自用组件库。本章包括设置页面中的 InputText、Select（表单）、Radio、Switch 开关等组件。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Web前端" scheme="http://blog.zhuangzhihao.top/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="React" scheme="http://blog.zhuangzhihao.top/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>Java 语言程序设计实践性环节</title>
    <link href="http://blog.zhuangzhihao.top/Java%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%AE%9E%E8%B7%B5%E7%8E%AF%E8%8A%82/"/>
    <id>http://blog.zhuangzhihao.top/Java%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%AE%9E%E8%B7%B5%E7%8E%AF%E8%8A%82/</id>
    <published>2022-10-29T16:00:00.000Z</published>
    <updated>2022-10-29T00:53:27.405Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Java 语言程序设计实践环节（04748）是 Java 语言程序设计（一）专业课的上级测试部分，考核目标是掌握调试、完善和简单设计 Java 程序的能力、掌握 MyEclipse 开发工具的使用（新建项目，新建类，修改与运行程序）、掌握 Java 的基本语句，基本输入输出流、掌握使用类及方法进行 Java 面向对象程序开发的方法。运行环境是 Windows 10 系统下的 MyEclipse 软件。</p></blockquote><span id="more"></span><h4 id="一、输入、输出语句"><a href="#一、输入、输出语句" class="headerlink" title="一、输入、输出语句"></a>一、输入、输出语句</h4><p>使用 Scanner 语句输入时需要引入包 <code>import java.util.Scanner;</code> ，并定义 Scanner 对象：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test1</span> &#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">      <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">      <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">      <span class="type">String</span> <span class="variable">temp</span> <span class="operator">=</span> sc.next();</span><br><span class="line">      System.out.println(<span class="string">&quot;temp：&quot;</span>+ n);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>BufferedReader</code> 由 <code>Reader</code> 类扩展而来，提供通用的缓冲方式文本读取，而且提供了很实用的 <code>readLine</code>，读取一个文本行，从字符输入流中读取文本，缓冲各个字符，从而提供字符、数组和行的高效读取。使用 BufferedReader 流前需要引入 <code>import java.io.Reader;</code>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*</span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test2</span> &#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">      String st;</span><br><span class="line">      <span class="type">int</span> num;</span><br><span class="line">      <span class="type">float</span> fnum;</span><br><span class="line">      <span class="keyword">try</span>&#123;</span><br><span class="line">          <span class="type">BufferedReader</span> <span class="variable">br</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">          <span class="comment">// 读取一个文本行</span></span><br><span class="line">          st = br.readLine(); <span class="comment">// 阻塞式，当没有数据读取时，就一直会阻塞，而不是返回null</span></span><br><span class="line">            num = Integer.parseInt(br.readLine());  <span class="comment">//需要整型数据 Integer 转换为基本数据类型 int</span></span><br><span class="line">          fnum = Float.parseFloat(br.readLine());  <span class="comment">//Java 把从键盘输入的数据一律看作是字符串，因此若要从键盘输入并让系统认可是数值型数据，必须经过转换。</span></span><br><span class="line">          System.out.println(st + num + snum);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(IOException e)&#123;</span><br><span class="line">          System.out.println(<span class="string">&quot;错误&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二、实现常见的基本算法"><a href="#二、实现常见的基本算法" class="headerlink" title="二、实现常见的基本算法"></a>二、实现常见的基本算法</h3><p>字符统计程序。编写输入字符行，统计输入字符行中数字符、英文字母个数的 Java 应用程序：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test3</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">0</span> ;</span><br><span class="line">    <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">0</span> ;</span><br><span class="line">    <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">0</span> ;</span><br><span class="line">    <span class="type">int</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">0</span> ;</span><br><span class="line">    <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in) ;</span><br><span class="line">    System.out.println(<span class="string">&quot;请输入一串字符串&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> sc.nextLine() ;</span><br><span class="line">    <span class="type">char</span>[] sr = s.toCharArray() ;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span> ;i&lt;sr.length ; i ++ ) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&#x27;A&#x27;</span>&lt;=sr[i] &amp;&amp; <span class="string">&#x27;Z&#x27;</span>&gt;=sr[i] || <span class="string">&#x27;a&#x27;</span>&lt;=sr[i] &amp;&amp; <span class="string">&#x27;z&#x27;</span>&gt;=sr[i] ) &#123;</span><br><span class="line">          a++ ;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">&#x27;0&#x27;</span>&lt;=sr[i] &amp;&amp; <span class="string">&#x27;9&#x27;</span>&gt;=sr[i]) &#123;</span><br><span class="line">          b++ ;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(sr[i] == <span class="string">&#x27; &#x27;</span>) &#123;</span><br><span class="line">          c++ ;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">          d++ ;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;字母的个数为：&quot;</span> + a);</span><br><span class="line">    System.out.println(<span class="string">&quot;数字的个数为：&quot;</span> + b);</span><br><span class="line">    System.out.println(<span class="string">&quot;空格的个数为：&quot;</span> + c);</span><br><span class="line">    System.out.println(<span class="string">&quot;其他字符的个数为：&quot;</span> + d);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>特殊性质数的判断。例如水仙花数、完数、素数的判断程序：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 水仙花数，即：三位数的每一位的立方和等于这个三位数本身</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Daffodil</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span>  <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> sum=<span class="number">0</span>, number;</span><br><span class="line">        <span class="keyword">for</span>(number=<span class="number">100</span>;number&lt;=<span class="number">999</span>;number++) &#123;</span><br><span class="line">           <span class="type">int</span> <span class="variable">num1</span> <span class="operator">=</span> number%<span class="number">10</span>;</span><br><span class="line">           <span class="type">int</span> <span class="variable">num10</span> <span class="operator">=</span> number/<span class="number">10</span>%<span class="number">10</span>;</span><br><span class="line">           <span class="type">int</span> <span class="variable">num100</span> <span class="operator">=</span> number/<span class="number">100</span>%<span class="number">10</span>;</span><br><span class="line">           sum = num1*num1*num1 + num10*num10*num10 + num100*num100*num100;</span><br><span class="line">            <span class="keyword">if</span>(sum==number) &#123;</span><br><span class="line">                System.out.println(number+<span class="string">&quot;是水仙花数&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 完数，即：所有因子和（除了他本身）== 他本身</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WanNumber</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> num=<span class="number">1</span>;num&lt;=<span class="number">1000</span>;num++) &#123;</span><br><span class="line">           <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>( i=<span class="number">1</span>;i&lt;num;i++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(num%i==<span class="number">0</span>) &#123;</span><br><span class="line">                    sum+=i;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(num==sum) &#123;</span><br><span class="line">                System.out.println(num);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//素数：只能被1和他本身整除的数</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PrimeDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入一个数&quot;</span>);</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">paime</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        <span class="type">boolean</span> t=<span class="literal">true</span>;</span><br><span class="line">         <span class="type">int</span> i;</span><br><span class="line">         <span class="keyword">for</span> (i=<span class="number">2</span>;i&lt;paime;i++)</span><br><span class="line">         &#123;</span><br><span class="line">             <span class="keyword">if</span>(paime%i==<span class="number">0</span>)</span><br><span class="line">             &#123;</span><br><span class="line">                 t=<span class="literal">false</span>;</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">if</span>(t)</span><br><span class="line">         &#123;</span><br><span class="line">             System.out.println(<span class="string">&quot;是素数&quot;</span>);</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">else</span></span><br><span class="line">         &#123;</span><br><span class="line">           System.out.println(<span class="string">&quot;是素数&quot;</span>);</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>类的继承定义。声明几何形状类，类中定义几何形状的成员变量和方法，然后继承声明几何形状类，创建对象，并显示对象的相关信息。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GeometricObject</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String col;    <span class="comment">//String类型的私有数据域color，用于保存几何对象的颜色，默认值为white。</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> fil;   <span class="comment">//boolean类型的私有数据域filled，用于表明几何对象是否填充颜色，默认值为false。</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">GeometricObject</span><span class="params">()</span> &#123;  <span class="comment">//有参构造方法，将颜色、是否填充颜色设置为给定的参数。</span></span><br><span class="line">      col = <span class="string">&quot;white&quot;</span>;</span><br><span class="line">      fil = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">GeometricObject</span><span class="params">(String col, <span class="type">boolean</span> fil)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.col = col;</span><br><span class="line">      <span class="built_in">this</span>.fil = fil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCol</span><span class="params">()</span> &#123;    <span class="comment">//访问器方法getColor、isFilled，分别用于访问颜色、是否填充颜色。</span></span><br><span class="line">      <span class="keyword">return</span> col;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCol</span><span class="params">(String col)</span> &#123;   <span class="comment">//更改器方法setColor、setFilled，分别用于更改颜色、是否填充颜色。</span></span><br><span class="line">      <span class="built_in">this</span>.col = col;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isFil</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> fil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setFil</span><span class="params">(<span class="type">boolean</span> fil)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.fil = fil;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Triangle</span> <span class="keyword">extends</span> <span class="title class_">GeometricObject</span> &#123;   <span class="comment">//定义一个名为Triangle的类来继承GeometricObject类。</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> s1;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> s2;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> s3;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Triangle</span><span class="params">()</span> &#123;</span><br><span class="line">      s1 = <span class="number">1</span>;</span><br><span class="line">      s2 = <span class="number">1</span>;</span><br><span class="line">      s3 = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Triangle</span><span class="params">(String col, <span class="type">boolean</span> fil, <span class="type">double</span> s1, <span class="type">double</span> s2, <span class="type">double</span> s3)</span> &#123;</span><br><span class="line">      <span class="built_in">super</span>(col, fil);</span><br><span class="line">      <span class="built_in">this</span>.s1 = s1;</span><br><span class="line">      <span class="built_in">this</span>.s2 = s2;</span><br><span class="line">      <span class="built_in">this</span>.s3 = s3;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">gets</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="type">double</span> <span class="variable">p</span> <span class="operator">=</span> (s1 + s2 + s3) / <span class="number">2.0</span>;</span><br><span class="line">      <span class="type">double</span> <span class="variable">s</span> <span class="operator">=</span> p * (p - s1) * (p - s2) * (p - s3);</span><br><span class="line">      s = Math.sqrt(s);</span><br><span class="line">      <span class="keyword">return</span> s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getc</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> s1 + s2 + s3;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">tos</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">      String s=<span class="string">&quot;Triangle:\n&quot;</span>+<span class="string">&quot;side1 = &quot;</span>+s1+<span class="string">&quot; side2 = &quot;</span>+s2+<span class="string">&quot; side3 = &quot;</span>+s3+<span class="string">&quot;\n&quot;</span></span><br><span class="line">        +<span class="string">&quot;Color: &quot;</span>+getCol()+<span class="string">&quot; and filled: &quot;</span>+isFil()+<span class="string">&quot;\n&quot;</span></span><br><span class="line">        +<span class="string">&quot;The area is &quot;</span>+gets()+<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;The perimeter is &quot;</span>+getc()+<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">      System.out.println(s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Scanner sc=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">double</span> a=sc.nextDouble();</span><br><span class="line">        <span class="type">double</span> b=sc.nextDouble();</span><br><span class="line">        <span class="type">double</span> c=sc.nextDouble();</span><br><span class="line">        String s=sc.next();</span><br><span class="line">        <span class="type">boolean</span> f=sc.nextBoolean();</span><br><span class="line">        sc.close();</span><br><span class="line">        Triangle t=<span class="keyword">new</span> <span class="title class_">Triangle</span>(s,f,a,b,c);</span><br><span class="line">        t.tos();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数组排序程序。编写输入整数序列、对输入的整数进行排序后输出的程序：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 冒泡排序算法</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Array4</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">int</span>[] Arr = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">14</span>,<span class="number">52</span>,<span class="number">56</span>,<span class="number">32</span>,<span class="number">17</span>&#125;;</span><br><span class="line">        printArray(Arr);</span><br><span class="line">        bubbleSort(Arr);</span><br><span class="line">        printArray(Arr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printArray</span><span class="params">(<span class="type">int</span>[] arr)</span>&#123;</span><br><span class="line">        System.out.print(<span class="string">&quot;[&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> x=<span class="number">0</span>; x&lt;arr.length; x++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(x!=arr.length-<span class="number">1</span>)</span><br><span class="line">              System.out.print(arr[x]+<span class="string">&quot;,&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">              System.out.println(arr[x]+<span class="string">&quot;]&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> a, <span class="type">int</span> b)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[a];</span><br><span class="line">        arr[a] = arr[b];</span><br><span class="line">        arr[b] = temp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//冒泡排序法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">bubbleSort</span><span class="params">(<span class="type">int</span>[] arr)</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> x=<span class="number">0</span>; x&lt;arr.length-<span class="number">1</span>; x++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> y=<span class="number">0</span>; y&lt;arr.length-<span class="number">1</span>-x;y++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(arr[y]&gt;arr[y+<span class="number">1</span>])</span><br><span class="line">                  swap(arr,y+<span class="number">1</span>,y);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>提取整数中每个数字的程序：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span>&#123;</span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">print</span><span class="params">(<span class="type">int</span> num)</span>&#123;</span><br><span class="line">      <span class="keyword">while</span>(num&gt;<span class="number">0</span>)&#123;</span><br><span class="line">          System.out.print(num%<span class="number">10</span>+<span class="string">&quot;，&quot;</span>);</span><br><span class="line">          num/=<span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String [] args)</span>&#123;</span><br><span class="line">      <span class="type">Test</span> <span class="variable">t</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Test</span>();</span><br><span class="line">      t.print(<span class="number">12345</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三、基于-Swing-和-AWT-的界面程序设计"><a href="#三、基于-Swing-和-AWT-的界面程序设计" class="headerlink" title="三、基于 Swing 和 AWT 的界面程序设计"></a>三、基于 Swing 和 AWT 的界面程序设计</h3><p>两个顶级容器的应用：Frame(窗口)、Dialog(弹窗)  ：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.Button;</span><br><span class="line"><span class="keyword">import</span> java.awt.Color;</span><br><span class="line"><span class="keyword">import</span> java.awt.Dialog;</span><br><span class="line"><span class="keyword">import</span> java.awt.Frame;</span><br><span class="line"><span class="keyword">import</span> java.awt.Label;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowEvent;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Myframe</span> <span class="variable">frame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Myframe</span>();</span><br><span class="line">        frame.init();</span><br><span class="line">        frame.compen();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建一个桌面窗口，并在窗口中添加一个按钮组件</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Myframe</span> <span class="keyword">extends</span> <span class="title class_">Frame</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> -<span class="number">3005332394925719672L</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Myframe</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="built_in">super</span>(<span class="string">&quot;测试窗口&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//通过设置初始化函数来对此窗口进行初始化</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.setVisible(<span class="literal">true</span>);</span><br><span class="line">        <span class="built_in">super</span>.setBounds(<span class="number">200</span>, <span class="number">200</span>, <span class="number">200</span>, <span class="number">200</span>);</span><br><span class="line">        <span class="comment">//为窗口添加事件，进行关闭操作</span></span><br><span class="line">        <span class="built_in">this</span>.addWindowListener(<span class="keyword">new</span> <span class="title class_">WindowAdapter</span>() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">windowClosing</span><span class="params">(WindowEvent e)</span> &#123;</span><br><span class="line">            System.exit(<span class="number">0</span>);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//为此窗口添加一个组件---按钮组件</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">compen</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Button</span> <span class="variable">button</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;按钮&quot;</span>);</span><br><span class="line">        button.setSize(<span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line">        <span class="comment">//设置组件的布局方式</span></span><br><span class="line">        <span class="built_in">this</span>.setLayout(<span class="literal">null</span>);;</span><br><span class="line">        <span class="built_in">this</span>.add(button);</span><br><span class="line">        <span class="comment">//为按钮主键添加侦听器---侦听器通过内部类实现---接口、继承</span></span><br><span class="line">        button.addActionListener(<span class="keyword">new</span> <span class="title class_">ActionListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span> &#123;</span><br><span class="line">                <span class="comment">//当侦听到事件后，响应此继承的方法，并执行方法中的语句</span></span><br><span class="line">                <span class="comment">//事件产生后，重新创建一个弹窗对象进行显示</span></span><br><span class="line">                end();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">end</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">new</span> <span class="title class_">Mydialog</span>(<span class="built_in">this</span>,<span class="string">&quot;测试弹窗&quot;</span>).increase();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//创建一个弹窗通过监听弹出</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Mydialog</span> <span class="keyword">extends</span> <span class="title class_">Dialog</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加构造函数，直接通过构造函数对弹窗进行初始化</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Mydialog</span><span class="params">(Frame owner,String title)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(owner,title);</span><br><span class="line">        setVisible(<span class="literal">true</span>);<span class="comment">//方法继承自window类，往往用于顶级窗口，设置窗口是否可见</span></span><br><span class="line">        setSize(<span class="number">100</span>, <span class="number">200</span>);<span class="comment">//继承自window类，用于设置组件的大小</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 继承自window类，用于设置窗口的背景颜色，</span></span><br><span class="line"><span class="comment">         * 其需要传入color类对象可以使用color类中的类变量。</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        setBackground(Color.BLUE);</span><br><span class="line">        setLocation(<span class="number">200</span>, <span class="number">300</span>);<span class="comment">//继承自window类，移动组件到指定位置，也就是将组件放到指定位置。以物理机左上角作为原点。</span></span><br><span class="line">        <span class="comment">/*setBounds(x, y, width, height);</span></span><br><span class="line"><span class="comment">         * 继承自window类，用于移动组件到指定位置，并设定组件的大小。</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="comment">//为窗口添加事件，进行关闭操作,</span></span><br><span class="line">        <span class="comment">//这种内部类不去实现一个接口而是去继承一个类，而这个类实现类所有方法，但是方法体为空，便于以后</span></span><br><span class="line">        <span class="comment">//进行使用，这种模式方法叫做适配器模式，大大降低了无效代码的使用。</span></span><br><span class="line">        <span class="built_in">this</span>.addWindowListener(<span class="keyword">new</span> <span class="title class_">WindowAdapter</span>() &#123;</span><br><span class="line">            <span class="comment">//当事件产生后，系统构造出内部类对象，通过此对象调用，复写的方法</span></span><br><span class="line">            <span class="comment">//其中复写中方法中的参数，通过系统产生传入，</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">windowClosing</span><span class="params">(WindowEvent e)</span> &#123;</span><br><span class="line">              System.exit(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//向此容器中添加组件---文本框</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">increase</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Label</span> <span class="variable">label</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Label</span>(<span class="string">&quot;这是一个文本框&quot;</span>,<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">this</span>.add(label);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="四、JavaApplet-下的图形处理"><a href="#四、JavaApplet-下的图形处理" class="headerlink" title="四、JavaApplet 下的图形处理"></a>四、JavaApplet 下的图形处理</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.* ;</span><br><span class="line"><span class="keyword">import</span> java.applet.Applet ;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AppletImage</span> <span class="keyword">extends</span> <span class="title class_">Applet</span>&#123;</span><br><span class="line"><span class="keyword">private</span> Image img[] ;</span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> index=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span>&#123;</span><br><span class="line">img=<span class="keyword">new</span> <span class="title class_">Image</span>[<span class="number">10</span>];</span><br><span class="line"><span class="type">int</span> num ;</span><br><span class="line"><span class="keyword">for</span>(num=<span class="number">0</span>;num&lt;<span class="number">10</span>;num++)&#123;</span><br><span class="line">img[num]=getImage(getDocumentBase(),<span class="string">&quot;T&quot;</span>+(num+<span class="number">1</span>)+<span class="string">&quot;.gif&quot;</span>) ;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span>&#123;</span><br><span class="line">      </span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">paint</span><span class="params">(Graphics g)</span>&#123;</span><br><span class="line">        g.drawImage(img[index],<span class="number">0</span>,<span class="number">0</span>,<span class="built_in">this</span>) ;  <span class="comment">//绘制图像</span></span><br><span class="line">        index=++index%<span class="number">10</span> ;</span><br><span class="line">        repaint() ;  <span class="comment">//重画applet 界面</span></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">          Thread.sleep(<span class="number">500</span>) ;  <span class="comment">//线程暂停</span></span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">          </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="五、Java-下的多线程程序设计"><a href="#五、Java-下的多线程程序设计" class="headerlink" title="五、Java 下的多线程程序设计"></a>五、Java 下的多线程程序设计</h3><p>编写一个有两个线程的程序，第一个线程用来计算 1~100 之间的偶数及个数，第二个线程用来计算 1-100 之间的偶数及个数：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> experiment4;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">NumberRunnable</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> first;</span><br><span class="line">    NumberRunnable(<span class="type">int</span> first)&#123;</span><br><span class="line">        <span class="built_in">this</span>.first=first;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=first;i&lt;=<span class="number">100</span>;i+=<span class="number">2</span>)&#123;</span><br><span class="line">            System.out.println(i+ <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;结束！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Exp4_1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">NumberRunnable</span> <span class="variable">runnable1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">NumberRunnable</span>(<span class="number">1</span>);</span><br><span class="line">        <span class="type">NumberRunnable</span> <span class="variable">runnable2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">NumberRunnable</span>(<span class="number">2</span>);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread_odd</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(runnable1,<span class="string">&quot;奇数线程&quot;</span>);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread_even</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(runnable2,<span class="string">&quot;偶数线程&quot;</span>);</span><br><span class="line">        thread_odd.start();</span><br><span class="line">        thread_even.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Java 语言程序设计实践环节（04748）是 Java 语言程序设计（一）专业课的上级测试部分，考核目标是掌握调试、完善和简单设计 Java 程序的能力、掌握 MyEclipse 开发工具的使用（新建项目，新建类，修改与运行程序）、掌握 Java 的基本语句，基本输入输出流、掌握使用类及方法进行 Java 面向对象程序开发的方法。运行环境是 Windows 10 系统下的 MyEclipse 软件。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="计算机科学与技术" scheme="http://blog.zhuangzhihao.top/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>操作系统实践性环节</title>
    <link href="http://blog.zhuangzhihao.top/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%B7%B5%E7%8E%AF%E8%8A%82/"/>
    <id>http://blog.zhuangzhihao.top/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%B7%B5%E7%8E%AF%E8%8A%82/</id>
    <published>2022-10-24T16:00:00.000Z</published>
    <updated>2022-10-26T03:19:00.762Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>操作系统（02327）实践环节是操作系统专业课的上级测试部分，考核目标是具有熟练使用 Linux 系统常用命令的能力以及初步掌握进程的创建、控制及进程间通信程序的编写方法。运行环境是通过 putty 远程登录工具远程连接 Linux 服务器，在练习时我仍旧使用系统默认终端（zsh）连接<a href="/Ubuntu远程开发配置">云服务器</a>使用。</p></blockquote><span id="more"></span><h3 id="一、Linux-系统常用命令的使用"><a href="#一、Linux-系统常用命令的使用" class="headerlink" title="一、Linux 系统常用命令的使用"></a>一、Linux 系统常用命令的使用</h3><h4 id="登陆命令"><a href="#登陆命令" class="headerlink" title="登陆命令"></a>登陆命令</h4><p>建立 SSH 连接：<code>ssh root@zhuangzhihao.top</code></p><p>清屏：<code>ctrl + l</code> 或者 <code>clear</code></p><p>终止当前运行：<code>ctrl + c</code></p><p>执行 exit 命令退回到原来用户：<code>exit</code> 或 <code>logout</code> 或 <code>ctrl + d</code></p><h4 id="文件处理命令"><a href="#文件处理命令" class="headerlink" title="文件处理命令"></a>文件处理命令</h4><p>显示当前目录下的文件：<code>ls</code></p><p>显示当前目录下的所有文件，包括隐藏文件：<code>ls -a</code></p><p>列表显示详细信息：<code>ls -l</code></p><p>在此目录下创建一个 <code>dir</code> 目录：<code>mkdir dir</code></p><p>递归创建，如果没有 <code>dir</code> 目录的话会报错，如果加上 <code>-p</code> 则不会：<code>mkdir -p dir/subdir</code></p><p>同时创建 <code>dir/subdir</code>、<code>dir2</code> 三个目录：<code>mkdir -p dir/subdir dir2</code></p><p>切换路径到 <code>root</code> 目录下：<code>cd /root</code></p><p>切换到上一目录：<code>cd ./</code></p><p>切换到下一目录：<code>cd ../</code></p><p>删除当前目录下，一个空白目录 <code>dir</code>：<code>rmdir ./dir</code></p><p>显示当前路径：<code>pwd</code></p><p>将 <code>install.sh</code> 文件，复制到 <code>dir</code> 目录下：<code>cp install.sh dir</code></p><p>将 <code>dir</code> 目录，复制到 <code>dir2</code> 目录下：<code>cp -r dir dir2</code></p><p>将 <code>dir</code> 这个目录，复制到 <code>dir2</code> 目录下，如果没有 <code>newdir</code> 目录，那么将 <code>dir</code> 的名字改为 <code>newdir</code>：<code>cp -r dir dir2/newdir</code></p><p>将 <code>install.sh</code> 文件，复制到 <code>dir2</code> 目录下，但保证 <code>install.sh</code> 文件属性不会改变，例如最后一次修改的时间不会改变：<code>cp -p install.sh dir2</code></p><p>将 <code>dir</code> 目录剪切到 <code>dir2</code> 目录：<code>mv dir dir2</code> （如果没有 <code>dir2</code> 这个目录，呢么就是将 <code>dir</code> 的名字改为 <code>dir2</code>，相当于改名。）</p><p>删除 <code>install.sh</code> 文件，出现提示是否删除确认：<code>rm install.sh</code></p><p>删除 <code>install.sh</code> 文件，<code>-f</code> 不出现提示：<code>rm -f install.sh</code></p><p>直接删除 <code>dir</code> 目录，<code>-r</code> 删除目录：<code>rm -rf dir</code></p><p>直接删除此文件夹下的所有文件目录：<code>rm -rf *</code></p><p>创建一个空文件 <code>hello.c</code>：<code>touch hello.c</code></p><p>同时创建 <code>hello</code> 和 <code>hello.c</code> 两个文件：<code>touch hello hello.c</code></p><p>创建一个文件名为 <code>hello hello.c</code> 的文件：<code>touch &quot;hello hello.c&quot;</code></p><p>显示 <code>hello</code> 文件内容：<code>cat hello</code></p><p>显示 <code>hello</code> 文件内容，并显示行数：<code>cat -n hello</code></p><p>倒着显示 <code>hello</code> 文件内容（没有 <code>-n</code> 属性）：`tac hello</p><p>将 <code>hello</code> 文件的内容分页显示：<code>more hello</code>（当数据较多时可以使用这命令，使用空格或 <code>f</code> 翻页，<code>q</code> 退出）</p><p>将 <code>hello</code> 文件的内容倒着显示分页显示：<code>less hello</code></p><p>查看 <code>hello</code> 文件前 5 行内容：<code>head -n 5 hello</code>（如果不加行数，默认为 10）</p><p>查看 <code>hello</code> 文件后 10 行内容：<code>tail-n hello</code></p><h4 id="链接文件"><a href="#链接文件" class="headerlink" title="链接文件"></a>链接文件</h4><p>创建 <code>hello</code> 文件的软连接为 <code>hello.sort</code>：<code>ln hello ./hello.sort</code></p><p>创建 <code>hello</code> 文件的硬连接为 <code>hello.sort</code>：<code>ln -s hello ./hello.sort</code></p><p>创建 <code>dir</code> 目录的软连接为 <code>dir.sort</code>：<code>ln dir ./dir.sort</code>（注意：不允许将硬链接指向目录）</p><p>编译链接：<code>gcc -otest.out E1_fork.c</code>（生成可执行文件 <code>test.out</code>）</p><p>运行当前目录下的可执行文件 <code>test.out</code>：<code>./test.out</code></p><h4 id="权限管理命令"><a href="#权限管理命令" class="headerlink" title="权限管理命令"></a>权限管理命令</h4><p> 改变目录或文件权限：<code>chmod [设置权限的对象]+/-[权限] [文件]</code></p><ul><li>设置权限的对象包括所有者、所属组、其他这三类。<code>u</code> 表示文件的所有者，<code>g</code> 表示文件的所属组，<code>o</code> 代表其他人，<code>+</code> 代表增加权限，<code>-</code> 代表去掉权限</li><li>文件的权限就是读、写和执行，分别用 <code>r</code>、<code>w</code>、<code>x</code> 表示</li><li>多个设置权限可以使用逗号分隔：<code>chmod u+x,g+w abc.txt</code></li></ul><p>将 <code>abc.txt</code> 文件所属组的权限增加一个写的权限：<code>chmod g+w abc.txt</code></p><p>假设您是名为 <code>myfile</code> 的文件的所有者，并且要设置其权限，以便：<code>user</code> 可以 <code>read</code>，<code>write</code> 和 <code>execute</code> 它，且你的 <code>group</code> 的成员可以 <code>read</code> 和 <code>execute</code> 它，且 <code>others</code> 只能读取它：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> u=rwx,g=rx,o=r myfile</span><br></pre></td></tr></table></figure><p>使用八进制权限表示法的数字权限，4 代表阅读， 2 代表写， 1 代表执行，以及 0 表示无权限。</p><ul><li>因此，7 是权限 4 + 2 + 1（读取、写入和执行），5 是 4 + 0 + 1（读取、无写入和执行），4 是 4 + 0 + 0（读取、无写入和未执行）。</li><li>数字表示权限，三个数字分别表示所有者，所属组和其他人。</li><li>给 user、group 和 others 都赋予读写执行权限：<code>chmod 777 abc.txt</code></li></ul><p>修改 <code>hello</code>.c 文件的所有者为 zhuang：<code>chown zhuang hello.c</code></p><p>修改 <code>hello</code>.c 文件的所属组为 <code>xionggroup</code>：<code>chgrp xionggroup hello.c</code></p><p>显示，设置文件的缺省权限：<code>umask -S</code></p><h4 id="文件搜索命令"><a href="#文件搜索命令" class="headerlink" title="文件搜索命令"></a>文件搜索命令</h4><p>在当前目录下搜索名字为 <code>myfile</code> 的文件，区分大小写：<code>find ./ -name myfile</code></p><p>在当前目录下搜索名字为 <code>myfile</code> 的文件，不区分大小写：<code>find ./ -i name myfile</code></p><p>在当前目录下搜索名字以 <code>.c</code> 结尾的文件，区分大小写：<code>find ./ -name &quot;*.c&quot;</code></p><p>在当前目录下搜索名字包含 <code>ello</code> 的文件，区分大小写：<code>find ./ -name &quot;*ello*&quot;</code></p><p>在当前目录下搜索名字包含 <code>bb</code> 的目录，区分大小写：<code>find ./ -name &quot;*bb*&quot; -type d</code>（<code>d</code>：目录， <code>f</code>：文件， <code>i</code>：软链接）</p><p>在文件资料库查找文件 <code>myfile</code>，区分大小写：<code>locate myfile</code></p><p>查询 Linux 系统中命令的位置以及被查询命令帮助文档的位置：<code>whereis cp</code></p><p>查找一个存储所有命令相关信息的数据库，根据命令名返回相关结果：<code>whatis cp</code></p><p>过滤 <code>test.txt</code> 文件中 <code>hello</code> 内容：<code>grep hello test.txt</code>（加 <code>-i</code> 不区分大小写）</p><p>统计 <code>test.txt</code> 中 <code>hello</code> 内容的行数：<code>grep -c hello test.txt</code></p><h4 id="帮助命令"><a href="#帮助命令" class="headerlink" title="帮助命令"></a>帮助命令</h4><p>获得 <code>shell</code>内置命令 <code>date</code> 的帮助信息：<code>help date</code></p><p>获得帮助信息，比命令的 help 选项多了命令的用法示例、命令的描述等内容：<code>man date</code></p><h4 id="用户管理命令"><a href="#用户管理命令" class="headerlink" title="用户管理命令"></a>用户管理命令</h4><p>增加一个 <code>zhuang</code> 用户：<code>useradd zhuang</code></p><p>修改 <code>zhuang</code> 用户的密码：<code>passwd zhuang</code></p><p>切换用户为 <code>zhuang</code>：<code>su zhuang</code></p><p>显示目前登入系统的用户信息：<code>who</code> 或者 <code>w</code></p><h4 id="压缩解压命令"><a href="#压缩解压命令" class="headerlink" title="压缩解压命令"></a>压缩解压命令</h4><p>将 <code>myfile</code> 文件压缩为 <code>myfile.gz</code>：<code>gzip myfile</code>（只能压缩文件，原文件不保留）</p><p>解压 <code>myfile.gz</code> 文件：<code>gunzip myfile.gz</code></p><p>将目录 <code>dir</code> 直接打包并压缩为 <code>name.tar.gz</code> 打包目录：<code>tar -zcf name.tar.gz dir</code>（.tar.gz）</p><p>将 <code>name.tar.gz</code> 打包目录解压：<code>tar -zxf name.tar.gz</code>（<code>-x</code>：解包，<code>-c</code>：打包，<code>-v</code>：显示详细信息，<code>-f</code>：指定文件名，<code>-z</code>：同时打包压缩）</p><p>将目录 <code>dir</code> 压缩为 <code>name.zip</code>：<code>zip -r name dir</code></p><p>将 <code>name.zip</code> 解压：<code>unzip name.zip</code></p><h4 id="网络命令"><a href="#网络命令" class="headerlink" title="网络命令"></a>网络命令</h4><p>给用户 <code>zhuang</code> 发送信息（开启聊天框），按 <code>ctrl+d</code> 结束：<code>write zhuang</code></p><p>给所有在线用户发送广播 <code>helloworld</code>：<code>wall helloworld</code></p><p>查看网卡和设置信息：<code>ping</code></p><p>查看网卡和设置网卡信息：<code>ifconfig</code></p><p>列出过去和现在登入系统的用户信息：<code>last</code></p><p>列出特定用户上次登录时间：<code>lastlog</code></p><h4 id="关机重启命令"><a href="#关机重启命令" class="headerlink" title="关机重启命令"></a>关机重启命令</h4><p>重启：<code>reboot</code></p><p>立刻关机：<code>halt</code> 或 <code>poweroff</code></p><p>立刻重启（root 用户使用）：<code>shutdown -r now</code>（-c：取消前一个关机命令，-h ：关机，-r ：重启）</p><p>过10分钟自动重启（root用户使用）：<code>shutdown -r 10</code></p><p>过10分钟自动关机（root用户使用）：<code>shutdown -h 10</code></p><p>在时间为 21:00 时候重启（root用户使用）：<code>shutdown -r 21:00</code> </p><p>如果是通过 <code>shutdown</code> 命令设置重启或关机的话，可以用 <code>shutdown -c</code> 命令取消重启。</p><p>退出登录命令：<code>logout</code></p><h3 id="二、进程的创建、控制及进程间通信"><a href="#二、进程的创建、控制及进程间通信" class="headerlink" title="二、进程的创建、控制及进程间通信"></a>二、进程的创建、控制及进程间通信</h3><h4 id="getpid-获取-PID"><a href="#getpid-获取-PID" class="headerlink" title="getpid() 获取 PID"></a>getpid() 获取 PID</h4><p><code>getpid</code> 获取当前进程 ID，<code>getppid</code> 获取父进程 ID。</p><p><code>pid_t</code> 是 C 语言中用户自定义类型，在 <code>sys/types.h</code> 中定义，<code>typedef int pid_t;</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">pid_t</span> <span class="title function_">getpid</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">pid_t</span> <span class="title function_">getppid</span><span class="params">(<span class="type">void</span>)</span>;</span><br></pre></td></tr></table></figure><p>打印当前进程的 PID：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;pid=%x, ppid=%x\n&quot;</span>, getpid(), getppid());</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="fork-创建进程"><a href="#fork-创建进程" class="headerlink" title="fork() 创建进程"></a>fork() 创建进程</h4><p><code>fork</code> 创建一个子进程，父子进程并发运行，子进程复制父进程的如下属性：</p><ul><li>代码段、数据段的内容，父子进程拥有相同的代码和数据。</li><li>打开文件列表。</li></ul><p><code>fork</code> 不复制进程的 PID 属性，父子的进程的 PID 都是唯一的。 </p><p>返回值：</p><ul><li><code>pid</code> 是进程 ID 的缩写，<code>pid_t</code> 是使用 <code>typedef</code> 定义的进程 ID 类型。</li><li>父进程从 <code>fork</code> 返回处继续执行，在父进程中，<code>fork</code> 返回子进程 PID。</li><li>子进程从 <code>fork</code> 返回处开始执行，在子进程中，<code>fork</code> 返回 0。</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">pid_t</span> <span class="title function_">fork</span><span class="params">(<span class="type">void</span>)</span>;</span><br></pre></td></tr></table></figure><p>创建子进程：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">pid_t</span> pid;</span><br><span class="line">    <span class="type">int</span> x = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    pid = fork(); <span class="comment">//创建子进程</span></span><br><span class="line">    <span class="keyword">if</span> (pid == <span class="number">0</span>) &#123;  <span class="comment">/* Child */</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;child : x=%d\n&quot;</span>, ++x); </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;pid=%d\n&quot;</span>, pid);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;pid=%d\n&quot;</span>, pid);</span><br><span class="line">    <span class="comment">/* Parent */</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;parent: x=%d\n&quot;</span>, --x); </span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">输出结果:</span></span><br><span class="line"><span class="comment">    parent: x=0</span></span><br><span class="line"><span class="comment">    pid=15112</span></span><br><span class="line"><span class="comment">    child : x=2</span></span><br><span class="line"><span class="comment">    pid=0</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p><code>fork()</code> 进程有以下几个特点：</p><ul><li>调用 1 次，返回 2 次。 一次是在父进程中执行，一次是在刚创建的子进程中执行。 pid 为 0，表示当前在子进程中。</li><li>并发执行。 父进程和子进程是并发运行的独立进程。 内核以任意方式交替执行，可能会先执行父进程，也可能会先执行子进程。 程序员应该避免猜测谁先执行来做一下逻辑处理。</li><li>拥有相同且独立的地址空间：刚 fork 出的子进程和父进程拥有相同的用户栈、堆，变量。但他们相互独立的。 例如例子中：输出 x 的变量值，child 自增 1 与 parent 自减 1 互不影响。</li></ul><h4 id="其他进程控制相关函数"><a href="#其他进程控制相关函数" class="headerlink" title="其他进程控制相关函数"></a>其他进程控制相关函数</h4><p><code>wait()</code>：查询子进程的退出状态（即正常退出的退出码或导致异常终止的信号），并回收子进程的内核资源。若成功则返回进程 ID，若出错则返回 -1。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/wait.h&gt;</span></span></span><br><span class="line"><span class="type">pid_t</span> <span class="title function_">wait</span><span class="params">(<span class="type">int</span> * status)</span>;</span><br></pre></td></tr></table></figure><p><code>wait()</code> 函数常用来控制父进程和子进程的同步。在父进程中调用 <code>wait()</code> 函数，则父进程被阻塞，进入等待队列，等待子进程结束。当子进程结束时，会产生一个终止状态字，系统会向父进程发送 SIGCHLD 信号。当接到信号后，父进程提取子进程的终止状态字，从 <code>wait()</code> 函数返回继续执行原程序。</p><p><code>exit()</code>：进程结束最常调用的函数，在 <code>main()</code> 函数中调用 <code>return</code>，最终也是调用 <code>exit()</code> 函数。这些都是进程的正常终止。在正常终止时，<code>exit()</code> 函数返回进程结束状态。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">exit</span><span class="params">(<span class="type">int</span> status)</span></span><br></pre></td></tr></table></figure><p>从 OS 角度来看，进程终止会释放进程用户空间的所有资源，而进程描述符并不释放，它将来由其父进程回收。若父进程先于子进程终止，子进程成为孤儿进程，孤儿进程会被 <code>init</code> 进程（进程号为1）领养。若子进程先于父进程终止，子进程成为僵尸进程，父进程尚未对其进行善后处理（获取终止子进程的有关信息，释放它仍占用的资源）。</p><p>程序可以执行到 <code>main()</code> 的最后一个 <code>&#125;</code> 的结束，也可以运行 <code>exit();</code> 结束，也可以运行到 <code>return 0;</code> 结束。</p><p><code>execl()</code>：系统调用 <code>execl()</code> 可以将新程序加载到某一进程的内存空间，该进程会从新程序的 <code>main()</code> 函数开始执行。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">execl</span> <span class="params">(<span class="type">const</span> <span class="type">char</span> * pathname, <span class="type">const</span> <span class="type">char</span> * arg0,…<span class="comment">/*(char*)0*/</span>)</span></span><br><span class="line"><span class="comment">// pathname是要加载程序的全路径名，arg0及以后为参数列表。</span></span><br></pre></td></tr></table></figure><p>进程的用户内存空间被替换，而进程的其他属性基本不改变。进程完整的内存空间：正文区、堆区、栈区、数据区都被替换，原内容不存在了。代码替换完后，在 <code>execl()</code> 后面的代码毫无意义。</p><p>创建多个进程：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//print1.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NUM 5</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc,<span class="type">char</span> *argv[])</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;NUM;i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,argv[<span class="number">1</span>]);</span><br><span class="line">        fflush(<span class="built_in">stdout</span>);</span><br><span class="line">        sleep(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//multi_process.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">    <span class="type">pid_t</span> pid[<span class="number">3</span>];</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)&#123;</span><br><span class="line">        pid[i]=fork();</span><br><span class="line">        <span class="keyword">if</span>(pid[i]==<span class="number">0</span>)&#123;</span><br><span class="line">          <span class="keyword">break</span>;<span class="comment">//防止子进程再次创建子进程</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(pid[<span class="number">0</span>]==<span class="number">0</span>)&#123;</span><br><span class="line">      execl(<span class="string">&quot;print1&quot;</span>,<span class="string">&quot;print&quot;</span>,<span class="string">&quot;Good&quot;</span>,<span class="literal">NULL</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(pid[<span class="number">1</span>]==<span class="number">0</span>)&#123;</span><br><span class="line">          execl(<span class="string">&quot;print1&quot;</span>,<span class="string">&quot;print&quot;</span>,<span class="string">&quot;Hello&quot;</span>,<span class="literal">NULL</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(pid[<span class="number">2</span>]==<span class="number">0</span>) execl(<span class="string">&quot;print1&quot;</span>,<span class="string">&quot;print&quot;</span>,<span class="string">&quot;201919044217&quot;</span>,<span class="literal">NULL</span>);</span><br><span class="line">            wait();</span><br><span class="line">            wait();</span><br><span class="line">            wait();<span class="comment">//调用一次，只能回收一个子进程</span></span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gcc print1.c –o print1</span><br><span class="line">gcc multi_process.c –o multi</span><br><span class="line">time ./multi  <span class="comment">#获取到一个程序的执行时间，包括程序的实际运行时间(real time)，以及程序运行在用户态的时间(user time)和内核态的时间(sys time)</span></span><br></pre></td></tr></table></figure><h4 id="进程间通信（IPC）"><a href="#进程间通信（IPC）" class="headerlink" title="进程间通信（IPC）"></a>进程间通信（IPC）</h4><p>注意：在超级用户（管理员）下才可以进行共享内存进程通信，否则提示段错误。使用 <code>su -</code> 切换。</p><p>共享内存实现 IPC 基本步骤：</p><ol><li>﻿﻿﻿获得唯一的 <code>key</code> 值：一般采用 <code>ftok</code> 得到唯一的键值，</li><li>﻿﻿使用 <code>shmget</code> 创建或获得共享内存区，</li><li>﻿﻿使用 <code>shmat</code> 将共享内存区附加到进程中，</li><li>﻿﻿﻿使用共享内存区，</li><li>与共享内存区脱离，但是记住这时共享内在区，依然存在，必须等到内核重启，</li><li>﻿﻿﻿申请的共享内存区的大小是有限制的。</li></ol><p>实验内容：应用 Linux 共享内存机制，实现两个进程间相互传递一个学生的记录，包括：</p><ol><li>﻿﻿﻿学号：SID，char 型，8 位</li><li>﻿﻿姓名：NAME，char 型，8 位</li><li>﻿﻿年龄：Age，int 型</li><li>﻿﻿﻿专业：Specialty，char 型，8 位</li><li>﻿﻿﻿班级：Class，char 型，4 位一个记录约 30 个字节。</li></ol><p>共享内存函数由 <code>shmget</code>、<code>shmat</code>、<code>shmdt</code>、<code>shmctl</code> 四个函数组成：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//shm1</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/ipc.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/shm.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.n&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    <span class="type">char</span> name[<span class="number">4</span>];</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">&#125;people;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> arge, <span class="type">char</span> *argvll)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> shm_id, i;</span><br><span class="line">    <span class="type">key_t</span> key; </span><br><span class="line">  <span class="type">char</span> temp;</span><br><span class="line">    people *p_map;</span><br><span class="line">    <span class="type">char</span> *path = <span class="string">&quot;./shm1.c&quot;</span>;</span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">使用 ftok 根据 path 和作为项目标识符的单个字符生成 key 值确保进程间使用相同的 key</span></span><br><span class="line"><span class="comment">使用相同 key 值的 shmget 只会在第一次时创建新结构</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">key = ftok(path, <span class="number">0</span>); <span class="comment">//产生 key 值</span></span><br><span class="line"><span class="keyword">if</span>(key == <span class="number">-1</span>)&#123;</span><br><span class="line">      perror(<span class="string">&quot;ftok error \n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">shm_id = shmget(key, <span class="number">4096</span>, IPC_CREAT); <span class="comment">//创建大小为 4096 字节的共享内存段，IPC_CREAT是创建标志，代表如果不存在就创建，成功则返回共享存储的 ID。</span></span><br><span class="line"><span class="keyword">if</span>(shm_id == <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">        perror(<span class="string">&quot; shmget error \n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">p_map = (people*)shmat(shm_id, <span class="literal">NULL</span>, O);</span><br><span class="line">    <span class="comment">/*将共享内存附加到进程中，允许进程访问</span></span><br><span class="line"><span class="comment">    第二个参数用来指定共享段所连接到的地址，为了便于在不同硬件间移植，一般设为 NULL，即不指定共享段所连接到的地址，让系统自己选择合适的地址。</span></span><br><span class="line"><span class="comment">    第三个参数 0 指定以读写方式访问共享段。</span></span><br><span class="line"><span class="comment">    函数返回实际共享段连接到的地址。</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">  temp = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">      temp += <span class="number">1</span>;  <span class="comment">//字符加一为 &#x27;b&#x27;</span></span><br><span class="line">      <span class="built_in">memcpy</span>((*(p_map + i)).name, &amp;temp, <span class="number">1</span>); <span class="comment">//*(p_map).name &#x27;b&#x27;,age1 name2,age2 </span></span><br><span class="line">      <span class="comment">//从第二个参数指定的位置拷贝一个字节到第一个参数指定的位置中</span></span><br><span class="line">      (*(p_map + i)).age = <span class="number">20</span> + i;   <span class="comment">// &#x27;b&#x27;,20 </span></span><br><span class="line">    &#125;</span><br><span class="line">  system(<span class="string">&quot;ipcs -m&quot;</span>); <span class="comment">//ipcs 命令往标准输出写入一些关于活动进程间通信设施的信息，-m表示为共享内存</span></span><br><span class="line"><span class="keyword">if</span>(shmdt(p_map) == <span class="number">-1</span>) <span class="comment">//与 shmat 函数相反，用来断开与共享内存附加点的地址，禁止本进程访问此片共享内存，参数为连接共享内存的起始地址。</span></span><br><span class="line">    &#123;</span><br><span class="line">      perror(<span class="string">&quot;detach error&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  system(<span class="string">&quot;ipcs -m&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//shm2</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">System V共享内存区是放在内核当中的,因此在内核重新引导之前,对数据的修改是一直保持的，这也是我们的实验能够实现的原因,因为在第二个进程起动时，第一个进程已经运行结束了．</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/ipc.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/shm.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.n&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="comment">// 完成从共享内存区的读出</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    <span class="type">char</span> name[<span class="number">4</span>];</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">&#125;people;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> arge, <span class="type">char</span> *argvll)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> shm_id, i;</span><br><span class="line">    <span class="type">key_t</span> key;</span><br><span class="line">    people *p_map;</span><br><span class="line">    <span class="type">char</span> *path = <span class="string">&quot;./shm1.c&quot;</span>;</span><br><span class="line">key = ftok(path, <span class="number">0</span>); <span class="comment">//得到一个一样的 key</span></span><br><span class="line"><span class="keyword">if</span>(key == <span class="number">-1</span>)&#123;</span><br><span class="line">      perror(<span class="string">&quot;ftok error \n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">shm_id = shmget(key, <span class="number">4096</span>, IPC_CREAT);  <span class="comment">// 得到一样的id</span></span><br><span class="line"><span class="keyword">if</span>(shm_id == <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">        perror(<span class="string">&quot; shmget error \n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">p_map = (people*)shmat(shm_id, <span class="literal">NULL</span>, O);</span><br><span class="line">   <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;name:%s\t&quot;</span>,(*(p_map + i)).name);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;age:%d\n&quot;</span>,(*(p_map + i)).age);</span><br><span class="line">    &#125;</span><br><span class="line">  system(<span class="string">&quot;ipcs -m&quot;</span>); <span class="comment">//ipcs 命令往标准输出写入一些关于活动进程间通信设施的信息，-m表示为共享内存</span></span><br><span class="line"><span class="keyword">if</span>(shmdt(p_map) == <span class="number">-1</span>) <span class="comment">//与 shmat 函数相反，用来断开与共享内存附加点的地址，禁止本进程访问此片共享内存，参数为连接共享内存的起始地址。</span></span><br><span class="line">    &#123;</span><br><span class="line">      perror(<span class="string">&quot;detach error \n&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  system(<span class="string">&quot;ipcs -m&quot;</span>);</span><br><span class="line">    <span class="built_in">exit</span>(EXIT_SUCCESS);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;操作系统（02327）实践环节是操作系统专业课的上级测试部分，考核目标是具有熟练使用 Linux 系统常用命令的能力以及初步掌握进程的创建、控制及进程间通信程序的编写方法。运行环境是通过 putty 远程登录工具远程连接 Linux 服务器，在练习时我仍旧使用系统默认终端（zsh）连接&lt;a href=&quot;/Ubuntu远程开发配置&quot;&gt;云服务器&lt;/a&gt;使用。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="计算机科学与技术" scheme="http://blog.zhuangzhihao.top/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Linux" scheme="http://blog.zhuangzhihao.top/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>React 即时通信 ChatUI 滑动抽屉</title>
    <link href="http://blog.zhuangzhihao.top/ChatUI%E6%BB%91%E5%8A%A8%E6%8A%BD%E5%B1%89/"/>
    <id>http://blog.zhuangzhihao.top/ChatUI%E6%BB%91%E5%8A%A8%E6%8A%BD%E5%B1%89/</id>
    <published>2022-10-21T16:00:00.000Z</published>
    <updated>2022-11-25T11:12:28.364Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>React 即时通信 UI 实战第七章。React 即时通信 UI 实战为<a href="https://www.bilibili.com/video/BV1PK4y1b7bY?p=2&amp;spm_id_from=pageDriver&amp;vd_source=0965c74096f788f105780e5d5d0e9ebf">峰华前端工程师</a>推出的 React 实战课程，以聊天（即时通信）为原型，构建了一整套的 UI 组件库，课程重点在于 UI 组件的分析和实现，力求打造自用组件库。本章包括滑动抽屉中的个人资料、个人信息、社交信息、分割线等组件。</p></blockquote><span id="more"></span><h3 id="一、社交信息组件开发"><a href="#一、社交信息组件开发" class="headerlink" title="一、社交信息组件开发"></a>一、社交信息组件开发</h3><p>社交信息不需要 <code>stories</code> 和 <code>styles</code> 编辑文件，手动在 <code>src/components/Icon</code> 目录下新建 <code>SocialIcon</code> 文件夹，并在其中新建 <code>index.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Button</span> <span class="keyword">from</span> <span class="string">&quot;components/Button&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FontAwesomeIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/react-fontawesome&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">SocialIcon</span>(<span class="params">&#123; icon, bgColor, href, ...rest &#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">Button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">size</span>=<span class="string">&quot;30px&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">bgColor</span>=<span class="string">&#123;bgColor&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> href &amp;&amp; window.open(href, &quot;_blank&quot;)&#125;</span></span><br><span class="line"><span class="language-xml">            &#123;...rest&#125;</span></span><br><span class="line"><span class="language-xml">        &gt;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;icon&#125;</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">fontSize:</span> &quot;<span class="attr">16px</span>&quot; &#125;&#125; /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">SocialIcon</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">    <span class="attr">icon</span>: <span class="title class_">PropTypes</span>.<span class="property">elementType</span>,</span><br><span class="line">    <span class="attr">bgColor</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">    <span class="attr">href</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">SocialIcon</span>;</span><br></pre></td></tr></table></figure><p>在 <code>src/components/Icon/index.js</code> 中添加：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">SocialIcon</span> <span class="keyword">from</span> <span class="string">&quot;./SocialIcon&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Icon</span>.<span class="property">Social</span> = <span class="title class_">SocialIcon</span>;</span><br></pre></td></tr></table></figure><h3 id="二、分割线组件开发"><a href="#二、分割线组件开发" class="headerlink" title="二、分割线组件开发"></a>二、分割线组件开发</h3><p>使用 Hygen 创建一个分割线组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new Seperator</span><br></pre></td></tr></table></figure><p>再在 <code>style.js</code> 中修改样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledSeperator</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  width: 100%;</span></span><br><span class="line"><span class="string">  height: 1px;</span></span><br><span class="line"><span class="string">  border-bottom: 1px solid <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.gray4&#125;</span>;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledSeperator</span>;</span><br></pre></td></tr></table></figure><p>最后编辑 <code>seperator.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Seperator</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/Seperator&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Seperator</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">padding:</span> &quot;<span class="attr">24px</span>&quot; &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Seperator</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="三、组装滑动抽屉页面组件"><a href="#三、组装滑动抽屉页面组件" class="headerlink" title="三、组装滑动抽屉页面组件"></a>三、组装滑动抽屉页面组件</h3><p>使用 Hygen 创建一个 Profile 组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new Profile</span><br></pre></td></tr></table></figure><p>在 <code>index.js</code> 文件中编辑标题栏组件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledProfile</span>, &#123;</span><br><span class="line">  <span class="title class_">SocialLinks</span>,</span><br><span class="line">  <span class="title class_">ContactSection</span>,</span><br><span class="line">  <span class="title class_">Album</span>,</span><br><span class="line">  <span class="title class_">Photo</span>,</span><br><span class="line">  <span class="title class_">AlbumSection</span>,</span><br><span class="line">  <span class="title class_">AlbumTitle</span>,</span><br><span class="line">  <span class="title class_">CloseIcon</span>,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;styled-components/macro&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> face <span class="keyword">from</span> <span class="string">&quot;assets/images/face-male-3.jpg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Avatar</span> <span class="keyword">from</span> <span class="string">&quot;components/Avatar&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Paragraph</span> <span class="keyword">from</span> <span class="string">&quot;components/Paragraph&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Emoji</span> <span class="keyword">from</span> <span class="string">&quot;components/Emoji&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  faWeibo,</span><br><span class="line">  faGithub,</span><br><span class="line">  faLinkedin,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-brands-svg-icons&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Seperator</span> <span class="keyword">from</span> <span class="string">&quot;components/Seperator&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Text</span> <span class="keyword">from</span> <span class="string">&quot;components/Text&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> photo1 <span class="keyword">from</span> <span class="string">&quot;assets/images/photo1.jpg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> photo2 <span class="keyword">from</span> <span class="string">&quot;assets/images/photo2.jpg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> photo3 <span class="keyword">from</span> <span class="string">&quot;assets/images/photo3.jpg&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">Cross</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/cross.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Button</span> <span class="keyword">from</span> <span class="string">&quot;components/Button&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FontAwesomeIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/react-fontawesome&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; faPen &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-solid-svg-icons&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Profile</span>(<span class="params">&#123;</span></span><br><span class="line"><span class="params">  showEditBtn,</span></span><br><span class="line"><span class="params">  showCloseIcon = <span class="literal">true</span>,</span></span><br><span class="line"><span class="params">  onCloseClick,</span></span><br><span class="line"><span class="params">  onEdit,</span></span><br><span class="line"><span class="params">  status,</span></span><br><span class="line"><span class="params">  children,</span></span><br><span class="line"><span class="params">  ...rest</span></span><br><span class="line"><span class="params">&#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledProfile</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;showCloseIcon &amp;&amp; <span class="tag">&lt;<span class="name">CloseIcon</span> <span class="attr">icon</span>=<span class="string">&#123;Cross&#125;</span> <span class="attr">onClick</span>=<span class="string">&#123;onCloseClick&#125;</span> /&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Avatar</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">css</span>=<span class="string">&#123;</span>`</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">margin:</span> <span class="attr">26px</span> <span class="attr">0</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">grid-area:</span> <span class="attr">1</span> / <span class="attr">1</span> / <span class="attr">3</span> / <span class="attr">2</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        `&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">src</span>=<span class="string">&#123;face&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">size</span>=<span class="string">&quot;160px&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">status</span>=<span class="string">&#123;status&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">statusIconSize</span>=<span class="string">&quot;25px&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;showEditBtn &amp;&amp; (</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">size</span>=<span class="string">&quot;52px&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onClick</span>=<span class="string">&#123;onEdit&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">css</span>=<span class="string">&#123;</span>`</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">grid-area:</span> <span class="attr">1</span> / <span class="attr">1</span> / <span class="attr">3</span> / <span class="attr">2</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">align-self:</span> <span class="attr">end</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">margin-left:</span> <span class="attr">100px</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">z-index:</span> <span class="attr">10</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          `&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">FontAwesomeIcon</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">css</span>=<span class="string">&#123;</span>`</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">font-size:</span> <span class="attr">24px</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            `&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">icon</span>=<span class="string">&#123;faPen&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      )&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Paragraph</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">size</span>=<span class="string">&quot;xlarge&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">css</span>=<span class="string">&#123;</span>`</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">margin-bottom:</span> <span class="attr">12px</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        `&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span></span></span><br><span class="line"><span class="language-xml">        慕容天宇</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Paragraph</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">size</span>=<span class="string">&quot;medium&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">type</span>=<span class="string">&quot;secondary&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">css</span>=<span class="string">&#123;</span>`</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">margin-bottom:</span> <span class="attr">18px</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        `&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span></span></span><br><span class="line"><span class="language-xml">        北京市 朝阳区</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Paragraph</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">css</span>=<span class="string">&#123;</span>`</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">margin-bottom:</span> <span class="attr">26px</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        `&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span></span></span><br><span class="line"><span class="language-xml">        帮助客户构建网站，并协助在社交网站上进行推广&#123;&quot; &quot;&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Emoji</span> <span class="attr">label</span>=<span class="string">&quot;fire&quot;</span>&gt;</span>🔥<span class="tag">&lt;/<span class="name">Emoji</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">SocialLinks</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Icon.Social</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">icon</span>=<span class="string">&#123;faWeibo&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">bgColor</span>=<span class="string">&quot;#F06767&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">href</span>=<span class="string">&quot;http://www.weibo.com&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Icon.Social</span> <span class="attr">icon</span>=<span class="string">&#123;faGithub&#125;</span> <span class="attr">bgColor</span>=<span class="string">&quot;black&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Icon.Social</span> <span class="attr">icon</span>=<span class="string">&#123;faLinkedin&#125;</span> <span class="attr">bgColor</span>=<span class="string">&quot;#2483C0&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">SocialLinks</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Seperator</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">css</span>=<span class="string">&#123;</span>`</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">margin:</span> <span class="attr">30px</span> <span class="attr">0</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        `&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ContactSection</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Description</span> <span class="attr">label</span>=<span class="string">&quot;联系电话&quot;</span>&gt;</span>+86 18688888888<span class="tag">&lt;/<span class="name">Description</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Description</span> <span class="attr">label</span>=<span class="string">&quot;电子邮件&quot;</span>&gt;</span>admin@fh.com<span class="tag">&lt;/<span class="name">Description</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Description</span> <span class="attr">label</span>=<span class="string">&quot;个人网站&quot;</span>&gt;</span>https://zxuqian.cn<span class="tag">&lt;/<span class="name">Description</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">ContactSection</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Seperator</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">css</span>=<span class="string">&#123;</span>`</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">margin:</span> <span class="attr">30px</span> <span class="attr">0</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        `&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">AlbumSection</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">AlbumTitle</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Text</span> <span class="attr">type</span>=<span class="string">&quot;secondary&quot;</span>&gt;</span>相册（31）<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">a</span>&gt;</span>查看全部<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">AlbumTitle</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Album</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Photo</span> <span class="attr">src</span>=<span class="string">&#123;photo1&#125;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Photo</span> <span class="attr">src</span>=<span class="string">&#123;photo2&#125;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Photo</span> <span class="attr">src</span>=<span class="string">&#123;photo3&#125;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Album</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">AlbumSection</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledProfile</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Description</span>(<span class="params">&#123; label, children &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Text</span> <span class="attr">type</span>=<span class="string">&quot;secondary&quot;</span>&gt;</span>&#123;label&#125;：<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Text</span>&gt;</span>&#123;children&#125;<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Profile</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Profile</span>;</span><br></pre></td></tr></table></figure><p>再在 <code>style.js</code> 中修改样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> arrowRight <span class="keyword">from</span> <span class="string">&quot;assets/icon/arrowRight.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">SocialLinks</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  &amp; &gt; * &#123;</span></span><br><span class="line"><span class="string">    margin: 0 9px;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">ContactSection</span> = styled.<span class="property">section</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: grid;</span></span><br><span class="line"><span class="string">  row-gap: 18px;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">AlbumSection</span> = styled.<span class="property">section</span><span class="string">``</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">AlbumTitle</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  justify-self: stretch;</span></span><br><span class="line"><span class="string">  display: flex;</span></span><br><span class="line"><span class="string">  justify-content: space-between;</span></span><br><span class="line"><span class="string">  align-items: center;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  &amp; &gt; a &#123;</span></span><br><span class="line"><span class="string">    text-decoration: none;</span></span><br><span class="line"><span class="string">    font-size: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.normal&#125;</span>;</span></span><br><span class="line"><span class="string">    color: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.primaryColor&#125;</span>;</span></span><br><span class="line"><span class="string">    &amp;::after &#123;</span></span><br><span class="line"><span class="string">      display: inline-block;</span></span><br><span class="line"><span class="string">      content: url(<span class="subst">$&#123;arrowRight&#125;</span>);</span></span><br><span class="line"><span class="string">      margin-left: 2px;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Album</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  margin-top: 14px;</span></span><br><span class="line"><span class="string">  justify-self: start;</span></span><br><span class="line"><span class="string">  width: 100%;</span></span><br><span class="line"><span class="string">  display: grid;</span></span><br><span class="line"><span class="string">  grid-template-columns: repeat(3, 1fr);</span></span><br><span class="line"><span class="string">  gap: 10px;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Photo</span> = styled.<span class="property">img</span><span class="string">`</span></span><br><span class="line"><span class="string">  width: 76px;</span></span><br><span class="line"><span class="string">  height: 76px;</span></span><br><span class="line"><span class="string">  object-fit: cover;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">CloseIcon</span> = <span class="title function_">styled</span>(<span class="title class_">Icon</span>).<span class="title function_">attrs</span>(&#123; <span class="attr">opacity</span>: <span class="number">0.3</span> &#125;)<span class="string">`</span></span><br><span class="line"><span class="string">  position: absolute;</span></span><br><span class="line"><span class="string">  right: 30px;</span></span><br><span class="line"><span class="string">  top: 30px;</span></span><br><span class="line"><span class="string">  cursor: pointer;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledProfile</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: grid;</span></span><br><span class="line"><span class="string">  align-content: start;</span></span><br><span class="line"><span class="string">  justify-content: center;</span></span><br><span class="line"><span class="string">  justify-items: center;</span></span><br><span class="line"><span class="string">  position: relative;</span></span><br><span class="line"><span class="string">  padding: 30px;</span></span><br><span class="line"><span class="string">  height: 100vh;</span></span><br><span class="line"><span class="string">  margin-top: 2vh;</span></span><br><span class="line"><span class="string">  overflow-y: auto;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledProfile</span>;</span><br><span class="line"><span class="keyword">export</span> &#123;</span><br><span class="line">    <span class="title class_">SocialLinks</span>,</span><br><span class="line">    <span class="title class_">ContactSection</span>,</span><br><span class="line">    <span class="title class_">Album</span>,</span><br><span class="line">    <span class="title class_">AlbumSection</span>,</span><br><span class="line">    <span class="title class_">AlbumTitle</span>,</span><br><span class="line">    <span class="title class_">Photo</span>,</span><br><span class="line">    <span class="title class_">CloseIcon</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>最后编辑 <code>profile.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Profile</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;页面组件/Profile&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Profile</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Profile</span> <span class="attr">status</span>=<span class="string">&quot;online&quot;</span> /&gt;</span></span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;React 即时通信 UI 实战第七章。React 即时通信 UI 实战为&lt;a href=&quot;https://www.bilibili.com/video/BV1PK4y1b7bY?p=2&amp;amp;spm_id_from=pageDriver&amp;amp;vd_source=0965c74096f788f105780e5d5d0e9ebf&quot;&gt;峰华前端工程师&lt;/a&gt;推出的 React 实战课程，以聊天（即时通信）为原型，构建了一整套的 UI 组件库，课程重点在于 UI 组件的分析和实现，力求打造自用组件库。本章包括滑动抽屉中的个人资料、个人信息、社交信息、分割线等组件。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Web前端" scheme="http://blog.zhuangzhihao.top/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="React" scheme="http://blog.zhuangzhihao.top/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>React 即时通信 ChatUI 内容区</title>
    <link href="http://blog.zhuangzhihao.top/ChatUI%E5%86%85%E5%AE%B9%E5%8C%BA/"/>
    <id>http://blog.zhuangzhihao.top/ChatUI%E5%86%85%E5%AE%B9%E5%8C%BA/</id>
    <published>2022-10-14T16:00:00.000Z</published>
    <updated>2022-10-15T11:04:42.163Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>React 即时通信 UI 实战第六章。React 即时通信 UI 实战为<a href="https://www.bilibili.com/video/BV1PK4y1b7bY?p=2&amp;spm_id_from=pageDriver&amp;vd_source=0965c74096f788f105780e5d5d0e9ebf">峰华前端工程师</a>推出的 React 实战课程，以聊天（即时通信）为原型，构建了一整套的 UI 组件库，课程重点在于 UI 组件的分析和实现，力求打造自用组件库。本章包括内容区中的标题栏、会话气泡、会话窗口、语音消息等组件。</p></blockquote><span id="more"></span><h3 id="一、标题栏组件开发"><a href="#一、标题栏组件开发" class="headerlink" title="一、标题栏组件开发"></a>一、标题栏组件开发</h3><p>使用 Hygen 创建一个标题栏组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new TitleBar</span><br></pre></td></tr></table></figure><p>在 <code>index.js</code> 文件中编辑标题栏组件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledTitleBar</span>, &#123; <span class="title class_">Actions</span>, <span class="title class_">Title</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Avatar</span> <span class="keyword">from</span> <span class="string">&quot;components/Avatar&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Paragraph</span> <span class="keyword">from</span> <span class="string">&quot;components/Paragraph&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Text</span> <span class="keyword">from</span> <span class="string">&quot;components/Text&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> face <span class="keyword">from</span> <span class="string">&quot;assets/images/face-male-3.jpg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">Call</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/call.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">Camera</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/camera.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">Options</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/options.svg&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">TitleBar</span>(<span class="params">&#123; children, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledTitleBar</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Avatar</span> <span class="attr">status</span>=<span class="string">&quot;offline&quot;</span> <span class="attr">src</span>=<span class="string">&#123;face&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Paragraph</span> <span class="attr">size</span>=<span class="string">&quot;large&quot;</span>&gt;</span>慕容天宇<span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Paragraph</span> <span class="attr">type</span>=<span class="string">&quot;secondary&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Text</span>&gt;</span>离线<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Text</span>&gt;</span>· 最后阅读：3小时前<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Actions</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Icon</span> <span class="attr">opacity</span>=<span class="string">&#123;0.3&#125;</span> <span class="attr">icon</span>=<span class="string">&#123;Call&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Icon</span> <span class="attr">opacity</span>=<span class="string">&#123;0.3&#125;</span> <span class="attr">icon</span>=<span class="string">&#123;Camera&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Icon</span> <span class="attr">opacity</span>=<span class="string">&#123;0.3&#125;</span> <span class="attr">icon</span>=<span class="string">&#123;Options&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Actions</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledTitleBar</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">TitleBar</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">TitleBar</span>;</span><br></pre></td></tr></table></figure><p>再在 <code>style.js</code> 中修改样式，使用 Grid 布局：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">StyledIcon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon/style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Title</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">    display: grid;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Actions</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">    display: flex;</span></span><br><span class="line"><span class="string">    justify-content: space-between;</span></span><br><span class="line"><span class="string">    align-items: center;</span></span><br><span class="line"><span class="string">    <span class="subst">$&#123;StyledIcon&#125;</span> &#123;</span></span><br><span class="line"><span class="string">        cursor: pointer;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledTitleBar</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">    display: grid;</span></span><br><span class="line"><span class="string">    grid-template-columns: 62px 1fr 112px;</span></span><br><span class="line"><span class="string">    padding: 30px;</span></span><br><span class="line"><span class="string">    max-height: 110px;</span></span><br><span class="line"><span class="string">    border-bottom: 1px solid <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.gray4&#125;</span>;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledTitleBar</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">Actions</span>, <span class="title class_">Title</span> &#125;;</span><br></pre></td></tr></table></figure><p>最后编辑 <code>titleBar.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">TitleBar</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/TitleBar&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">TitleBar</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">TitleBar</span> /&gt;</span></span>;</span><br></pre></td></tr></table></figure><h3 id="二、会话气泡组件开发"><a href="#二、会话气泡组件开发" class="headerlink" title="二、会话气泡组件开发"></a>二、会话气泡组件开发</h3><p>会话气泡用于突出显示聊天的内容，使用 Hygen 创建一个标题栏组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new ChatBubble</span><br></pre></td></tr></table></figure><p>在 <code>index.js</code> 文件中编辑会话气泡组件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledChatBubble</span>, &#123; <span class="title class_">Bubble</span>, <span class="title class_">BubbleTip</span>, <span class="title class_">Time</span>, <span class="title class_">MessageText</span>, &#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">BubbleTipIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/bubbleTip.svg&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">ChatBubble</span>(<span class="params">&#123; children, type, time, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledChatBubble</span> <span class="attr">type</span>=<span class="string">&#123;type&#125;</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Bubble</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">BubbleTip</span> <span class="attr">icon</span>=<span class="string">&#123;BubbleTipIcon&#125;</span> <span class="attr">width</span>=<span class="string">&#123;40&#125;</span> <span class="attr">height</span>=<span class="string">&#123;28&#125;</span> <span class="attr">color</span>=<span class="string">&quot;white&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">MessageText</span>&gt;</span>&#123;children&#125;<span class="tag">&lt;/<span class="name">MessageText</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Bubble</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Time</span>&gt;</span>&#123;time&#125;<span class="tag">&lt;/<span class="name">Time</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledChatBubble</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">ChatBubble</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">  <span class="attr">type</span>: <span class="title class_">PropTypes</span>.<span class="title function_">oneOf</span>([<span class="string">&quot;mine&quot;</span>]),</span><br><span class="line">  <span class="attr">time</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">ChatBubble</span>;</span><br></pre></td></tr></table></figure><p>再在 <code>style.js</code> 中修改样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled, &#123; css &#125; <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Paragraph</span> <span class="keyword">from</span> <span class="string">&quot;components/Paragraph&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Text</span> <span class="keyword">from</span> <span class="string">&quot;components/Text&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Time</span> = <span class="title function_">styled</span>(<span class="title class_">Paragraph</span>).<span class="title function_">attrs</span>(&#123; <span class="attr">type</span>: <span class="string">&quot;secondary&quot;</span>, <span class="attr">size</span>: <span class="string">&quot;small&quot;</span> &#125;)<span class="string">`</span></span><br><span class="line"><span class="string">    margin: 6px;</span></span><br><span class="line"><span class="string">    margin-left: 24px;</span></span><br><span class="line"><span class="string">    word-spacing: 1rem;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">BubbleTip</span> = <span class="title function_">styled</span>(<span class="title class_">Icon</span>)<span class="string">`</span></span><br><span class="line"><span class="string">    position: absolute;</span></span><br><span class="line"><span class="string">    bottom: -15%;</span></span><br><span class="line"><span class="string">    left: 0;</span></span><br><span class="line"><span class="string">    z-index: 5;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Bubble</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">    padding: 15px 22px;</span></span><br><span class="line"><span class="string">    box-shadow: 0px 8px 24px rgba(0, 0, 0, 0.1);</span></span><br><span class="line"><span class="string">    border-radius: 100px;</span></span><br><span class="line"><span class="string">    position: relative;</span></span><br><span class="line"><span class="string">    z-index: 10;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">MessageText</span> = <span class="title function_">styled</span>(<span class="title class_">Text</span>)<span class="string">``</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> typeVariants = &#123;</span><br><span class="line">    <span class="attr">mine</span>: css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">      </span><span class="subst">$&#123;Bubble&#125;</span><span class="language-css"> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: </span><span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.primaryColor&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">  </span></span><br><span class="line"><span class="language-css">      </span><span class="subst">$&#123;BubbleTip&#125;</span><span class="language-css"> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">180deg</span>);</span></span><br><span class="line"><span class="language-css">        <span class="attribute">left</span>: unset;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">  </span></span><br><span class="line"><span class="language-css">        path &#123;</span></span><br><span class="line"><span class="language-css">          fill: </span><span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.primaryColor&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">  </span></span><br><span class="line"><span class="language-css">      </span><span class="subst">$&#123;Time&#125;</span><span class="language-css"> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-align</span>: right;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin-left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin-right</span>: <span class="number">24px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">  </span></span><br><span class="line"><span class="language-css">      </span><span class="subst">$&#123;MessageText&#125;</span><span class="language-css"> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    `</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledChatBubble</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">    display: flex;</span></span><br><span class="line"><span class="string">    flex-direction: column;</span></span><br><span class="line"><span class="string">    <span class="subst">$&#123;(&#123; type &#125;) =&gt; type &amp;&amp; typeVariants[type]&#125;</span></span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledChatBubble</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">Bubble</span>, <span class="title class_">BubbleTip</span>, <span class="title class_">Time</span>, <span class="title class_">MessageText</span> &#125;;</span><br></pre></td></tr></table></figure><p>最后编辑 <code>chatBubble.stories.js</code> 文件，使用 decorators 设置 stories 中默认边距：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ChatBubble</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/ChatBubble&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">ChatBubble</span>,</span><br><span class="line">  <span class="attr">decorators</span>: [<span class="function">(<span class="params">storyFn</span>) =&gt;</span> <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">padding:</span> &quot;<span class="attr">24px</span>&quot; &#125;&#125;&gt;</span>&#123;storyFn()&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>]</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">FromOthers</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">ChatBubble</span> <span class="attr">time</span>=<span class="string">&quot;昨天 下午14：26&quot;</span>&gt;</span>这是一条其它人发送的聊天消息<span class="tag">&lt;/<span class="name">ChatBubble</span>&gt;</span></span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Mine</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">ChatBubble</span> <span class="attr">type</span>=<span class="string">&quot;mine&quot;</span> <span class="attr">time</span>=<span class="string">&quot;昨天 下午16：30&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    这是一条我自己发送的聊天消息</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">ChatBubble</span>&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="三、语音消息组件开发"><a href="#三、语音消息组件开发" class="headerlink" title="三、语音消息组件开发"></a>三、语音消息组件开发</h3><p>使用 Hygen 创建一个语音消息组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new VoiceMessage</span><br></pre></td></tr></table></figure><p>在 <code>index.js</code> 文件中编辑语音消息组件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledVoiceMessage</span> <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">Play</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/play.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">Wave</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/wave.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useTheme &#125; <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Button</span> <span class="keyword">from</span> <span class="string">&quot;components/Button&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Text</span> <span class="keyword">from</span> <span class="string">&quot;components/Text&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">VoiceMessage</span>(<span class="params">&#123; children, time, type, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> theme = <span class="title function_">useTheme</span>();</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledVoiceMessage</span> <span class="attr">type</span>=<span class="string">&#123;type&#125;</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Button</span> <span class="attr">size</span>=<span class="string">&quot;40px&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Icon</span> <span class="attr">icon</span>=<span class="string">&#123;Play&#125;</span> <span class="attr">color</span>=<span class="string">&quot;white&quot;</span> <span class="attr">width</span>=<span class="string">&quot;14&quot;</span> <span class="attr">height</span>=<span class="string">&quot;16&quot;</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">transform:</span> &quot;<span class="attr">translateX</span>(<span class="attr">1px</span>)&quot; &#125;&#125; /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Icon</span> <span class="attr">icon</span>=<span class="string">&#123;Wave&#125;</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">color</span>=<span class="string">&#123;theme.primaryColor&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Text</span> <span class="attr">bold</span>&gt;</span>&#123;time&#125;<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledVoiceMessage</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">VoiceMessage</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">  <span class="attr">type</span>: <span class="title class_">PropTypes</span>.<span class="title function_">oneOf</span>([<span class="string">&quot;mine&quot;</span>]),</span><br><span class="line">  <span class="attr">time</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">VoiceMessage</span>;</span><br></pre></td></tr></table></figure><p>再在 <code>style.js</code> 中修改样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled, &#123; css &#125; <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledButton</span> <span class="keyword">from</span> <span class="string">&quot;components/Button/style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledIcon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon/style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledText</span> <span class="keyword">from</span> <span class="string">&quot;components/Text/style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> typeVariants = &#123;</span><br><span class="line">    <span class="attr">mine</span>: css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="subst">$&#123;StyledButton&#125;</span><span class="language-css"> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: white;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">      </span><span class="subst">$&#123;StyledIcon&#125;</span><span class="language-css"> path &#123;</span></span><br><span class="line"><span class="language-css">        fill: </span><span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.primaryColor&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    &amp; &gt; </span><span class="subst">$&#123;StyledIcon&#125;</span><span class="language-css"> path &#123;</span></span><br><span class="line"><span class="language-css">      fill: white;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    &amp; &gt; </span><span class="subst">$&#123;StyledText&#125;</span><span class="language-css"> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  `</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledVoiceMessage</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: flex;</span></span><br><span class="line"><span class="string">  align-items: center;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  &amp; &gt; *:first-child &#123;</span></span><br><span class="line"><span class="string">    flex-shrink: 0;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  &amp; &gt; *:not(:first-child) &#123;</span></span><br><span class="line"><span class="string">    margin-left: 16px;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;(&#123; type &#125;) =&gt; type &amp;&amp; typeVariants[type]&#125;</span></span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledVoiceMessage</span>;</span><br></pre></td></tr></table></figure><p>编辑 <code>voiceMessage.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">VoiceMessage</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/VoiceMessage&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">VoiceMessage</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">VoiceMessage</span> <span class="attr">time</span>=<span class="string">&quot;01:25&quot;</span> /&gt;</span></span>;</span><br></pre></td></tr></table></figure><p>最后将语音条添加到会话气泡中，编辑 <code>chatBubble.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">VoiceMessage</span> <span class="keyword">from</span> <span class="string">&quot;components/VoiceMessage&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ChatBubble</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/ChatBubble&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">ChatBubble</span>,</span><br><span class="line">  <span class="attr">decorators</span>: [<span class="function">(<span class="params">storyFn</span>) =&gt;</span> <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">padding:</span> &quot;<span class="attr">24px</span>&quot; &#125;&#125;&gt;</span>&#123;storyFn()&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>]</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">FromOthers</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">ChatBubble</span> <span class="attr">time</span>=<span class="string">&quot;昨天 下午14：26&quot;</span>&gt;</span>这是一条其它人发送的聊天消息<span class="tag">&lt;/<span class="name">ChatBubble</span>&gt;</span></span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Mine</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">ChatBubble</span> <span class="attr">type</span>=<span class="string">&quot;mine&quot;</span> <span class="attr">time</span>=<span class="string">&quot;昨天 下午16：30&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    这是一条我自己发送的聊天消息</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">ChatBubble</span>&gt;</span></span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">VoiceMessageType</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">ChatBubble</span> <span class="attr">time</span>=<span class="string">&quot;昨天 下午18：30&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">VoiceMessage</span> <span class="attr">time</span>=<span class="string">&quot;01:24&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">ChatBubble</span>&gt;</span></span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">VoiceMessageTypeMine</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">ChatBubble</span> <span class="attr">type</span>=<span class="string">&quot;mine&quot;</span> <span class="attr">time</span>=<span class="string">&quot;昨天 下午18：30&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">VoiceMessage</span> <span class="attr">type</span>=<span class="string">&quot;mine&quot;</span> <span class="attr">time</span>=<span class="string">&quot;01:24&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">ChatBubble</span>&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="四、Emoji-组件开发"><a href="#四、Emoji-组件开发" class="headerlink" title="四、Emoji 组件开发"></a>四、Emoji 组件开发</h3><p>Emoji 组件用来显示表情，可以直接使用操作系统自带表情，再用 React 封装，根据可访问原则，Emoji 应用 <code>span</code> 标签包装，并设置 <code>role</code> 和 <code>aria-label</code> 属性：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">role</span>=<span class="string">&quot;img&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;smirk&quot;</span>&gt;</span>😜<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用 Hygen 创建一个 Emoji 组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new Emoji</span><br></pre></td></tr></table></figure><p>在 <code>index.js</code> 文件中编辑标题栏组件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledEmoji</span> <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Emoji</span>(<span class="params">&#123; children, label, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledEmoji</span> <span class="attr">role</span>=<span class="string">&quot;img&quot;</span> <span class="attr">aria-label</span>=<span class="string">&#123;label&#125;</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledEmoji</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Emoji</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">  <span class="attr">label</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Emoji</span>;</span><br></pre></td></tr></table></figure><p>再在 <code>style.js</code> 中修改样式，使用 span 渲染：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledEmoji</span> = styled.<span class="property">span</span><span class="string">``</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledEmoji</span>;</span><br></pre></td></tr></table></figure><p>编辑 <code>emoji.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Emoji</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/Emoji&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Emoji</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* eslint-disable jsx-a11y/accessible-emoji */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Emoji</span> <span class="attr">label</span>=<span class="string">&quot;smile&quot;</span>&gt;</span>😄<span class="tag">&lt;/<span class="name">Emoji</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Emoji</span> <span class="attr">label</span>=<span class="string">&quot;todo&quot;</span>&gt;</span>✅<span class="tag">&lt;/<span class="name">Emoji</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Emoji</span> <span class="attr">label</span>=<span class="string">&quot;clock&quot;</span>&gt;</span>🕔<span class="tag">&lt;/<span class="name">Emoji</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>最后编辑 <code>chatBubble.stories.js</code> 文件，给 Mine 输入添加笑脸 Emoji：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Emoji</span> <span class="keyword">from</span> <span class="string">&quot;components/Emoji&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* eslint-disable jsx-a11y/accessible-emoji */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Mine</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">ChatBubble</span> <span class="attr">type</span>=<span class="string">&quot;mine&quot;</span> <span class="attr">time</span>=<span class="string">&quot;昨天 下午16：30&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    这是一条我自己发送的聊天消息<span class="tag">&lt;<span class="name">Emoji</span> <span class="attr">label</span>=<span class="string">&quot;smile&quot;</span>&gt;</span>😄<span class="tag">&lt;/<span class="name">Emoji</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">ChatBubble</span>&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="五、Popover-组件开发"><a href="#五、Popover-组件开发" class="headerlink" title="五、Popover 组件开发"></a>五、Popover 组件开发</h3><p>弹出层组件 Popover 用于显示额外的弹出层，使用 Hygen 创建一个弹出层组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new Popover</span><br></pre></td></tr></table></figure><p>在 <code>index.js</code> 文件中编辑标题栏组件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useState &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledPopover</span>, &#123; <span class="title class_">Content</span>, <span class="title class_">Triangle</span>, <span class="title class_">Target</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Popover</span>(<span class="params">&#123; children, content, offset = &#123;&#125;, onVisible, onHide, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> [visible, setVisible] = <span class="title function_">useState</span>(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleClick</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (visible) &#123;</span><br><span class="line">      <span class="title function_">setVisible</span>(<span class="literal">false</span>);</span><br><span class="line">      onHide &amp;&amp; <span class="title function_">onHide</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="title function_">setVisible</span>(<span class="literal">true</span>);</span><br><span class="line">      onVisible &amp;&amp; <span class="title function_">onVisible</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledPopover</span> <span class="attr">onClick</span>=<span class="string">&#123;handleClick&#125;</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Content</span> <span class="attr">visible</span>=<span class="string">&#123;visible&#125;</span> <span class="attr">offset</span>=<span class="string">&#123;offset&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;content&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Content</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Triangle</span> <span class="attr">visible</span>=<span class="string">&#123;visible&#125;</span> <span class="attr">offset</span>=<span class="string">&#123;offset&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Target</span>&gt;</span>&#123;children&#125;<span class="tag">&lt;/<span class="name">Target</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledPopover</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Popover</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">  <span class="attr">content</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">  <span class="attr">offset</span>: <span class="title class_">PropTypes</span>.<span class="title function_">shape</span>(&#123; <span class="attr">x</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>, <span class="attr">y</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span> &#125;),</span><br><span class="line">  <span class="attr">onVisible</span>: <span class="title class_">PropTypes</span>.<span class="property">func</span>,</span><br><span class="line">  <span class="attr">onHide</span>: <span class="title class_">PropTypes</span>.<span class="property">func</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Popover</span>;</span><br></pre></td></tr></table></figure><p>再在 <code>style.js</code> 中修改样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Content</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  background: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.background&#125;</span>;</span></span><br><span class="line"><span class="string">  border-radius: 21px;</span></span><br><span class="line"><span class="string">  box-shadow: 0px 8px 40px rgba(0, 0, 0, 0.12);</span></span><br><span class="line"><span class="string">  padding: 12px 30px;</span></span><br><span class="line"><span class="string">  position: absolute;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  bottom: calc(100% + 12px);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;(&#123; offset &#125;) =&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">    offset &amp;&amp; <span class="string">`transform: translate(<span class="subst">$&#123;offset.x || <span class="number">0</span>&#125;</span>, <span class="subst">$&#123;offset.y || <span class="number">0</span>&#125;</span>)`</span>&#125;</span>;</span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;(&#123; visible &#125;) =&gt; !visible &amp;&amp; <span class="string">`display: none`</span>&#125;</span>;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Triangle</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  position: absolute;</span></span><br><span class="line"><span class="string">  width: 0;</span></span><br><span class="line"><span class="string">  height: 0;</span></span><br><span class="line"><span class="string">  border-style: solid;</span></span><br><span class="line"><span class="string">  border-width: 6px 6px 0 6px;</span></span><br><span class="line"><span class="string">  border-color: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.background&#125;</span> transparent transparent</span></span><br><span class="line"><span class="string">    transparent;</span></span><br><span class="line"><span class="string">  left: calc(50% - 6px);</span></span><br><span class="line"><span class="string">  bottom: calc(100% + 12px - 5px);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;(&#123; offset &#125;) =&gt; offset &amp;&amp; <span class="string">`transform: translateY(<span class="subst">$&#123;offset.y || <span class="number">0</span>&#125;</span>);`</span>&#125;</span></span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;(&#123; visible &#125;) =&gt; !visible &amp;&amp; <span class="string">`display: none`</span>&#125;</span>;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Target</span> = styled.<span class="property">div</span><span class="string">``</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledPopover</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: flex;</span></span><br><span class="line"><span class="string">  justify-content: center;</span></span><br><span class="line"><span class="string">  position: relative;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledPopover</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">Content</span>, <span class="title class_">Target</span>, <span class="title class_">Triangle</span> &#125;;</span><br></pre></td></tr></table></figure><p>最后编辑 <code>popover.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Popover</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Button</span> <span class="keyword">from</span> <span class="string">&quot;components/Button&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/Popover&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Popover</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">style</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">display:</span> &quot;<span class="attr">flex</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">justifyContent:</span> &quot;<span class="attr">center</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">alignItems:</span> &quot;<span class="attr">center</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">height:</span> &quot;<span class="attr">50vh</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  &gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Popover</span> <span class="attr">content</span>=<span class="string">&quot;Hello!&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Button</span> <span class="attr">shape</span>=<span class="string">&quot;rect&quot;</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Popover</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">WithOffset</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">style</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">display:</span> &quot;<span class="attr">flex</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">justifyContent:</span> &quot;<span class="attr">center</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">alignItems:</span> &quot;<span class="attr">center</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">height:</span> &quot;<span class="attr">50vh</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  &gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Popover</span> <span class="attr">offset</span>=<span class="string">&#123;&#123;</span> <span class="attr">x:</span> &quot;<span class="attr">-25</span>%&quot; &#125;&#125; <span class="attr">content</span>=<span class="string">&#123;</span>&quot;<span class="attr">Hello</span>!&quot;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Button</span> <span class="attr">shape</span>=<span class="string">&quot;rect&quot;</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Popover</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="六、底部操作组件开发"><a href="#六、底部操作组件开发" class="headerlink" title="六、底部操作组件开发"></a>六、底部操作组件开发</h3><p>使用 Hygen 创建一个底部操作组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new Footer</span><br></pre></td></tr></table></figure><p>在 <code>index.js</code> 文件中编辑标题栏组件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useState &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledFooter</span>, &#123; <span class="title class_">IconContainer</span>, <span class="title class_">StyledPopoverContent</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">ClipIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/clip.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">SmileIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/smile.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">MicrophoneIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/microphone.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">PlaneIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/plane.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">OptionsIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/options.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Input</span> <span class="keyword">from</span> <span class="string">&quot;components/Input&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Button</span> <span class="keyword">from</span> <span class="string">&quot;components/Button&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Emoji</span> <span class="keyword">from</span> <span class="string">&quot;components/Emoji&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Popover</span> <span class="keyword">from</span> <span class="string">&quot;components/Popover&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useTheme &#125; <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Footer</span>(<span class="params">&#123; animeProps, style, children, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> [emojiIconActive, setEmojiIconActive] = <span class="title function_">useState</span>(<span class="literal">false</span>);</span><br><span class="line">  <span class="keyword">const</span> theme = <span class="title function_">useTheme</span>();</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledFooter</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">...style</span>, <span class="attr">...animeProps</span> &#125;&#125; &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">placeholder</span>=<span class="string">&quot;输入想和对方说的话&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">prefix</span>=<span class="string">&#123;</span>&lt;<span class="attr">Icon</span> <span class="attr">icon</span>=<span class="string">&#123;ClipIcon&#125;</span> /&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">        suffix=&#123;</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">IconContainer</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Popover</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">content</span>=<span class="string">&#123;</span>&lt;<span class="attr">PopoverContent</span> /&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">              offset=&#123;&#123; x: &quot;-25%&quot; &#125;&#125;</span></span><br><span class="line"><span class="language-xml">              onVisible=&#123;() =&gt; setEmojiIconActive(true)&#125;</span></span><br><span class="line"><span class="language-xml">              onHide=&#123;() =&gt; setEmojiIconActive(false)&#125;</span></span><br><span class="line"><span class="language-xml">            &gt;</span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Icon</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">icon</span>=<span class="string">&#123;SmileIcon&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">color</span>=<span class="string">&#123;emojiIconActive</span> ? <span class="attr">undefined</span> <span class="attr">:</span> <span class="attr">theme.gray3</span>&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">Popover</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Icon</span> <span class="attr">icon</span>=<span class="string">&#123;MicrophoneIcon&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Button</span> <span class="attr">size</span>=<span class="string">&quot;52px&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Icon</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">icon</span>=<span class="string">&#123;PlaneIcon&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">color</span>=<span class="string">&quot;white&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">transform:</span> &quot;<span class="attr">translateX</span>(<span class="attr">-2px</span>)&quot; &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">IconContainer</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#125;</span></span><br><span class="line"><span class="language-xml">      /&gt;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledFooter</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* eslint-disable jsx-a11y/accessible-emoji */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">PopoverContent</span>(<span class="params">props</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledPopoverContent</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Emoji</span> <span class="attr">label</span>=<span class="string">&quot;smile&quot;</span>&gt;</span>😊<span class="tag">&lt;/<span class="name">Emoji</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Emoji</span> <span class="attr">label</span>=<span class="string">&quot;grinning&quot;</span>&gt;</span>😆<span class="tag">&lt;/<span class="name">Emoji</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Emoji</span> <span class="attr">label</span>=<span class="string">&quot;thumbup&quot;</span>&gt;</span>👍<span class="tag">&lt;/<span class="name">Emoji</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Emoji</span> <span class="attr">label</span>=<span class="string">&quot;indexfingerup&quot;</span>&gt;</span>☝️<span class="tag">&lt;/<span class="name">Emoji</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Emoji</span> <span class="attr">label</span>=<span class="string">&quot;ok&quot;</span>&gt;</span>👌<span class="tag">&lt;/<span class="name">Emoji</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Emoji</span> <span class="attr">label</span>=<span class="string">&quot;handsputtogether&quot;</span>&gt;</span>🙏<span class="tag">&lt;/<span class="name">Emoji</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Emoji</span> <span class="attr">label</span>=<span class="string">&quot;smilewithsunglasses&quot;</span>&gt;</span>😎<span class="tag">&lt;/<span class="name">Emoji</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Emoji</span> <span class="attr">label</span>=<span class="string">&quot;flexedbicep&quot;</span>&gt;</span>💪<span class="tag">&lt;/<span class="name">Emoji</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Icon</span> <span class="attr">icon</span>=<span class="string">&#123;OptionsIcon&#125;</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">marginLeft:</span> &quot;<span class="attr">24px</span>&quot; &#125;&#125; /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledPopoverContent</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Footer</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Footer</span>;</span><br></pre></td></tr></table></figure><p>再在 <code>style.js</code> 中修改样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">IconContainer</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: flex;</span></span><br><span class="line"><span class="string">  align-items: center;</span></span><br><span class="line"><span class="string">  margin-right: -30px;</span></span><br><span class="line"><span class="string">  &amp; &gt; * &#123;</span></span><br><span class="line"><span class="string">    margin-left: 16px;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledPopoverContent</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: flex;</span></span><br><span class="line"><span class="string">  &amp; &gt; * &#123;</span></span><br><span class="line"><span class="string">    margin: 0 8px;</span></span><br><span class="line"><span class="string">    font-size: 16px;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledFooter</span> = styled.<span class="property">footer</span><span class="string">`</span></span><br><span class="line"><span class="string">  padding: 12px 30px;</span></span><br><span class="line"><span class="string">  width: 100%;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledFooter</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">IconContainer</span>, <span class="title class_">StyledPopoverContent</span> &#125;;</span><br></pre></td></tr></table></figure><p>最后编辑 <code>footer.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Footer</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;页面组件/Footer&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Footer</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">marginTop:</span> <span class="attr">80</span> &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Footer</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="七、会话窗口组件开发"><a href="#七、会话窗口组件开发" class="headerlink" title="七、会话窗口组件开发"></a>七、会话窗口组件开发</h3><p>最后，将以上编写的所有组件组装起来，使用 Hygen 创建一个会话窗口组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new Conversation</span><br></pre></td></tr></table></figure><p>在 <code>index.js</code> 文件中编辑标题栏组件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledConversation</span>, &#123; <span class="title class_">Conversations</span>, <span class="title class_">MyChatBubble</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">TitleBar</span> <span class="keyword">from</span> <span class="string">&quot;components/TitleBar&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ChatBubble</span> <span class="keyword">from</span> <span class="string">&quot;components/ChatBubble&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">VoiceMessage</span> <span class="keyword">from</span> <span class="string">&quot;components/VoiceMessage&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Emoji</span> <span class="keyword">from</span> <span class="string">&quot;components/Emoji&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Footer</span> <span class="keyword">from</span> <span class="string">&quot;components/Footer&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Conversation</span>(<span class="params">&#123; children, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledConversation</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">TitleBar</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Conversations</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ChatBubble</span> <span class="attr">time</span>=<span class="string">&quot;昨天 下午14：26&quot;</span>&gt;</span>Hi 小宇，忙什么呢？<span class="tag">&lt;/<span class="name">ChatBubble</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">MyChatBubble</span> <span class="attr">time</span>=<span class="string">&quot;昨天 下午16：30&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          Hello 啊！最近就是一直在加班改 bug，然后 怼产品，怼 UI，各种怼！</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">MyChatBubble</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ChatBubble</span> <span class="attr">time</span>=<span class="string">&quot;昨天 下午18：30&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">VoiceMessage</span> <span class="attr">time</span>=<span class="string">&quot;01:24&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">ChatBubble</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">MyChatBubble</span> <span class="attr">time</span>=<span class="string">&quot;昨天 下午16：30&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          明天约一把王者荣耀，不连赢5把不罢休 🤘</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Emoji</span> <span class="attr">label</span>=<span class="string">&quot;smile&quot;</span>&gt;</span>🤘<span class="tag">&lt;/<span class="name">Emoji</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">MyChatBubble</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Conversations</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Footer</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledConversation</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Conversation</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Conversation</span>;</span><br></pre></td></tr></table></figure><p>再在 <code>style.js</code> 中修改样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">ChatBubble</span> <span class="keyword">from</span> <span class="string">&quot;components/ChatBubble&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Conversations</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  padding: 10px 15px;</span></span><br><span class="line"><span class="string">  display: flex;</span></span><br><span class="line"><span class="string">  flex-direction: column;</span></span><br><span class="line"><span class="string">  align-items: flex-start;</span></span><br><span class="line"><span class="string">  width: 100%;</span></span><br><span class="line"><span class="string">  overflow-y: auto;</span></span><br><span class="line"><span class="string">  flex: 1;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  &amp; &gt; * &#123;</span></span><br><span class="line"><span class="string">    margin: 10px 0;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">MyChatBubble</span> = <span class="title function_">styled</span>(<span class="title class_">ChatBubble</span>).<span class="title function_">attrs</span>(&#123; <span class="attr">type</span>: <span class="string">&quot;mine&quot;</span> &#125;)<span class="string">`</span></span><br><span class="line"><span class="string">  align-self: flex-end;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledConversation</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: flex;</span></span><br><span class="line"><span class="string">  flex-direction: column;</span></span><br><span class="line"><span class="string">  height: 100vh;</span></span><br><span class="line"><span class="string">  border: 1px solid <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.gray4&#125;</span>;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  &amp; &gt; *:last-child &#123;</span></span><br><span class="line"><span class="string">    align-self: end;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledConversation</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">Conversations</span>, <span class="title class_">MyChatBubble</span> &#125;;</span><br></pre></td></tr></table></figure><p>最后编辑 <code>popover.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Conversation</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;页面组件/Conversation&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Conversation</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Conversation</span> /&gt;</span></span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;React 即时通信 UI 实战第六章。React 即时通信 UI 实战为&lt;a href=&quot;https://www.bilibili.com/video/BV1PK4y1b7bY?p=2&amp;amp;spm_id_from=pageDriver&amp;amp;vd_source=0965c74096f788f105780e5d5d0e9ebf&quot;&gt;峰华前端工程师&lt;/a&gt;推出的 React 实战课程，以聊天（即时通信）为原型，构建了一整套的 UI 组件库，课程重点在于 UI 组件的分析和实现，力求打造自用组件库。本章包括内容区中的标题栏、会话气泡、会话窗口、语音消息等组件。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Web前端" scheme="http://blog.zhuangzhihao.top/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="React" scheme="http://blog.zhuangzhihao.top/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>React 即时通信 ChatUI 侧边栏</title>
    <link href="http://blog.zhuangzhihao.top/ChatUI%E4%BE%A7%E8%BE%B9%E6%A0%8F/"/>
    <id>http://blog.zhuangzhihao.top/ChatUI%E4%BE%A7%E8%BE%B9%E6%A0%8F/</id>
    <published>2022-10-04T16:00:00.000Z</published>
    <updated>2022-12-01T13:24:15.958Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>React 即时通信 UI 实战第五章。React 即时通信 UI 实战为<a href="https://www.bilibili.com/video/BV1PK4y1b7bY?p=2&amp;spm_id_from=pageDriver&amp;vd_source=0965c74096f788f105780e5d5d0e9ebf">峰华前端工程师</a>推出的 React 实战课程，以聊天（即时通信）为原型，构建了一整套的 UI 组件库，课程重点在于 UI 组件的分析和实现，力求打造自用组件库。本章包括侧边栏中的搜索框、排版、下拉选项、消息卡片等组件。</p></blockquote><span id="more"></span><h3 id="一、搜索框开发"><a href="#一、搜索框开发" class="headerlink" title="一、搜索框开发"></a>一、搜索框开发</h3><p>搜索框是一种特殊的 Input 组件，所以先使用 Hygen 创建一个基础 Input 组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new Input</span><br></pre></td></tr></table></figure><p>在 <code>index.js</code> 文件中编辑基础 Input 组件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledInput</span>, &#123; <span class="title class_">InputContainer</span>, <span class="title class_">Prefix</span>, <span class="title class_">Suffix</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Input</span>(<span class="params">&#123; placeholder = <span class="string">&quot;请输入内容&quot;</span>, prefix, suffix, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">InputContainer</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;prefix &amp;&amp; <span class="tag">&lt;<span class="name">Prefix</span>&gt;</span>&#123;prefix&#125;<span class="tag">&lt;/<span class="name">Prefix</span>&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">StyledInput</span> <span class="attr">placeholder</span>=<span class="string">&#123;placeholder&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;suffix &amp;&amp; <span class="tag">&lt;<span class="name">Suffix</span>&gt;</span>&#123;suffix&#125;<span class="tag">&lt;/<span class="name">Suffix</span>&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">InputContainer</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Input</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">placeholder</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">  <span class="attr">prefix</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">  <span class="attr">suffix</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Input</span>;</span><br></pre></td></tr></table></figure><p>再在 <code>style.js</code> 中修改样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledInput</span> = styled.<span class="property">input</span><span class="string">`</span></span><br><span class="line"><span class="string">    width: 100%;</span></span><br><span class="line"><span class="string">    height: 48px;</span></span><br><span class="line"><span class="string">    border: none;</span></span><br><span class="line"><span class="string">    background: none;</span></span><br><span class="line"><span class="string">    color: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.grayDark&#125;</span>;</span></span><br><span class="line"><span class="string">    font-size: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.medium&#125;</span>;</span></span><br><span class="line"><span class="string">    display: block;</span></span><br><span class="line"><span class="string">    &amp;::placeholder &#123;</span></span><br><span class="line"><span class="string">        color: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.gray3&#125;</span>;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Prefix</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">    margin-right: 16px;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Suffix</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">    margin-left: 16px;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">InputContainer</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">    display: flex;</span></span><br><span class="line"><span class="string">    align-items: center;</span></span><br><span class="line"><span class="string">    background: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.gray2&#125;</span>;</span></span><br><span class="line"><span class="string">    border-radius: 24px;</span></span><br><span class="line"><span class="string">    padding: 0 30px;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledInput</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">Prefix</span>, <span class="title class_">Suffix</span>, <span class="title class_">InputContainer</span> &#125;;</span><br></pre></td></tr></table></figure><p>再在 <code>index.js</code> 中继续添加搜索框组件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">SearchIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/search.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useTheme &#125; <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Search</span>(<span class="params">&#123; placeholder = <span class="string">&quot;请输入搜索内容...&quot;</span>, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> theme = <span class="title function_">useTheme</span>();</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Input</span> <span class="attr">placeholder</span>=<span class="string">&#123;placeholder&#125;</span> <span class="attr">prefix</span>=<span class="string">&#123;</span> &lt;<span class="attr">Icon</span> <span class="attr">icon</span>=<span class="string">&#123;SearchIcon&#125;</span> <span class="attr">color</span>=<span class="string">&#123;theme.gray3&#125;</span> <span class="attr">width</span>=<span class="string">&#123;18&#125;</span> <span class="attr">height</span>=<span class="string">&#123;18&#125;</span> /&gt;</span> &#125; &#123;...rest&#125; /&gt;</span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Input</span>.<span class="property">Search</span> = <span class="title class_">Search</span>;</span><br></pre></td></tr></table></figure><p>最后编辑 <code>input.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Input</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">ClipIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/clip.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">SmileIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/smile.svg&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/Input&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Input</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Input</span> /&gt;</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Search</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Input.Search</span> /&gt;</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">WithAffix</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">Input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">prefix</span>=<span class="string">&#123;</span>&lt;<span class="attr">Icon</span> <span class="attr">icon</span>=<span class="string">&#123;ClipIcon&#125;</span> <span class="attr">color</span>=<span class="string">&quot;#cccccc&quot;</span> /&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">    suffix=&#123;<span class="tag">&lt;<span class="name">Icon</span> <span class="attr">icon</span>=<span class="string">&#123;SmileIcon&#125;</span> <span class="attr">color</span>=<span class="string">&quot;#cccccc&quot;</span> /&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">  /&gt;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>点击搜索框会有浏览器自带的 border 边框，在全局 index.css 中添加样式去除：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span>, <span class="selector-tag">button</span>, select &#123;</span><br><span class="line">    <span class="attribute">outline</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二、排版组件"><a href="#二、排版组件" class="headerlink" title="二、排版组件"></a>二、排版组件</h3><p>排版组件用于表示行内文本、段落、标题，首先编写行内文本组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new Text</span><br></pre></td></tr></table></figure><p>编辑 <code>index.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledText</span> <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Text</span>(<span class="params">&#123; children, type = <span class="string">&quot;primary&quot;</span>, size = <span class="string">&quot;normal&quot;</span>, bold, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledText</span> <span class="attr">type</span>=<span class="string">&#123;type&#125;</span> <span class="attr">size</span>=<span class="string">&#123;size&#125;</span> <span class="attr">bold</span>=<span class="string">&#123;bold&#125;</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledText</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Text</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">  <span class="attr">type</span>: <span class="title class_">PropTypes</span>.<span class="title function_">oneOf</span>([<span class="string">&quot;primary&quot;</span>, <span class="string">&quot;secondary&quot;</span>, <span class="string">&quot;danger&quot;</span>]),</span><br><span class="line">  <span class="attr">size</span>: <span class="title class_">PropTypes</span>.<span class="title function_">oneOf</span>([ <span class="string">&quot;xxsmall&quot;</span>, <span class="string">&quot;xsmall&quot;</span>, <span class="string">&quot;small&quot;</span>, <span class="string">&quot;normal&quot;</span>, <span class="string">&quot;medium&quot;</span>, <span class="string">&quot;large&quot;</span>, <span class="string">&quot;xlarge&quot;</span>, <span class="string">&quot;xxlarge&quot;</span>, ]),</span><br><span class="line">  <span class="attr">bold</span>: <span class="title class_">PropTypes</span>.<span class="property">bool</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Text</span>;</span><br></pre></td></tr></table></figure><p>在 <code>style.js</code> 中编写样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled, &#123; css &#125; <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> typeVariants = &#123;</span><br><span class="line">  <span class="attr">primary</span>: css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: </span><span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.grayDark&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">  `</span>,</span><br><span class="line">  <span class="attr">secondary</span>: css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: </span><span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.grayDark&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">opacity</span>: <span class="number">0.3</span>;</span></span><br><span class="line"><span class="language-css">  `</span>,</span><br><span class="line">  <span class="attr">danger</span>: css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: </span><span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.red&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">  `</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> sizeVariants = &#123;</span><br><span class="line">  <span class="attr">normal</span>: css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.normal&#125;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  `</span>,</span><br><span class="line">  <span class="attr">medium</span>: css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.medium&#125;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  `</span>,</span><br><span class="line">  <span class="attr">large</span>: css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.large&#125;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  `</span>,</span><br><span class="line">  <span class="attr">xlarge</span>: css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.xlarge&#125;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  `</span>,</span><br><span class="line">  <span class="attr">xxlarge</span>: css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.xxlarge&#125;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  `</span>,</span><br><span class="line">  <span class="attr">small</span>: css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.small&#125;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  `</span>,</span><br><span class="line">  <span class="attr">xsmall</span>: css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.xsmall&#125;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  `</span>,</span><br><span class="line">  <span class="attr">xxsmall</span>: css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.xxsmall&#125;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  `</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledText</span> = styled.<span class="property">span</span><span class="string">`</span></span><br><span class="line"><span class="string">  font-size: <span class="subst">$&#123;(&#123; size &#125;) =&gt; sizeVariants[size] || sizeVariants.normal&#125;</span>;</span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;(&#123; type &#125;) =&gt; typeVariants[type]&#125;</span>;</span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;(&#123; bold &#125;) =&gt; bold &amp;&amp; <span class="string">`font-weight: 500`</span>&#125;</span>;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledText</span>;</span><br></pre></td></tr></table></figure><p>最后编辑 story.js 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Text</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;排版/Text&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Text</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Text</span>&gt;</span>默认<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Secondary</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Text</span> <span class="attr">type</span>=<span class="string">&quot;secondary&quot;</span>&gt;</span>次要文本<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Medium</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Text</span> <span class="attr">size</span>=<span class="string">&quot;medium&quot;</span>&gt;</span>medium 大小文本<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">LargeAndBold</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">Text</span> <span class="attr">size</span>=<span class="string">&quot;large&quot;</span> <span class="attr">bold</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    large 大小文本，加粗</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>紧接着编写 Paragraph 段落组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new Paragraph</span><br></pre></td></tr></table></figure><p>编辑段落 index.js 组件格式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledParagraph</span> <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Paragraph</span>(<span class="params">&#123; children, ellipsis, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledParagraph</span> <span class="attr">as</span>=<span class="string">&quot;p&quot;</span> <span class="attr">ellipsis</span>=<span class="string">&#123;ellipsis&#125;</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledParagraph</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Paragraph</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">  <span class="attr">ellipsis</span>: <span class="title class_">PropTypes</span>.<span class="property">bool</span>,</span><br><span class="line">  <span class="attr">type</span>: <span class="title class_">PropTypes</span>.<span class="title function_">oneOf</span>([<span class="string">&quot;primary&quot;</span>, <span class="string">&quot;secondary&quot;</span>, <span class="string">&quot;danger&quot;</span>]),</span><br><span class="line">  <span class="attr">size</span>: <span class="title class_">PropTypes</span>.<span class="title function_">oneOf</span>([ <span class="string">&quot;xxsmall&quot;</span>, <span class="string">&quot;xsmall&quot;</span>, <span class="string">&quot;small&quot;</span>, <span class="string">&quot;normal&quot;</span>, <span class="string">&quot;medium&quot;</span>, <span class="string">&quot;large&quot;</span>, <span class="string">&quot;xlarge&quot;</span>, <span class="string">&quot;xxlarge&quot;</span>, ]),</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Paragraph</span>;</span><br></pre></td></tr></table></figure><p>在 <code>style.js</code> 文件中编写样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">StyledText</span> <span class="keyword">from</span> <span class="string">&quot;components/Text/style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> styled, &#123; css &#125; <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledParagraph</span> = <span class="title function_">styled</span>(<span class="title class_">StyledText</span>)<span class="string">`</span></span><br><span class="line"><span class="string">    <span class="subst">$&#123;(&#123; ellipsis &#125;) =&gt; ellipsis &amp;&amp;</span></span></span><br><span class="line"><span class="subst"><span class="string">        css`<span class="language-css"></span></span></span></span><br><span class="line"><span class="language-css"><span class="subst"><span class="string">      <span class="attribute">text-overflow</span>: ellipsis;</span></span></span></span><br><span class="line"><span class="language-css"><span class="subst"><span class="string">      <span class="attribute">white-space</span>: nowrap;</span></span></span></span><br><span class="line"><span class="language-css"><span class="subst"><span class="string">      <span class="attribute">overflow</span>: hidden;</span></span></span></span><br><span class="line"><span class="language-css"><span class="subst"><span class="string">    `</span>&#125;</span></span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledParagraph</span>;</span><br></pre></td></tr></table></figure><p>接下来在 <code>paragraph.stories.js</code> 中编写 Paragraph 的 stories：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Paragraph</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;排版/Paragraph&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Paragraph</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Paragraph</span>&gt;</span>这是一个段落<span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Paragraph</span>&gt;</span>这是一个段落<span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/&gt;</span></span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Ellipsis</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">Paragraph</span> <span class="attr">ellipsis</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    这是一个很长的段落这是一个很长的段落这是一个很长的段落这是一个很长的段落这是一个很长的段落这是一个很长的段落这是一个很长的段落这是一个很长的段落这是一个很长的段落这是一个很长的段落这是一个很长的段落</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>段落之间存在空行，在全局 index.css 中添加全局样式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后再创建一个 Headings 组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new Heading</span><br></pre></td></tr></table></figure><p>在此目录下的 <code>index.js</code> 中让 Headings 接收一个 <code>level</code> 属性，表示 h1 ~ h6 标签：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledHeading</span> <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Heading</span>(<span class="params">&#123; children, level, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledHeading</span> <span class="attr">as</span>=<span class="string">&#123;</span>`<span class="attr">h</span>$&#123;<span class="attr">level</span>&#125;`&#125; &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledHeading</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Heading</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">  <span class="attr">level</span>: <span class="title class_">PropTypes</span>.<span class="title function_">oneOf</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]),</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Heading</span>;</span><br></pre></td></tr></table></figure><p>文本标签使用默认样式即可，直接编写 <code>heading.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Heading</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;排版/Heading&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Heading</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">H1</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Heading</span> <span class="attr">level</span>=<span class="string">&#123;1&#125;</span>&gt;</span>这是标题<span class="tag">&lt;/<span class="name">Heading</span>&gt;</span></span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">H2</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Heading</span> <span class="attr">level</span>=<span class="string">&#123;2&#125;</span>&gt;</span>这是标题<span class="tag">&lt;/<span class="name">Heading</span>&gt;</span></span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">H3</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Heading</span> <span class="attr">level</span>=<span class="string">&#123;3&#125;</span>&gt;</span>这是标题<span class="tag">&lt;/<span class="name">Heading</span>&gt;</span></span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">H4</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Heading</span> <span class="attr">level</span>=<span class="string">&#123;4&#125;</span>&gt;</span>这是标题<span class="tag">&lt;/<span class="name">Heading</span>&gt;</span></span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">H5</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Heading</span> <span class="attr">level</span>=<span class="string">&#123;5&#125;</span>&gt;</span>这是标题<span class="tag">&lt;/<span class="name">Heading</span>&gt;</span></span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">H6</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Heading</span> <span class="attr">level</span>=<span class="string">&#123;6&#125;</span>&gt;</span>这是标题<span class="tag">&lt;/<span class="name">Heading</span>&gt;</span></span>;</span><br></pre></td></tr></table></figure><h3 id="三、过滤下拉菜单组件"><a href="#三、过滤下拉菜单组件" class="headerlink" title="三、过滤下拉菜单组件"></a>三、过滤下拉菜单组件</h3><p>侧边栏中的过滤选项以下拉列表组件形式存在，创建下拉列表组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hygen component new Select</span><br><span class="line">hygen component new Option</span><br></pre></td></tr></table></figure><p>由于 Option 组件只是对 HTML 标签 option 简单封装，所以删除 <code>option.stories.js</code> 文件，将 <code>components/Option/style.js</code> 文件编辑为：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledOption</span> = styled.<span class="property">option</span><span class="string">``</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledOption</span>;</span><br></pre></td></tr></table></figure><p>在 <code>components/Select/style.js</code> 中编写组件样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">CaretDown</span> <span class="keyword">from</span> <span class="string">&quot;assets/icon/caret_down.svg&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledSelect</span> = styled.<span class="property">select</span><span class="string">`</span></span><br><span class="line"><span class="string">  appearance: none;</span></span><br><span class="line"><span class="string">  background-image: url(<span class="subst">$&#123;CaretDown&#125;</span>);</span></span><br><span class="line"><span class="string">  background-repeat: no-repeat;</span></span><br><span class="line"><span class="string">  background-position: right center;</span></span><br><span class="line"><span class="string">  background-color: transparent;</span></span><br><span class="line"><span class="string">  border: none;</span></span><br><span class="line"><span class="string">  padding-right: 14px;</span></span><br><span class="line"><span class="string">  font-size: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.normal&#125;</span>;</span></span><br><span class="line"><span class="string">  color: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.grayDark&#125;</span>;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  ::-ms-expand &#123;</span></span><br><span class="line"><span class="string">    display: none;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledSelect</span>;</span><br></pre></td></tr></table></figure><p>在 <code>components/Select/select.stories.js</code> 中编写组件 stories：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Select</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Option</span> <span class="keyword">from</span> <span class="string">&quot;components/Option&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/Input/Select&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Select</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">Select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Option</span>&gt;</span>最新消息优先<span class="tag">&lt;/<span class="name">Option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Option</span>&gt;</span>在线好友优先<span class="tag">&lt;/<span class="name">Option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">Select</span>&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="四、动作按钮组件"><a href="#四、动作按钮组件" class="headerlink" title="四、动作按钮组件"></a>四、动作按钮组件</h3><p>在 Material Design 设计规范中，谷歌提出了悬浮响应按钮（Floating action button）控件的基本准则规范，分为圆形和矩形按钮两种。先删除全局中的 <code>Button.js</code> 以及 <code>App.js</code> 中的示例，使用 Hygen 创建一个新的 Button 组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new Button</span><br></pre></td></tr></table></figure><p>在 <code>index.js</code> 中编写组件结构：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledButton</span> <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Button</span>(<span class="params">&#123; children, type = <span class="string">&quot;primary&quot;</span>, shape = <span class="string">&quot;circle&quot;</span>, size = <span class="string">&quot;30px&quot;</span>, bgColor, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledButton</span> <span class="attr">type</span>=<span class="string">&#123;type&#125;</span> <span class="attr">shape</span>=<span class="string">&#123;shape&#125;</span> <span class="attr">size</span>=<span class="string">&#123;size&#125;</span> <span class="attr">bgColor</span>=<span class="string">&#123;bgColor&#125;</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledButton</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Button</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">  <span class="attr">type</span>: <span class="title class_">PropTypes</span>.<span class="title function_">oneOf</span>([<span class="string">&quot;primary&quot;</span>]),</span><br><span class="line">  <span class="attr">shape</span>: <span class="title class_">PropTypes</span>.<span class="title function_">oneOf</span>([<span class="string">&quot;circle&quot;</span>, <span class="string">&quot;rect&quot;</span>]),</span><br><span class="line">  <span class="attr">size</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Button</span>;</span><br></pre></td></tr></table></figure><p>在 style.js 文件中编写样式，注意按钮一般为行内元素：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled, &#123; css &#125; <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> shapeVariants = &#123;</span><br><span class="line">  <span class="attr">circle</span>: css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: </span><span class="subst">$&#123;(&#123; size &#125;) =&gt; size&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: </span><span class="subst">$&#123;(&#123; size &#125;) =&gt; size&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">display</span>: inline-flex;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="language-css">  `</span>,</span><br><span class="line">  <span class="attr">rect</span>: css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">12px</span> <span class="number">18px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span></span><br><span class="line"><span class="language-css">  `</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> typeVariants = &#123;</span><br><span class="line">  <span class="attr">primary</span>: css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: </span><span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.primaryColor&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">  `</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledButton</span> = styled.<span class="property">button</span><span class="string">`</span></span><br><span class="line"><span class="string">  border: none;</span></span><br><span class="line"><span class="string">  outline: none;</span></span><br><span class="line"><span class="string">  cursor: pointer;</span></span><br><span class="line"><span class="string">  box-shadow: 0px 6px 12px rgba(0, 0, 0, 0.1);</span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;(&#123; shape &#125;) =&gt; shapeVariants[shape]&#125;</span></span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;(&#123; type &#125;) =&gt; typeVariants[type]&#125;</span></span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;(&#123; bgColor &#125;) =&gt; <span class="string">`background-color: <span class="subst">$&#123;bgColor&#125;</span>`</span>&#125;</span>;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  transform: scale(1);</span></span><br><span class="line"><span class="string">  transition: 0.4s;</span></span><br><span class="line"><span class="string">  &amp;:hover &#123;</span></span><br><span class="line"><span class="string">    transform: scale(1.1);</span></span><br><span class="line"><span class="string">    box-shadow: 0px 6px 16px rgba(0, 0, 0, 0.12);</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledButton</span>;</span><br></pre></td></tr></table></figure><p>在 <code>button.stories.js</code> 中编写 story，分别为圆角矩形和圆形按钮：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Button</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">Plus</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/plus.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/Button&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Button</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">RectButton</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Button</span> <span class="attr">shape</span>=<span class="string">&quot;rect&quot;</span>&gt;</span>默认按钮<span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">CircleButton</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Icon</span> <span class="attr">icon</span>=<span class="string">&#123;Plus&#125;</span> <span class="attr">width</span>=<span class="string">&#123;12&#125;</span> <span class="attr">height</span>=<span class="string">&#123;12&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="五、过滤选项组件"><a href="#五、过滤选项组件" class="headerlink" title="五、过滤选项组件"></a>五、过滤选项组件</h3><p>过滤选项组件分为下拉菜单组件和动作按钮组件，即前两部分叠加。创建一个 Filter 组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new Filter</span><br></pre></td></tr></table></figure><p>在 <code>index.js</code> 中将 Filters 和 Action 作为 Filter 组件的子组件导出：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledFilter</span>, &#123; <span class="title class_">Filters</span>, <span class="title class_">Action</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Text</span> <span class="keyword">from</span> <span class="string">&quot;components/Text&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Filter</span>(<span class="params">&#123; children, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">StyledFilter</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span>&#123;children&#125;<span class="tag">&lt;/<span class="name">StyledFilter</span>&gt;</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Filter</span>.<span class="property">Filters</span> = <span class="function">(<span class="params">&#123; children, label, ...rest &#125;</span>) =&gt;</span> (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">Filters</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Text</span> <span class="attr">type</span>=<span class="string">&quot;secondary&quot;</span>&gt;</span>&#123;label&#125;：<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">Filters</span>&gt;</span></span></span><br><span class="line">);</span><br><span class="line"><span class="title class_">Filter</span>.<span class="property">Action</span> = <span class="function">(<span class="params">&#123; children, label, ...rest &#125;</span>) =&gt;</span> (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">Action</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Text</span> <span class="attr">type</span>=<span class="string">&quot;secondary&quot;</span>&gt;</span>&#123;label&#125;<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">Action</span>&gt;</span></span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="title class_">Filter</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Filter</span>;</span><br></pre></td></tr></table></figure><p>在 <code>style.js</code> 中编写样式，使用 Grid 布局：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledText</span> <span class="keyword">from</span> <span class="string">&quot;components/Text/style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Filters</span> = styled.<span class="property">div</span><span class="string">``</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Action</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  justify-self: end;</span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;StyledText&#125;</span> &#123;</span></span><br><span class="line"><span class="string">    padding-right: 1rem;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledFilter</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: grid;</span></span><br><span class="line"><span class="string">  grid-template-columns: 2fr 1fr;</span></span><br><span class="line"><span class="string">  align-items: center;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledFilter</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">Filters</span>, <span class="title class_">Action</span> &#125;;</span><br></pre></td></tr></table></figure><p>最后编写 stories 示例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Filter</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Select</span> <span class="keyword">from</span> <span class="string">&quot;components/Select&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Option</span> <span class="keyword">from</span> <span class="string">&quot;components/Option&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Button</span> <span class="keyword">from</span> <span class="string">&quot;components/Button&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">Plus</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/plus.svg&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/Filter&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Filter</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">Filter</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Filter.Filters</span> <span class="attr">label</span>=<span class="string">&quot;列表排序&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Option</span>&gt;</span>最新消息优先<span class="tag">&lt;/<span class="name">Option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Option</span>&gt;</span>在线好友优先<span class="tag">&lt;/<span class="name">Option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Filter.Filters</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Filter.Action</span> <span class="attr">label</span>=<span class="string">&quot;创建会话&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Icon</span> <span class="attr">icon</span>=<span class="string">&#123;Plus&#125;</span> <span class="attr">width</span>=<span class="string">&#123;12&#125;</span> <span class="attr">height</span>=<span class="string">&#123;12&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Filter.Action</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">Filter</span>&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="六、消息卡片组件"><a href="#六、消息卡片组件" class="headerlink" title="六、消息卡片组件"></a>六、消息卡片组件</h3><p>创建消息卡片组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new MessageCard</span><br></pre></td></tr></table></figure><p>打开全局 <code>utils/mixins.js</code> 添加编写通用卡片样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">card</span> = (<span class="params">radius = <span class="string">&quot;6px&quot;</span>, padding = <span class="string">&quot;20px 30px&quot;</span></span>) =&gt; css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: </span><span class="subst">$&#123;padding&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background</span>: </span><span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.background&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">18px</span> <span class="number">40px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.04</span>);</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border-radius</span>: </span><span class="subst">$&#123;radius&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">`</span>;</span><br></pre></td></tr></table></figure><p>编写 <code>MessageCard/index.js</code> 文件，其中包含激活状态和已回复状态：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledMessageCard</span>, &#123;</span><br><span class="line">  <span class="title class_">Name</span>,</span><br><span class="line">  <span class="title class_">Status</span>,</span><br><span class="line">  <span class="title class_">Time</span>,</span><br><span class="line">  <span class="title class_">Message</span>,</span><br><span class="line">  <span class="title class_">MessageText</span>,</span><br><span class="line">  <span class="title class_">UnreadBadge</span>,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Avatar</span> <span class="keyword">from</span> <span class="string">&quot;components/Avatar&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useTheme &#125; <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">Replied</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/replied.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">MessageCard</span>(<span class="params">&#123;</span></span><br><span class="line"><span class="params">  avatarSrc,</span></span><br><span class="line"><span class="params">  avatarStatus,</span></span><br><span class="line"><span class="params">  statusText,</span></span><br><span class="line"><span class="params">  name,</span></span><br><span class="line"><span class="params">  time,</span></span><br><span class="line"><span class="params">  message,</span></span><br><span class="line"><span class="params">  unreadCount,</span></span><br><span class="line"><span class="params">  active,</span></span><br><span class="line"><span class="params">  replied,</span></span><br><span class="line"><span class="params">  children,</span></span><br><span class="line"><span class="params">  ...rest</span></span><br><span class="line"><span class="params">&#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> theme = <span class="title function_">useTheme</span>();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledMessageCard</span> <span class="attr">active</span>=<span class="string">&#123;active&#125;</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Avatar</span> <span class="attr">status</span>=<span class="string">&#123;avatarStatus&#125;</span> <span class="attr">src</span>=<span class="string">&#123;avatarSrc&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Name</span>&gt;</span>&#123;name&#125;<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Status</span>&gt;</span>&#123;statusText&#125;<span class="tag">&lt;/<span class="name">Status</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Time</span>&gt;</span>&#123;time&#125;<span class="tag">&lt;/<span class="name">Time</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Message</span> <span class="attr">replied</span>=<span class="string">&#123;replied&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;replied &amp;&amp; (</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Icon</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">width</span>=<span class="string">&#123;16&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">height</span>=<span class="string">&#123;14&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">icon</span>=<span class="string">&#123;Replied&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">color</span>=<span class="string">&#123;active</span> ? <span class="attr">theme.inactiveColorDark</span> <span class="attr">:</span> <span class="attr">theme.inactiveColor</span>&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">opacity</span>=<span class="string">&#123;active</span> ? <span class="attr">0.4</span> <span class="attr">:</span> <span class="attr">1</span>&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">style</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">justifyContent:</span> &quot;<span class="attr">start</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          /&gt;</span></span></span><br><span class="line"><span class="language-xml">        )&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">MessageText</span>&gt;</span>&#123;message&#125;<span class="tag">&lt;/<span class="name">MessageText</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">UnreadBadge</span> <span class="attr">count</span>=<span class="string">&#123;unreadCount&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Message</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledMessageCard</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">MessageCard</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">avatarSrc</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>.<span class="property">isRequired</span>,</span><br><span class="line">  <span class="attr">avatarStatus</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">  <span class="attr">statusText</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">  <span class="attr">name</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">  <span class="attr">time</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">  <span class="attr">message</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">  <span class="attr">unreadCount</span>: <span class="title class_">PropTypes</span>.<span class="property">number</span>,</span><br><span class="line">  <span class="attr">active</span>: <span class="title class_">PropTypes</span>.<span class="property">bool</span>,</span><br><span class="line">  <span class="attr">replied</span>: <span class="title class_">PropTypes</span>.<span class="property">bool</span>,</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">MessageCard</span>;</span><br></pre></td></tr></table></figure><p>编写样式 <code>style.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled, &#123; css &#125; <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Text</span> <span class="keyword">from</span> <span class="string">&quot;components/Text&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Paragraph</span> <span class="keyword">from</span> <span class="string">&quot;components/Paragraph&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Badge</span> <span class="keyword">from</span> <span class="string">&quot;components/Badge&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; card, activeBar &#125; <span class="keyword">from</span> <span class="string">&quot;utils/mixins&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledAvatar</span> <span class="keyword">from</span> <span class="string">&quot;components/Avatar/style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Name</span> = <span class="title function_">styled</span>(<span class="title class_">Text</span>).<span class="title function_">attrs</span>(&#123; <span class="attr">size</span>: <span class="string">&quot;large&quot;</span> &#125;)<span class="string">`</span></span><br><span class="line"><span class="string">  grid-area: name;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Time</span> = <span class="title function_">styled</span>(<span class="title class_">Text</span>).<span class="title function_">attrs</span>(&#123; <span class="attr">size</span>: <span class="string">&quot;medium&quot;</span>, <span class="attr">type</span>: <span class="string">&quot;secondary&quot;</span> &#125;)<span class="string">`</span></span><br><span class="line"><span class="string">  grid-area: time;</span></span><br><span class="line"><span class="string">  justify-self: end;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Status</span> = <span class="title function_">styled</span>(<span class="title class_">Text</span>).<span class="title function_">attrs</span>(&#123; <span class="attr">type</span>: <span class="string">&quot;secondary&quot;</span> &#125;)<span class="string">`</span></span><br><span class="line"><span class="string">  grid-area: status;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Message</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  grid-area: message;</span></span><br><span class="line"><span class="string">  display: grid;</span></span><br><span class="line"><span class="string">  grid-template-columns: 1fr 30px;</span></span><br><span class="line"><span class="string">  align-items: center;</span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;(&#123; replied &#125;) =&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">        replied &amp;&amp;</span></span></span><br><span class="line"><span class="subst"><span class="string">        css`<span class="language-css"></span></span></span></span><br><span class="line"><span class="language-css"><span class="subst"><span class="string">      <span class="attribute">grid-template-columns</span>: <span class="number">24px</span> <span class="number">1</span>fr <span class="number">30px</span>;</span></span></span></span><br><span class="line"><span class="language-css"><span class="subst"><span class="string">    `</span>&#125;</span></span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">MessageText</span> = <span class="title function_">styled</span>(<span class="title class_">Paragraph</span>).<span class="title function_">attrs</span>(&#123; <span class="attr">ellipsis</span>: <span class="literal">true</span> &#125;)<span class="string">``</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">UnreadBadge</span> = <span class="title function_">styled</span>(<span class="title class_">Badge</span>)<span class="string">`</span></span><br><span class="line"><span class="string">  justify-self: end;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledMessageCard</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;card()&#125;</span>;</span></span><br><span class="line"><span class="string">  display: grid;</span></span><br><span class="line"><span class="string">  grid-template-areas:</span></span><br><span class="line"><span class="string">    &quot;avatar name time&quot;</span></span><br><span class="line"><span class="string">    &quot;avatar status status&quot;</span></span><br><span class="line"><span class="string">    &quot;message message message&quot;;</span></span><br><span class="line"><span class="string">  grid-template-columns: 64px 1fr 1fr;</span></span><br><span class="line"><span class="string">  row-gap: 16px;</span></span><br><span class="line"><span class="string">  background: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.background&#125;</span>;</span></span><br><span class="line"><span class="string">  transition: 0.4s;</span></span><br><span class="line"><span class="string">  &amp;:hover &#123;</span></span><br><span class="line"><span class="string">    box-shadow: 0px 20px 50px rgba(0, 0, 0, 0.1);</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;StyledAvatar&#125;</span> &#123;</span></span><br><span class="line"><span class="string">    grid-area: avatar;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;(&#123; active &#125;) =&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">        active &amp;&amp;</span></span></span><br><span class="line"><span class="subst"><span class="string">        css`<span class="language-css"></span></span></span></span><br><span class="line"><span class="language-css"><span class="subst"><span class="string">      <span class="attribute">background</span>: </span><span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.darkPurple&#125;</span><span class="language-css">;</span></span></span></span><br><span class="line"><span class="language-css"><span class="subst"><span class="string">      </span><span class="subst">$&#123;Name&#125;</span><span class="language-css">, </span><span class="subst">$&#123;Status&#125;</span><span class="language-css">, </span><span class="subst">$&#123;Time&#125;</span><span class="language-css">, </span><span class="subst">$&#123;MessageText&#125;</span><span class="language-css"> &#123;</span></span></span></span><br><span class="line"><span class="language-css"><span class="subst"><span class="string">        <span class="attribute">color</span>: white;</span></span></span></span><br><span class="line"><span class="language-css"><span class="subst"><span class="string">      &#125;</span></span></span></span><br><span class="line"><span class="language-css"><span class="subst"><span class="string">      </span><span class="subst">$&#123;Status&#125;</span><span class="language-css">, </span><span class="subst">$&#123;Time&#125;</span><span class="language-css"> &#123;</span></span></span></span><br><span class="line"><span class="language-css"><span class="subst"><span class="string">        <span class="attribute">opacity</span>: <span class="number">0.4</span>;</span></span></span></span><br><span class="line"><span class="language-css"><span class="subst"><span class="string">      &#125;</span></span></span></span><br><span class="line"><span class="language-css"><span class="subst"><span class="string">      </span><span class="subst">$&#123;activeBar(&#123; barWidth: <span class="string">&quot;4px&quot;</span>, shadowWidth: <span class="string">&quot;14px&quot;</span> &#125;)&#125;</span><span class="language-css"></span></span></span></span><br><span class="line"><span class="language-css"><span class="subst"><span class="string"></span></span></span></span><br><span class="line"><span class="language-css"><span class="subst"><span class="string">      <span class="comment">/* 隐藏指示条露在外边的部分 */</span></span></span></span></span><br><span class="line"><span class="language-css"><span class="subst"><span class="string">      <span class="attribute">overflow</span>: hidden;`</span>&#125;</span></span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledMessageCard</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">Name</span>, <span class="title class_">Time</span>, <span class="title class_">Status</span>, <span class="title class_">Message</span>, <span class="title class_">MessageText</span>, <span class="title class_">UnreadBadge</span> &#125;;</span><br></pre></td></tr></table></figure><p>最后在 <code>messageCard.stories.js</code> 中将四种状态的卡片分别编辑 stories：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">MessageCard</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> face1 <span class="keyword">from</span> <span class="string">&quot;assets/images/face-male-1.jpg&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/MessageCard&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">MessageCard</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">MessageCard</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">avatarSrc</span>=<span class="string">&#123;face1&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">name</span>=<span class="string">&quot;李铭浩&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">avatarStatus</span>=<span class="string">&quot;online&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">statusText</span>=<span class="string">&quot;在线&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">time</span>=<span class="string">&quot;3 小时之前&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">message</span>=<span class="string">&quot;即使爬到最高的山上，一次也只能脚踏实地地&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">unreadCount</span>=<span class="string">&#123;2&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  /&gt;</span></span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Active</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">MessageCard</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">avatarSrc</span>=<span class="string">&#123;face1&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">name</span>=<span class="string">&quot;李铭浩&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">avatarStatus</span>=<span class="string">&quot;online&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">statusText</span>=<span class="string">&quot;在线&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">time</span>=<span class="string">&quot;3 小时之前&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">message</span>=<span class="string">&quot;即使爬到最高的山上，一次也只能脚踏实地地&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">unreadCount</span>=<span class="string">&#123;2&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">active</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  /&gt;</span></span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Replied</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">MessageCard</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">avatarSrc</span>=<span class="string">&#123;face1&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">name</span>=<span class="string">&quot;李铭浩&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">avatarStatus</span>=<span class="string">&quot;online&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">statusText</span>=<span class="string">&quot;在线&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">time</span>=<span class="string">&quot;3 小时之前&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">message</span>=<span class="string">&quot;即使爬到最高的山上，一次也只能脚踏实地地&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">unreadCount</span>=<span class="string">&#123;2&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">active</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">replied</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  /&gt;</span></span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">RepliedInactive</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">MessageCard</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">avatarSrc</span>=<span class="string">&#123;face1&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">name</span>=<span class="string">&quot;李铭浩&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">avatarStatus</span>=<span class="string">&quot;online&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">statusText</span>=<span class="string">&quot;在线&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">time</span>=<span class="string">&quot;3 小时之前&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">message</span>=<span class="string">&quot;即使爬到最高的山上，一次也只能脚踏实地地&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">unreadCount</span>=<span class="string">&#123;2&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">replied</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  /&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="七、消息列表组件"><a href="#七、消息列表组件" class="headerlink" title="七、消息列表组件"></a>七、消息列表组件</h3><p>将以上所有组件组装起来就是消息列表（侧边栏）组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new MessageList</span><br></pre></td></tr></table></figure><p>在 index.js 中编辑组件结构：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledMessageList</span>, &#123; <span class="title class_">ChatList</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">Plus</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/plus.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Filter</span> <span class="keyword">from</span> <span class="string">&quot;components/Filter&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Select</span> <span class="keyword">from</span> <span class="string">&quot;components/Select&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Option</span> <span class="keyword">from</span> <span class="string">&quot;components/Option&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Button</span> <span class="keyword">from</span> <span class="string">&quot;components/Button&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Input</span> <span class="keyword">from</span> <span class="string">&quot;components/Input&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">MessageCard</span> <span class="keyword">from</span> <span class="string">&quot;components/MessageCard&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> face1 <span class="keyword">from</span> <span class="string">&quot;assets/images/face-male-1.jpg&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">MessageList</span>(<span class="params">&#123; children, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledMessageList</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Input.Search</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ChatFilter</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ChatList</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;[1, 2, 3, 4, 5, 6].map((_, index) =&gt; (</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">MessageCard</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">key</span>=<span class="string">&#123;index&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">active</span>=<span class="string">&#123;index</span> === <span class="string">3&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">replied</span>=<span class="string">&#123;index</span> % <span class="attr">3</span> === <span class="string">0&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">avatarSrc</span>=<span class="string">&#123;face1&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">name</span>=<span class="string">&quot;李铭浩&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">avatarStatus</span>=<span class="string">&quot;online&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">statusText</span>=<span class="string">&quot;在线&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">time</span>=<span class="string">&quot;3 小时之前&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">message</span>=<span class="string">&quot;即使爬到最高的山上，一次也只能脚踏实地地&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">unreadCount</span>=<span class="string">&#123;2&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          /&gt;</span></span></span><br><span class="line"><span class="language-xml">        ))&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">ChatList</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledMessageList</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">ChatFilter</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Filter</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">padding:</span> &quot;<span class="attr">20px</span> <span class="attr">0</span>&quot; &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Filter.Filters</span> <span class="attr">label</span>=<span class="string">&quot;列表排序&quot;</span> &gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Option</span>&gt;</span>最新消息优先<span class="tag">&lt;/<span class="name">Option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Option</span>&gt;</span>在线好友优先<span class="tag">&lt;/<span class="name">Option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &lt;/Filter.Filters &gt;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Filter.Action</span> <span class="attr">label</span>=<span class="string">&quot;创建会话&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Icon</span> <span class="attr">icon</span>=<span class="string">&#123;Plus&#125;</span> <span class="attr">width</span>=<span class="string">&#123;12&#125;</span> <span class="attr">height</span>=<span class="string">&#123;12&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Filter.Action</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Filter</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  );</span></span><br><span class="line"><span class="language-xml">&#125;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">MessageList.propTypes = &#123;</span></span><br><span class="line"><span class="language-xml">  children: PropTypes.any,</span></span><br><span class="line"><span class="language-xml">&#125;;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">export default MessageList;</span></span><br></pre></td></tr></table></figure><p>并在 <code>style.js</code> 中编写样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledMessageCard</span> <span class="keyword">from</span> <span class="string">&quot;components/MessageCard/style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">ChatList</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;StyledMessageCard&#125;</span> &#123;</span></span><br><span class="line"><span class="string">    margin-bottom: 20px;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledMessageList</span> = styled.<span class="property">div</span><span class="string">``</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledMessageList</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">ChatList</span> &#125;;</span><br></pre></td></tr></table></figure><p>最后在 <code>messageList.stories.js</code> 中导出：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">MessageList</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;页面组件/MessageList&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">MessageList</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">MessageList</span> /&gt;</span></span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;React 即时通信 UI 实战第五章。React 即时通信 UI 实战为&lt;a href=&quot;https://www.bilibili.com/video/BV1PK4y1b7bY?p=2&amp;amp;spm_id_from=pageDriver&amp;amp;vd_source=0965c74096f788f105780e5d5d0e9ebf&quot;&gt;峰华前端工程师&lt;/a&gt;推出的 React 实战课程，以聊天（即时通信）为原型，构建了一整套的 UI 组件库，课程重点在于 UI 组件的分析和实现，力求打造自用组件库。本章包括侧边栏中的搜索框、排版、下拉选项、消息卡片等组件。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Web前端" scheme="http://blog.zhuangzhihao.top/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="React" scheme="http://blog.zhuangzhihao.top/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>React 即时通信 ChatUI 侧导航</title>
    <link href="http://blog.zhuangzhihao.top/ChatUI%E4%BE%A7%E5%AF%BC%E8%88%AA/"/>
    <id>http://blog.zhuangzhihao.top/ChatUI%E4%BE%A7%E5%AF%BC%E8%88%AA/</id>
    <published>2022-09-28T16:00:00.000Z</published>
    <updated>2022-09-30T09:53:51.434Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>React 即时通信 UI 实战第四章。React 即时通信 UI 实战为<a href="https://www.bilibili.com/video/BV1PK4y1b7bY?p=2&amp;spm_id_from=pageDriver&amp;vd_source=0965c74096f788f105780e5d5d0e9ebf">峰华前端工程师</a>推出的 React 实战课程，以聊天（即时通信）为原型，构建了一整套的 UI 组件库，课程重点在于 UI 组件的分析和实现，力求打造自用组件库。本章包括侧导航中的头像、菜单项等组件。</p></blockquote><span id="more"></span><h3 id="一、头像组件开发"><a href="#一、头像组件开发" class="headerlink" title="一、头像组件开发"></a>一、头像组件开发</h3><p>在 <code>src</code> 目录下新建 <code>components/Avatar</code> 两级文件夹，用于存放组件的定义。文件夹中一般有 <code>index.js</code>（组件主体代码）、<code>style.js</code>（Styled-components 样式组件代码）、<code>组件名.stories.js</code>（组件 stories）、<code>hook.js</code>（自定义的 hooks）文件。</p><p>在 <code>index.js</code> 文件中快捷输入 <code>rfcp + tab</code>（reactFunctionalComponentWithPropTypes）导入依赖、创建一个函数式组件、引入propTypes：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&#x27;prop-types&#x27;</span></span><br><span class="line"><span class="keyword">import</span> face1 <span class="keyword">from</span> <span class="string">&quot;../../assets/images/face-male-1.jpg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledAvatar</span>, &#123; <span class="title class_">StatusIcon</span>, <span class="title class_">AvatarClip</span>, <span class="title class_">AvatarImage</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Avatar</span>(<span class="params">&#123; src, size = <span class="string">&quot;48px&quot;</span>, status, statusIconSize = <span class="string">&quot;8px&quot;</span>, ...rest &#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">StyledAvatar</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">            &#123;status &amp;&amp; <span class="tag">&lt;<span class="name">StatusIcon</span> <span class="attr">status</span>=<span class="string">&#123;status&#125;</span> <span class="attr">size</span>=<span class="string">&#123;statusIconSize&#125;</span>&gt;</span><span class="tag">&lt;/<span class="name">StatusIcon</span>&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">AvatarClip</span> <span class="attr">size</span>=<span class="string">&#123;size&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">AvatarImage</span> <span class="attr">src</span>=<span class="string">&#123;src&#125;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">AvatarClip</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">StyledAvatar</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Avatar</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">    <span class="attr">src</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>.<span class="property">isRequired</span>,</span><br><span class="line">    <span class="attr">size</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">    <span class="attr">status</span>: <span class="title class_">PropTypes</span>.<span class="title function_">oneOf</span>([<span class="string">&quot;online&quot;</span>, <span class="string">&quot;offline&quot;</span>]),</span><br><span class="line">    <span class="attr">statusIconSize</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Avatar</span>;</span><br></pre></td></tr></table></figure><p>在 <code>Avatar</code> 目录下新建 <code>avatar.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Avatar</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> face1 <span class="keyword">from</span> <span class="string">&quot;../../assets/images/face-male-1.jpg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> face2 <span class="keyword">from</span> <span class="string">&quot;../../assets/images/face-male-2.jpg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> face3 <span class="keyword">from</span> <span class="string">&quot;../../assets/images/face-male-3.jpg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> face4 <span class="keyword">from</span> <span class="string">&quot;../../assets/images/face-male-4.jpg&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;../../story.css&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="attr">title</span>: <span class="string">&quot;UI 组件/Avatar&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">Avatar</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">Avatar</span> <span class="attr">src</span>=<span class="string">&#123;face1&#125;</span> /&gt;</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Sizes</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;row-elements&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Avatar</span> <span class="attr">src</span>=<span class="string">&#123;face1&#125;</span> <span class="attr">size</span>=<span class="string">&quot;48px&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Avatar</span> <span class="attr">src</span>=<span class="string">&#123;face2&#125;</span> <span class="attr">size</span>=<span class="string">&quot;56px&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Avatar</span> <span class="attr">src</span>=<span class="string">&#123;face3&#125;</span> <span class="attr">size</span>=<span class="string">&quot;64px&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Avatar</span> <span class="attr">src</span>=<span class="string">&#123;face4&#125;</span> <span class="attr">size</span>=<span class="string">&quot;72px&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">WithStatus</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;row-elements&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Avatar</span> <span class="attr">src</span>=<span class="string">&#123;face1&#125;</span> <span class="attr">status</span>=<span class="string">&quot;online&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Avatar</span> <span class="attr">src</span>=<span class="string">&#123;face2&#125;</span> <span class="attr">status</span>=<span class="string">&quot;offline&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Avatar</span> <span class="attr">src</span>=<span class="string">&#123;face4&#125;</span> <span class="attr">status</span>=<span class="string">&quot;offline&quot;</span> <span class="attr">size</span>=<span class="string">&quot;72px&quot;</span> <span class="attr">statusIconSize</span>=<span class="string">&quot;12px&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在 <code>Avatar</code> 目录下新建 <code>style.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled, &#123; css &#125; <span class="keyword">from</span> <span class="string">&#x27;styled-components&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">circleMixinFunc</span> = (<span class="params">color, size = <span class="string">&quot;8px&quot;</span></span>) =&gt; css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: </span><span class="subst">$&#123;size&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: </span><span class="subst">$&#123;size&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: </span><span class="subst">$&#123;color&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledAvatar</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">    position: relative;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StatusIcon</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">    position: absolute;</span></span><br><span class="line"><span class="string">    left: 2px;</span></span><br><span class="line"><span class="string">    top: 4px;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &amp;::before &#123;</span></span><br><span class="line"><span class="string">        <span class="subst">$&#123;(&#123; size &#125;) =&gt; circleMixinFunc(<span class="string">&quot;white&quot;</span>, size)&#125;</span></span></span><br><span class="line"><span class="string">        transform: scale(2);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &amp;::after &#123;</span></span><br><span class="line"><span class="string">        <span class="subst">$&#123;(&#123; theme, status, size &#125;) =&gt; &#123;</span></span></span><br><span class="line"><span class="subst"><span class="string">        <span class="keyword">if</span> (status === <span class="string">&quot;online&quot;</span>) &#123;</span></span></span><br><span class="line"><span class="subst"><span class="string">            <span class="keyword">return</span> circleMixinFunc(theme.green, size);</span></span></span><br><span class="line"><span class="subst"><span class="string">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (status === <span class="string">&quot;offline&quot;</span>) &#123;</span></span></span><br><span class="line"><span class="subst"><span class="string">            <span class="keyword">return</span> circleMixinFunc(theme.gray, size);</span></span></span><br><span class="line"><span class="subst"><span class="string">        &#125;</span></span></span><br><span class="line"><span class="subst"><span class="string">    &#125;&#125;</span></span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">AvatarClip</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">    width: <span class="subst">$&#123;(&#123; size &#125;) =&gt; size&#125;</span>;</span></span><br><span class="line"><span class="string">    height: <span class="subst">$&#123;(&#123; size &#125;) =&gt; size&#125;</span>;</span></span><br><span class="line"><span class="string">    border-radius: 50%;</span></span><br><span class="line"><span class="string">    overflow: hidden;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">AvatarImage</span> = styled.<span class="property">img</span><span class="string">`</span></span><br><span class="line"><span class="string">    width: 100%;</span></span><br><span class="line"><span class="string">    height: 100%;</span></span><br><span class="line"><span class="string">    object-fit: cover;</span></span><br><span class="line"><span class="string">    object-position: center;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledAvatar</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">StatusIcon</span>, <span class="title class_">AvatarClip</span>, <span class="title class_">AvatarImage</span> &#125;;</span><br></pre></td></tr></table></figure><h3 id="二、jsconfig-json-文件"><a href="#二、jsconfig-json-文件" class="headerlink" title="二、jsconfig.json 文件"></a>二、jsconfig.json 文件</h3><p>在 ChatUI 项目根目录下创建 <code>jsconfig.json</code> 项目配置文件：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;compilerOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;baseUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;src&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;include&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;src&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;exclude&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;node_modules&quot;</span><span class="punctuation">,</span> <span class="string">&quot;**/node_modules/*&quot;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>此时，在 <code>avatar.stories.js</code> 文件中导入可用相对路径导入：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> face1 <span class="keyword">from</span> <span class="string">&quot;assets/images/face-male-1.jpg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> face2 <span class="keyword">from</span> <span class="string">&quot;assets/images/face-male-2.jpg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> face3 <span class="keyword">from</span> <span class="string">&quot;assets/images/face-male-3.jpg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> face4 <span class="keyword">from</span> <span class="string">&quot;assets/images/face-male-4.jpg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;story.css&quot;</span></span><br></pre></td></tr></table></figure><h3 id="三、Hygen-模版生成器配置"><a href="#三、Hygen-模版生成器配置" class="headerlink" title="三、Hygen 模版生成器配置"></a>三、Hygen 模版生成器配置</h3><p>安装和初始化 Hygen：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm i -g hygen</span><br><span class="line">hygen init self   <span class="comment">#在项目目录下初始化</span></span><br></pre></td></tr></table></figure><p>生成新 component 模版：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen generator new component</span><br></pre></td></tr></table></figure><p>配置模版文件，将 <code>_templates/component/new</code> 文件夹下的 <code>hello.ejs.t</code> 文件重命名为 <code>index.ejs.t</code>，并修改模版内容：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="attr">to</span>: src/components/&lt;%= name %&gt;/index.<span class="property">js</span></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Styled</span>&lt;%= name %&gt; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> &lt;%= name %&gt;(&#123;children,...rest&#125;) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;<span class="title class_">Styled</span>&lt;%= name %&gt; &#123;...rest&#125;&gt;</span><br><span class="line">      &#123;children&#125;</span><br><span class="line">    &lt;/<span class="title class_">Styled</span>&lt;%= name %&gt;&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;%= name %&gt;.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &lt;%= name %&gt;;</span><br></pre></td></tr></table></figure><p>同目录下新建 style.ejs.t 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="attr">to</span>: src/components/&lt;%= name %&gt;/style.<span class="property">js</span></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Styled</span>&lt;%= name %&gt; = styled.<span class="property">div</span><span class="string">``</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Styled</span>&lt;%= name %&gt;;</span><br></pre></td></tr></table></figure><p>和 stories.ejs.t 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="attr">to</span>: src/components/&lt;%= name %&gt;/&lt;%= h.<span class="property">changeCase</span>.<span class="title function_">lcFirst</span>(name) %&gt;.<span class="property">stories</span>.<span class="property">js</span></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &lt;%= name %&gt; <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;&lt;%= name %&gt;&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: &lt;%= name %&gt;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; &lt;&lt;%= name %&gt;&gt;默认&lt;/&lt;%= name %&gt;&gt;;</span><br></pre></td></tr></table></figure><p>为下一部分组件生成模版：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hygen component new Icon</span><br><span class="line"><span class="comment"># Loaded templates: _templates</span></span><br><span class="line"><span class="comment">#       added: src/components/Icon/index.js</span></span><br><span class="line"><span class="comment">#       added: src/components/Icon/icon.stories.js</span></span><br><span class="line"><span class="comment">#       added: src/components/Icon/style.js</span></span><br></pre></td></tr></table></figure><h3 id="四、Icon-组件开发"><a href="#四、Icon-组件开发" class="headerlink" title="四、Icon 组件开发"></a>四、Icon 组件开发</h3><p>在 <code>index.js</code> 文件中编写组件的结构代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledIcon</span> <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Icon</span>(<span class="params">&#123; icon: IconComponent, width = <span class="number">24</span>, height = <span class="number">24</span>, color, opacity, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledIcon</span> <span class="attr">color</span>=<span class="string">&#123;color&#125;</span> <span class="attr">opacity</span>=<span class="string">&#123;opacity&#125;</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;IconComponent &amp;&amp; <span class="tag">&lt;<span class="name">IconComponent</span> <span class="attr">width</span>=<span class="string">&#123;width&#125;</span> <span class="attr">height</span>=<span class="string">&#123;height&#125;</span> /&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledIcon</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Icon</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">icon</span>: <span class="title class_">PropTypes</span>.<span class="property">element</span>,</span><br><span class="line">  <span class="attr">width</span>: <span class="title class_">PropTypes</span>.<span class="title function_">oneOfType</span>([<span class="title class_">PropTypes</span>.<span class="property">number</span>, <span class="title class_">PropTypes</span>.<span class="property">string</span>]),</span><br><span class="line">  <span class="attr">height</span>: <span class="title class_">PropTypes</span>.<span class="title function_">oneOfType</span>([<span class="title class_">PropTypes</span>.<span class="property">number</span>, <span class="title class_">PropTypes</span>.<span class="property">string</span>]),</span><br><span class="line">  <span class="attr">color</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">  <span class="attr">opacity</span>: <span class="title class_">PropTypes</span>.<span class="property">number</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Icon</span>;</span><br></pre></td></tr></table></figure><p>修改 <code>icon.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">SmileIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/smile.svg&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/Icon&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Icon</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Icon</span> <span class="attr">icon</span>=<span class="string">&#123;SmileIcon&#125;</span> /&gt;</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">CustomColor</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">Icon</span> <span class="attr">icon</span>=<span class="string">&#123;SmileIcon&#125;</span> <span class="attr">color</span>=<span class="string">&quot;#cccccc&quot;</span> /&gt;</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">CustomSize</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">Icon</span> <span class="attr">icon</span>=<span class="string">&#123;SmileIcon&#125;</span> <span class="attr">width</span>=<span class="string">&#123;48&#125;</span> <span class="attr">height</span>=<span class="string">&#123;48&#125;</span> <span class="attr">color</span>=<span class="string">&quot;#cccccc&quot;</span> /&gt;</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>以及同目录下 <code>style.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledIcon</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: inline-flex;</span></span><br><span class="line"><span class="string">  align-items: center;</span></span><br><span class="line"><span class="string">  justify-content: center;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  svg,</span></span><br><span class="line"><span class="string">  svg * &#123;</span></span><br><span class="line"><span class="string">    <span class="subst">$&#123;(&#123; color &#125;) =&gt; (color ? <span class="string">`fill: <span class="subst">$&#123;color&#125;</span>`</span> : <span class="string">&quot;&quot;</span>)&#125;</span>;</span></span><br><span class="line"><span class="string">    <span class="subst">$&#123;(&#123; opacity &#125;) =&gt; (opacity ? <span class="string">`opacity: <span class="subst">$&#123;opacity&#125;</span>`</span> : <span class="string">&quot;&quot;</span>)&#125;</span></span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledIcon</span>;</span><br></pre></td></tr></table></figure><p>安装 FontAwesome 图标库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yarn add @fortawesome/react-fontawesome</span><br><span class="line">yarn add @fortawesome/fontawesome-svg-core</span><br><span class="line">yarn add @fortawesome/free-brands-svg-icons</span><br><span class="line">yarn add @fortawesome/free-regular-svg-icons</span><br><span class="line">yarn add @fortawesome/free-solid-svg-icons</span><br></pre></td></tr></table></figure><p>在 <code>icon.stories.js</code> 文件中添加 <code>FontAwesome</code> 测试范例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  faCommentDots,</span><br><span class="line">  faFolder,</span><br><span class="line">  faStickyNote,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-solid-svg-icons&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FontAwesomeIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/react-fontawesome&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">FontAwesome</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faCommentDots&#125;</span> /&gt;</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">FontAwesomeColor</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faCommentDots&#125;</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">color:</span> &quot;#<span class="attr">cccccc</span>&quot; &#125;&#125; /&gt;</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">FontAwesomeSizes</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faFolder&#125;</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">fontSize:</span> &quot;<span class="attr">24px</span>&quot; &#125;&#125; /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faStickyNote&#125;</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">fontSize:</span> &quot;<span class="attr">36px</span>&quot; &#125;&#125; /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faCommentDots&#125;</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">fontSize:</span> &quot;<span class="attr">48px</span>&quot; &#125;&#125; /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="五、徽章组件"><a href="#五、徽章组件" class="headerlink" title="五、徽章组件"></a>五、徽章组件</h3><p>徽章（Badge）组件，即 Icon 组件上的小红点，用来实现提示用户有未读消息的功能，一种组件的不同形态称为变体（Variant），照例使用 Hygen 生成一个名为 Badge 的 component 组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new Badge</span><br></pre></td></tr></table></figure><p>在 <code>index.js</code> 中修改组件结构：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledBadge</span>, &#123; <span class="title class_">Count</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Badge</span>(<span class="params">&#123; children, show = <span class="literal">false</span>, count = <span class="number">0</span>, showZero = <span class="literal">false</span>, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledBadge</span> <span class="attr">variant</span>=<span class="string">&#123;children</span> ? &quot;<span class="attr">dot</span>&quot; <span class="attr">:</span> &quot;<span class="attr">default</span>&quot;&#125; <span class="attr">show</span>=<span class="string">&#123;show&#125;</span> <span class="attr">count</span>=<span class="string">&#123;count&#125;</span> <span class="attr">showZero</span>=<span class="string">&#123;showZero&#125;</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;children || <span class="tag">&lt;<span class="name">Count</span>&gt;</span>&#123;count&#125;<span class="tag">&lt;/<span class="name">Count</span>&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledBadge</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Badge</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">show</span>: <span class="title class_">PropTypes</span>.<span class="property">bool</span>,</span><br><span class="line">  <span class="attr">count</span>: <span class="title class_">PropTypes</span>.<span class="property">number</span>,</span><br><span class="line">  <span class="attr">showZero</span>: <span class="title class_">PropTypes</span>.<span class="property">bool</span>,</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Badge</span>;</span><br></pre></td></tr></table></figure><p>可以把圆形样式设为通用的样式 Mixin 复用，在 <code>src</code> 下新建 <code>utils</code> 文件夹，再在二级目录下新建 <code>mixins.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; css &#125; <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">circle</span> = (<span class="params">color, size = <span class="string">&quot;8px&quot;</span></span>) =&gt; css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: </span><span class="subst">$&#123;size&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: </span><span class="subst">$&#123;size&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: </span><span class="subst">$&#123;color&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">`</span>;</span><br></pre></td></tr></table></figure><p>修改 <code>src/components/Avatar/style.js</code> 文件中的 <code>circleMixinFunc</code> 函数：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; circle &#125; <span class="keyword">from</span> <span class="string">&#x27;utils/mixins&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">circleMixinFunc</span> = (<span class="params">color, size = <span class="string">&quot;8px&quot;</span></span>) =&gt; css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">    </span><span class="subst">$&#123;circle(color, size)&#125;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">`</span>;</span><br></pre></td></tr></table></figure><p>再在 <code>Badge/style.js</code> 中编写徽章组件样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled, &#123; css &#125; <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; circle &#125; <span class="keyword">from</span> <span class="string">&quot;utils/mixins&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> variants = &#123;</span><br><span class="line">  <span class="attr">dot</span>: css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">    &amp;<span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: </span><span class="subst">$&#123;(&#123; show &#125;) =&gt; (show ? <span class="string">&quot;block&quot;</span> : <span class="string">&quot;none&quot;</span>)&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-css">      </span><span class="subst">$&#123;(&#123; theme &#125;) =&gt; circle(theme.red, <span class="string">&quot;6px&quot;</span>)&#125;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  `</span>,</span><br><span class="line">  <span class="attr">default</span>: css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="subst">$&#123;(&#123; theme &#125;) =&gt; circle(theme.red, <span class="string">&quot;26px&quot;</span>)&#125;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">18px</span> <span class="number">40px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.04</span>),</span></span><br><span class="line"><span class="language-css">      <span class="number">0px</span> <span class="number">6px</span> <span class="number">12px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.08</span>);</span></span><br><span class="line"><span class="language-css">    </span><span class="subst">$&#123;(&#123; showZero, count &#125;) =&gt; !showZero &amp;&amp; count === <span class="number">0</span> &amp;&amp; <span class="string">`visibility: hidden`</span>&#125;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  `</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Count</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  font-size: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.normal&#125;</span>;</span></span><br><span class="line"><span class="string">  color: white;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledBadge</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: inline-block;</span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;(&#123; variant &#125;) =&gt; variants[variant]&#125;</span></span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledBadge</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">Count</span> &#125;;</span><br></pre></td></tr></table></figure><p>在全局目录下的 style.css 文件中添加：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">62.5%</span>;    <span class="comment">/* 使得 1rem = 10px */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>并在全局目录下的 <code>style.css</code> 文件中导入：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@import</span> url(<span class="string">&quot;./index.css&quot;</span>);</span><br></pre></td></tr></table></figure><p>最后更改 <code>badge.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Badge</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FontAwesomeIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/react-fontawesome&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; faCommentDots &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-solid-svg-icons&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/Badge&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Badge</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Badge</span> <span class="attr">count</span>=<span class="string">&#123;5&#125;</span> /&gt;</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">DotVariant</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Badge</span> <span class="attr">show</span> <span class="attr">variant</span>=<span class="string">&quot;dot&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faCommentDots&#125;</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">fontSize:</span> &quot;<span class="attr">24px</span>&quot; &#125;&#125; /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Badge</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="六、菜单项组件"><a href="#六、菜单项组件" class="headerlink" title="六、菜单项组件"></a>六、菜单项组件</h3><p>新建侧导航组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new NavBar</span><br></pre></td></tr></table></figure><p>在 <code>index.js</code> 文件中编写组件结构：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledNavBar</span>, &#123; <span class="title class_">StyledMenuItem</span>, <span class="title class_">MenuIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Badge</span> <span class="keyword">from</span> <span class="string">&quot;components/Badge&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">NavBar</span>(<span class="params">&#123; children, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledNavBar</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledNavBar</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">MenuItem</span>(<span class="params">&#123; icon, active, showBadge, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledMenuItem</span> <span class="attr">active</span>=<span class="string">&#123;active&#125;</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Badge</span> <span class="attr">show</span>=<span class="string">&#123;showBadge&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">MenuIcon</span> <span class="attr">active</span>=<span class="string">&#123;active&#125;</span> <span class="attr">icon</span>=<span class="string">&#123;icon&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Badge</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledMenuItem</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">NavBar</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">NavBar</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">MenuItem</span> &#125;;</span><br></pre></td></tr></table></figure><p>以及 <code>navBar.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">NavBar</span>, &#123; <span class="title class_">MenuItem</span> &#125; <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; faCommentDots &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-solid-svg-icons&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;页面组件/NavBar&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">NavBar</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">NavBar</span>&gt;</span>默认<span class="tag">&lt;/<span class="name">NavBar</span>&gt;</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Menu</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">MenuItem</span> <span class="attr">showBadge</span> <span class="attr">active</span> <span class="attr">icon</span>=<span class="string">&#123;faCommentDots&#125;</span> /&gt;</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>高亮显示条需要定义为 <code>Mixin</code>，打开 <code>utils/mixins.js</code> 文件添加 <code>activeBar</code> 样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">activeBar</span> = (<span class="params">&#123; barWidth = <span class="string">&quot;8px&quot;</span>, shadowWidth = <span class="string">&quot;20px&quot;</span> &#125; = &#123;&#125;</span>) =&gt;</span><br><span class="line">  css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">    &amp;<span class="selector-pseudo">::before</span>, &amp;<span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">transition</span>: <span class="number">0.4s</span> <span class="built_in">cubic-bezier</span>(<span class="number">0.16</span>, <span class="number">1</span>, <span class="number">0.3</span>, <span class="number">1</span>);</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    &amp;<span class="selector-pseudo">::before</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: </span><span class="subst">$&#123;barWidth&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(</span></span><br><span class="line"><span class="language-css">        <span class="number">180deg</span>,</span></span><br><span class="line"><span class="language-css">        <span class="built_in">rgba</span>(<span class="number">142</span>, <span class="number">197</span>, <span class="number">242</span>, <span class="number">1</span>) <span class="number">0%</span>,</span></span><br><span class="line"><span class="language-css">        <span class="built_in">rgba</span>(<span class="number">79</span>, <span class="number">157</span>, <span class="number">222</span>, <span class="number">1</span>) <span class="number">100%</span></span></span><br><span class="line"><span class="language-css">      );</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    &amp;<span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: </span><span class="subst">$&#123;shadowWidth&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(</span></span><br><span class="line"><span class="language-css">        <span class="number">270deg</span>,</span></span><br><span class="line"><span class="language-css">        <span class="built_in">rgba</span>(<span class="number">41</span>, <span class="number">47</span>, <span class="number">76</span>, <span class="number">1</span>) <span class="number">0%</span>,</span></span><br><span class="line"><span class="language-css">        <span class="built_in">rgba</span>(<span class="number">142</span>, <span class="number">197</span>, <span class="number">242</span>, <span class="number">1</span>) <span class="number">100%</span></span></span><br><span class="line"><span class="language-css">      );</span></span><br><span class="line"><span class="language-css">      <span class="attribute">opacity</span>: <span class="number">0.6</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  `</span>;</span><br></pre></td></tr></table></figure><p>修改组件样式 <code>style.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FontAwesomeIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/react-fontawesome&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; activeBar &#125; <span class="keyword">from</span> <span class="string">&quot;utils/mixins&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledMenuItem</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">    &amp; &gt; a &#123;</span></span><br><span class="line"><span class="string">        width: 100%;</span></span><br><span class="line"><span class="string">        height: 74px;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        display: flex;</span></span><br><span class="line"><span class="string">        align-items: center;</span></span><br><span class="line"><span class="string">        justify-content: center;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        <span class="subst">$&#123;activeBar()&#125;</span>;</span></span><br><span class="line"><span class="string">        <span class="subst">$&#123;(&#123; active &#125;) =&gt; (active ? <span class="string">&quot;&quot;</span> : <span class="string">`&amp;::before, &amp;::after &#123;height: 0&#125;`</span>)&#125;</span>;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">MenuIcon</span> = <span class="title function_">styled</span>(<span class="title class_">FontAwesomeIcon</span>)<span class="string">`</span></span><br><span class="line"><span class="string">    color: white;</span></span><br><span class="line"><span class="string">    font-size: 24px;</span></span><br><span class="line"><span class="string">    opacity: <span class="subst">$&#123;(&#123; active &#125;) =&gt; (active ? <span class="number">1</span> : <span class="number">0.3</span>)&#125;</span>;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledNavBar</span> = styled.<span class="property">nav</span><span class="string">``</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledNavBar</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">MenuIcon</span>, <span class="title class_">StyledMenuItem</span> &#125;;</span><br></pre></td></tr></table></figure><p>使用 <code>Styled-component macros</code>，在 <code>.storybook</code> 目录下新建 <code>.babelrc</code> 文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;plugins&quot;: [&quot;macros&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>并修改 <code>navBar.stories.js</code> 文件为：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">NavBar</span>, &#123; <span class="title class_">MenuItem</span> &#125; <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; faCommentDots &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-solid-svg-icons&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;styled-components/macro&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;页面组件/NavBar&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">NavBar</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">NavBar</span> /&gt;</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Menu</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">css</span>=<span class="string">&#123;</span>`</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">background-color:</span> $&#123;(&#123; <span class="attr">theme</span> &#125;) =&gt;</span> theme.darkPurple&#125;;</span></span><br><span class="line"><span class="language-xml">        width: 100px;</span></span><br><span class="line"><span class="language-xml">      `&#125;</span></span><br><span class="line"><span class="language-xml">    &gt;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">MenuItem</span> <span class="attr">showBadge</span> <span class="attr">active</span> <span class="attr">icon</span>=<span class="string">&#123;faCommentDots&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="七、侧导航组件"><a href="#七、侧导航组件" class="headerlink" title="七、侧导航组件"></a>七、侧导航组件</h3><p>侧导航组件包括头像和菜单项，使用 CSS Grid 布局，修改 <code>components/NavBar</code> 下的 <code>index.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledNavBar</span>, &#123; <span class="title class_">StyledMenuItem</span>, <span class="title class_">MenuIcon</span>, <span class="title class_">MenuItems</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Badge</span> <span class="keyword">from</span> <span class="string">&quot;components/Badge&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Avatar</span> <span class="keyword">from</span> <span class="string">&quot;components/Avatar&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> profileImage <span class="keyword">from</span> <span class="string">&quot;assets/images/face-male-1.jpg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; faCommentDots, faUsers, faFolder, faStickyNote, faEllipsisH, faCog, &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-solid-svg-icons&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">NavBar</span>(<span class="params">&#123; ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledNavBar</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Avatar</span> <span class="attr">src</span>=<span class="string">&#123;profileImage&#125;</span> <span class="attr">status</span>=<span class="string">&quot;online&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">MenuItems</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">MenuItem</span> <span class="attr">showBadge</span> <span class="attr">active</span> <span class="attr">icon</span>=<span class="string">&#123;faCommentDots&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">MenuItem</span> <span class="attr">icon</span>=<span class="string">&#123;faUsers&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">MenuItem</span> <span class="attr">icon</span>=<span class="string">&#123;faFolder&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">MenuItem</span> <span class="attr">icon</span>=<span class="string">&#123;faStickyNote&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">MenuItem</span> <span class="attr">icon</span>=<span class="string">&#123;faEllipsisH&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">MenuItem</span> <span class="attr">icon</span>=<span class="string">&#123;faCog&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">MenuItems</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledNavBar</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">MenuItem</span>(<span class="params">&#123; icon, active, showBadge, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledMenuItem</span> <span class="attr">active</span>=<span class="string">&#123;active&#125;</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Badge</span> <span class="attr">show</span>=<span class="string">&#123;showBadge&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">MenuIcon</span> <span class="attr">active</span>=<span class="string">&#123;active&#125;</span> <span class="attr">icon</span>=<span class="string">&#123;icon&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Badge</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledMenuItem</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">NavBar</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">NavBar</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">MenuItem</span> &#125;;</span><br></pre></td></tr></table></figure><p>再在同目录下 <code>style.js</code> 中编写样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FontAwesomeIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/react-fontawesome&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; activeBar &#125; <span class="keyword">from</span> <span class="string">&quot;utils/mixins&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledMenuItem</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">    &amp; &gt; a &#123;</span></span><br><span class="line"><span class="string">        width: 100%;</span></span><br><span class="line"><span class="string">        height: 74px;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        display: flex;</span></span><br><span class="line"><span class="string">        align-items: center;</span></span><br><span class="line"><span class="string">        justify-content: center;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        <span class="subst">$&#123;activeBar()&#125;</span>;</span></span><br><span class="line"><span class="string">        <span class="subst">$&#123;(&#123; active &#125;) =&gt; (active ? <span class="string">&quot;&quot;</span> : <span class="string">`&amp;::before, &amp;::after &#123;height: 0&#125;`</span>)&#125;</span>;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">MenuIcon</span> = <span class="title function_">styled</span>(<span class="title class_">FontAwesomeIcon</span>)<span class="string">`</span></span><br><span class="line"><span class="string">    color: white;</span></span><br><span class="line"><span class="string">    font-size: 24px;</span></span><br><span class="line"><span class="string">    opacity: <span class="subst">$&#123;(&#123; active &#125;) =&gt; (active ? <span class="number">1</span> : <span class="number">0.3</span>)&#125;</span>;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledNavBar</span> = styled.<span class="property">nav</span><span class="string">`</span></span><br><span class="line"><span class="string">    display: grid;</span></span><br><span class="line"><span class="string">    grid-template-rows: 1fr 4fr;</span></span><br><span class="line"><span class="string">    width: 100px;</span></span><br><span class="line"><span class="string">    height: 100vh;</span></span><br><span class="line"><span class="string">    background-color: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.darkPurple&#125;</span>;</span></span><br><span class="line"><span class="string">    padding: 30px 0;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">MenuItems</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: grid;</span></span><br><span class="line"><span class="string">  grid-template-rows: repeat(5, minmax(auto, 88px)) 1fr;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledNavBar</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">MenuIcon</span>, <span class="title class_">StyledMenuItem</span>, <span class="title class_">MenuItems</span> &#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;React 即时通信 UI 实战第四章。React 即时通信 UI 实战为&lt;a href=&quot;https://www.bilibili.com/video/BV1PK4y1b7bY?p=2&amp;amp;spm_id_from=pageDriver&amp;amp;vd_source=0965c74096f788f105780e5d5d0e9ebf&quot;&gt;峰华前端工程师&lt;/a&gt;推出的 React 实战课程，以聊天（即时通信）为原型，构建了一整套的 UI 组件库，课程重点在于 UI 组件的分析和实现，力求打造自用组件库。本章包括侧导航中的头像、菜单项等组件。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Web前端" scheme="http://blog.zhuangzhihao.top/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="React" scheme="http://blog.zhuangzhihao.top/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>创建 React 即时通信 ChatUI 工程</title>
    <link href="http://blog.zhuangzhihao.top/%E5%88%9B%E5%BB%BAChatUI%E5%B7%A5%E7%A8%8B/"/>
    <id>http://blog.zhuangzhihao.top/%E5%88%9B%E5%BB%BAChatUI%E5%B7%A5%E7%A8%8B/</id>
    <published>2022-09-20T16:00:00.000Z</published>
    <updated>2022-09-30T09:27:39.450Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>React 即时通信 UI 实战第二章。React 即时通信 UI 实战为<a href="https://www.bilibili.com/video/BV1PK4y1b7bY?p=2&amp;spm_id_from=pageDriver&amp;vd_source=0965c74096f788f105780e5d5d0e9ebf">峰华前端工程师</a>推出的 React 实战课程，以聊天（即时通信）为原型，构建了一整套的 UI 组件库，课程重点在于 UI 组件的分析和实现，力求打造自用组件库。本章包括创建 React 工程，快速回顾 React 开发要点以及环境配置。</p></blockquote><span id="more"></span><h3 id="一、创建-React-工程"><a href="#一、创建-React-工程" class="headerlink" title="一、创建 React 工程"></a>一、创建 React 工程</h3><p>安装 Yarn：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -o- -L https://yarnpkg.com/install.sh | bash</span><br><span class="line"><span class="comment"># yarn -v</span></span><br></pre></td></tr></table></figure><p>使用 <a href="https://create-react-app.dev/">Create React App</a> 工具，让你仅通过一行命令，即可构建现代化的 Web 应用。例如我们需要创建名为 chat-ui 的项目，运行如下命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yarn create react-app chat-ui</span><br><span class="line"><span class="comment"># 或者使用 npx create-react-app chat-ui</span></span><br></pre></td></tr></table></figure><p><code>src</code> 目录下存放所有 React 源代码。<code>src/index.js</code> 是程序的入口文件。</p><h3 id="二、React-快速回顾"><a href="#二、React-快速回顾" class="headerlink" title="二、React 快速回顾"></a>二、React 快速回顾</h3><p><a href="https://reactjs.org/">React</a> 是一个声明式，高效且灵活的用于构建用户界面 UI 的 JavaScript 库。使用 React 可以将一些简短、独立的代码片段组合成复杂的 UI 界面，这些代码片段被称作“组件”，而组件是通过状态来更新的。</p><h4 id="创建一个组件"><a href="#创建一个组件" class="headerlink" title="创建一个组件"></a>创建一个组件</h4><p>创建一个 <code>Button.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Button</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Button</span>;</span><br></pre></td></tr></table></figure><p>在 <code>App.js</code> 中导入、返回：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./App.css&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Button</span> <span class="keyword">from</span> <span class="string">&#x27;./Button.js&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">Button</span> /&gt;</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">App</span>;</span><br></pre></td></tr></table></figure><h4 id="JSX-与-HTML"><a href="#JSX-与-HTML" class="headerlink" title="JSX 与 HTML"></a>JSX 与 HTML</h4><p>JSX 中所有属性变为驼峰命名法，例如 <code>onClick</code>、<code>className</code>、<code>style=&#123;&#123;backgroundColor: "red"&#125;&#125;</code>。</p><p>在 JSX 语法中，你可以在大括号内放置任何有效的 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#Expressions">JavaScript 表达式</a>。例如，<code>2 + 2</code>，<code>user.firstName</code> 或 <code>formatName(user)</code> 都是有效的 JavaScript 表达式，例如调用 JavaScript 函数 <code>formatName(user)</code> 的结果，并将结果嵌入到 <code>&lt;h1&gt;</code> 元素中：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">formatName</span>(<span class="params">user</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> user.<span class="property">firstName</span> + <span class="string">&#x27; &#x27;</span> + user.<span class="property">lastName</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> user = &#123;</span><br><span class="line">  <span class="attr">firstName</span>: <span class="string">&#x27;Harper&#x27;</span>,</span><br><span class="line">  <span class="attr">lastName</span>: <span class="string">&#x27;Perez&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> element = (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    Hello, &#123;formatName(user)&#125;!  <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">render</span>(</span><br><span class="line">  element,</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>注意：在 React 18 中，<code>render</code> 函数已被 <code>createRoot</code> 函数所取代。具体请参阅 <a href="https://zh-hans.reactjs.org/docs/react-dom-client.html#createroot">createRoot</a> 以了解更多。</p><h4 id="属性-Props"><a href="#属性-Props" class="headerlink" title="属性 Props"></a>属性 Props</h4><p>React 组件可以通过属性来实现复用。每个组件函数都接收一个 Props 对象：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Button</span>(<span class="params">props</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">button</span>&gt;</span>&#123;props.label&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span>   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也可以通过 ES6 将 label 解构出来：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Button</span>(<span class="params">&#123; label, children &#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">button</span>&gt;</span>&#123;label&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 <code>App.js</code> 中导入、返回：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Button</span> <span class="attr">label</span>=<span class="string">&quot;按钮&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Button</span> <span class="attr">label</span>=<span class="string">&quot;点我&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="事件处理"><a href="#事件处理" class="headerlink" title="事件处理"></a>事件处理</h4><p>给组件注册事件监听：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Button</span>(<span class="params">&#123; onClick, label, children &#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">onClick</span>=<span class="string">&#123;onClick&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">button</span>&gt;</span>&#123;label&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在父级菜单设置传入事件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleButton1Click</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;点击按钮1事件&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleButton2Click</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;点击按钮2事件&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Button</span> <span class="attr">label</span>=<span class="string">&quot;按钮&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;handleButton1Click&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Button</span> <span class="attr">label</span>=<span class="string">&quot;点我&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;handleButton2Click&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="状态-State"><a href="#状态-State" class="headerlink" title="状态 State"></a>状态 State</h4><p>props 是静态的，在组件渲染后修改 props 的值并不会引起组件的更新。如果想点击后改变字体颜色，需要定义 State 属性：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useState &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./App.css&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Button</span> <span class="keyword">from</span> <span class="string">&#x27;./Button.js&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> [color, setColor] = <span class="title function_">useState</span>(<span class="string">&quot;#ff0000&quot;</span>);    <span class="comment">// 解构赋值</span></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleButton1Click</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">setColor</span>(<span class="string">&quot;#00ff00&quot;</span>);</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;点击按钮1事件&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleButton2Click</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;点击按钮2事件&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Button</span> <span class="attr">label</span>=<span class="string">&quot;按钮&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;handleButton1Click&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">color</span> &#125;&#125;&gt;</span>这是一段文字<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Button</span> <span class="attr">label</span>=<span class="string">&quot;点我&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;handleButton2Click&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="自定义-Hooks"><a href="#自定义-Hooks" class="headerlink" title="自定义 Hooks"></a>自定义 Hooks</h4><p>Hooks 是 React 的一项新功能提案，可让您在不编写类的情况下使用 state 状态 和其他 React 功能。</p><p>React 推荐 Hooks 均以 use 开头，新建一个 useColorSwitch.js 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useState &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">useColorSwtich</span>(<span class="params">color1 = <span class="string">&quot;#ff0000&quot;</span>, color2 = <span class="string">&quot;#00ff00&quot;</span></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> [color, setColor] = <span class="title function_">useState</span>(color1);</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">handleButtonClick</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">        <span class="title function_">setColor</span>(color2);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> [color, handleButtonClick];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> useColorSwtich;</span><br></pre></td></tr></table></figure><p>修改 App.js 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./App.css&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Button</span> <span class="keyword">from</span> <span class="string">&#x27;./Button.js&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> useColorSwtich <span class="keyword">from</span> <span class="string">&#x27;./useColorSwitch&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> [color, handleButton1Click] = <span class="title function_">useColorSwtich</span>();</span><br><span class="line">  <span class="keyword">const</span> [color2, handleButton2Click] = <span class="title function_">useColorSwtich</span>(<span class="string">&quot;#0000ff&quot;</span>, <span class="string">&quot;#ff00ff&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Button</span> <span class="attr">onClick</span>=<span class="string">&#123;handleButton1Click&#125;</span> <span class="attr">label</span>=<span class="string">&quot;按钮&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">color</span> &#125;&#125;&gt;</span>这是第一段文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Button</span> <span class="attr">onClick</span>=<span class="string">&#123;handleButton2Click&#125;</span> <span class="attr">label</span>=<span class="string">&quot;点我&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">color:</span> <span class="attr">color2</span> &#125;&#125;&gt;</span>这是第二段文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三、Styled-components-简介与配置"><a href="#三、Styled-components-简介与配置" class="headerlink" title="三、Styled-components 简介与配置"></a>三、Styled-components 简介与配置</h3><p><a href="https://styled-components.com/">Styled-components</a> 是目前 React 样式方案中最受关注的一种，它既具备了 css-in-js 的模块化与参数化优点，又完全使用 CSS 的书写习惯，不会引起额外的学习成本。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add styled-components  <span class="comment"># 安装</span></span><br></pre></td></tr></table></figure><h4 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h4><p><code>src</code> 下新建 <code>theme.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="attr">primaryColor</span>: <span class="string">&#x27;#4F9DDE&#x27;</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 index.js 文件中修改：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ThemeProvider</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;styled-components&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> theme <span class="keyword">from</span> <span class="string">&#x27;./theme&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> root = <span class="title class_">ReactDOM</span>.<span class="title function_">createRoot</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;root&#x27;</span>));</span><br><span class="line">root.<span class="title function_">render</span>(</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">React.StrictMode</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">ThemeProvider</span> <span class="attr">theme</span>=<span class="string">&#123;theme&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">App</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">ThemeProvider</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">React.StrictMode</span>&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>在 Button.js 文件中使用 <code>tagged template literals</code> 给模板字符串传递参数：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledButton</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">    width: <span class="subst">$&#123;(&#123; width &#125;) =&gt; width || <span class="string">&quot;80px&quot;</span>&#125;</span>;</span></span><br><span class="line"><span class="string">    background-color: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.primaryColor&#125;</span>;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Button</span>(<span class="params">&#123; width, onClick, label, children &#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">StyledButton</span> <span class="attr">width</span>=<span class="string">&#123;width&#125;</span> <span class="attr">onClick</span>=<span class="string">&#123;onClick&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">button</span>&gt;</span>&#123;label&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">StyledButton</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>给 Button1 传入 width 属性：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> [color, handleButton1Click] = <span class="title function_">useColorSwtich</span>();</span><br><span class="line">  <span class="keyword">const</span> [color2, handleButton2Click] = <span class="title function_">useColorSwtich</span>(<span class="string">&quot;#0000ff&quot;</span>, <span class="string">&quot;#ff00ff&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Button</span> <span class="attr">width</span>=<span class="string">&quot;120px&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;handleButton1Click&#125;</span> <span class="attr">label</span>=<span class="string">&quot;按钮&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">color</span> &#125;&#125;&gt;</span>这是一段文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Button</span> <span class="attr">onClick</span>=<span class="string">&#123;handleButton2Click&#125;</span> <span class="attr">label</span>=<span class="string">&quot;点我&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">color:</span> <span class="attr">color2</span> &#125;&#125;&gt;</span>这是第二段文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="四、Storybook-简介与配置"><a href="#四、Storybook-简介与配置" class="headerlink" title="四、Storybook 简介与配置"></a>四、Storybook 简介与配置</h3><p>Storybook 是一个 UI 组件开发管理的工具，以文档形式组织和展示组件，我们可以通过 story 独立创建组件，并且每个组件都有一个独立开发调试环境。Storybook 是运行在主应用程序之外，不依赖于项目，因此我们不必担心开发环境、依赖等问题导致不能开发组件。</p><p>在项目根目录下运行命令进行安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx -p @storybook/cli sb init  <span class="comment"># Add Storybook</span></span><br></pre></td></tr></table></figure><p>使用 <code>yarn</code> 命令启动：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn run storybook</span><br></pre></td></tr></table></figure><p>修改 <code>.storybook</code> 目录下的 Preview.js 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; addDecorator, addParameters &#125; <span class="keyword">from</span> <span class="string">&quot;@storybook/react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ThemeProvider</span> &#125; <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> theme <span class="keyword">from</span> <span class="string">&quot;../src/theme&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;story.css&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> decorators = [</span><br><span class="line">  <span class="function">(<span class="params">Story</span>) =&gt;</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">ThemeProvider</span> <span class="attr">theme</span>=<span class="string">&#123;theme&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Story</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">ThemeProvider</span>&gt;</span></span></span><br><span class="line">  ),</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> parameters = &#123;</span><br><span class="line">  <span class="attr">options</span>: &#123;</span><br><span class="line">    <span class="attr">showRoots</span>: <span class="literal">true</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;React 即时通信 UI 实战第二章。React 即时通信 UI 实战为&lt;a href=&quot;https://www.bilibili.com/video/BV1PK4y1b7bY?p=2&amp;amp;spm_id_from=pageDriver&amp;amp;vd_source=0965c74096f788f105780e5d5d0e9ebf&quot;&gt;峰华前端工程师&lt;/a&gt;推出的 React 实战课程，以聊天（即时通信）为原型，构建了一整套的 UI 组件库，课程重点在于 UI 组件的分析和实现，力求打造自用组件库。本章包括创建 React 工程，快速回顾 React 开发要点以及环境配置。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Web前端" scheme="http://blog.zhuangzhihao.top/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="React" scheme="http://blog.zhuangzhihao.top/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>Requests 和 cURL</title>
    <link href="http://blog.zhuangzhihao.top/Requests&amp;Curl/"/>
    <id>http://blog.zhuangzhihao.top/Requests&amp;Curl/</id>
    <published>2022-09-04T16:00:00.000Z</published>
    <updated>2022-12-10T06:29:53.157Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>在开发过程中，我们常常需要和各种 API 打交道，cURL 和 Requests 都是很实用的 HTTP 客户端（库），<a href="https://curl.haxx.se/">curl</a> 是一种命令行工具，作用是发出网络请求，然后得到和提取数据，显示在”标准输出”（stdout）上面。requests 是 Python 语言的第三方的库，专门用于发送 HTTP 请求，使用起来比 urllib 简洁很多。另外，关于 HTTP 协议的格式也可以参照<a href="/HTTP&amp;Servlet">这篇笔记</a>。</p></blockquote><span id="more"></span><h3 id="一、GET、POST-和-URL"><a href="#一、GET、POST-和-URL" class="headerlink" title="一、GET、POST 和 URL"></a>一、GET、POST 和 URL</h3><p>统一资源定位符（URL）是用于完整地描述互联网上网页和其他资源的地址的一种标识方法。一次网页访问包括：通过 DNS 解析 URL 中域名对应的服务器主机 IP 地址，与服务器主机三次握手建立 TCP 连接，发送 HTTP 请求，获取服务器返回的数据，浏览器解析前端文件，渲染页面。</p><p>GET 和 POST 是 HTTP 最常用的两大请求方法。GET 是 HTTP 的默认方法，用于检索和获取网页内容，而 POST 方法的含义更倾向于创建、更新。GET 使用 URL 或 Cookie 传参，而和 GET 不一样的是，POST 请求内容不会在 URL 上显示，而是会出现在请求主体中。</p><p>GET 和 POST 底层都是使用 TCP 链接。GET 的请求方式是将 HTTP 的请求头（header）和请求行中的 data 一并发往服务端，也就是一条 TCP 数据包发送，这就会有两个问题：数据量有限，依赖于 TCP 负载能力，所以携带的数据量很大的情况下，容易造成重发。所有的携带的数据只能接受转化成 ASCII 字符。但是 POST 不一样，POST 使用两步走，先发送 HTTP 的 header，然后再传输 data，数据类型也不受限制，而且数据隐秘性比较好。</p><h3 id="二、cURL（Command-Line-URL-Viewer）"><a href="#二、cURL（Command-Line-URL-Viewer）" class="headerlink" title="二、cURL（Command Line URL Viewer）"></a>二、cURL（Command Line URL Viewer）</h3><p>cURL 是一个利用 URL 语法在命令行下工作的文件传输工具，1997 年首次发行。它支持文件上传和下载，所以是综合传输工具，但按传统，习惯称 cURL 为下载工具。 cURL 支持的通信协议有 FTP、FTPS、HTTP、HTTPS、TFTP、SFTP、Gopher、SCP、Telnet、DICT、FILE、LDAP、LDAPS、IMAP、POP3、SMTP 和 RTSP。</p><p>直接在 curl 命令后加上网址，就可以看到网页源码，如果对 API 请求，返回的就是 API 的数据了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl www.baidu.com</span><br></pre></td></tr></table></figure><p>如果要把这个网页保存下来，可以使用 <code>-o</code> 参数，这就相当于使用 <code>wget</code> 命令了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -o [文件名] www.baidu.com</span><br><span class="line">curl --limit-rate 100k -o [文件名] www.baidu.com</span><br></pre></td></tr></table></figure><p>有的网址是自动重定向的。使用 <code>-L</code> 参数，curl 就会跳转到新的网址：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L www.bilibili.com</span><br></pre></td></tr></table></figure><p><code>-i</code>参数可以显示 <code>http response</code> 的头信息，连同网页代码一起：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -i www.bilibili.com</span><br></pre></td></tr></table></figure><p><code>-I</code> 参数则是只显示 <code>http response</code> 的头信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -I www.bilibili.com</span><br></pre></td></tr></table></figure><p><code>-v</code> 参数可以显示一次 HTTP 通信的整个过程，包括端口连接和 <code>http response</code> 头信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -v www.baidu.com</span><br></pre></td></tr></table></figure><p>发送表单信息有 GET 和 POST 两种方法。</p><p>GET 方法相对简单，只要把数据附在网址后面就行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl example.com/form.cgi?data=xxx</span><br></pre></td></tr></table></figure><p>POST 方法必须把数据和网址分开，curl 就要用到 <code>--data</code> 参数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST --data &quot;data=xxx&quot; example.com/form.cgi</span><br></pre></td></tr></table></figure><p>如果你的数据没有经过表单编码，还可以让 curl 为你编码，参数是 <code>--data-urlencode</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST--data-urlencode &quot;date=April 1&quot; example.com/form.cgi</span><br></pre></td></tr></table></figure><p>curl 默认的 HTTP 动词是 GET，使用 <code>-X</code> 参数可以支持其他动词，例如上文的 <code>-XPOST</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -XPOST example.com/posts -d &#x27;&#123;&quot;title&quot;: &quot;bezhuang&quot;&#125;&#x27; </span><br></pre></td></tr></table></figure><p>要更新数据可以用 <code>-XPUT</code> ，把更新数据放在 <code>-d</code> 后面即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -XPUT www.example.com -d &#x27;&#123;&quot;title&quot;: &quot;another&quot;; &quot;id&quot;: &quot;2&quot;&#125;&#x27; </span><br></pre></td></tr></table></figure><p>同理，删除使用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X DELETE www.example.com</span><br></pre></td></tr></table></figure><p>假定文件上传的表单是下面这样：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span> <span class="attr">enctype</span>=<span class="string">&#x27;multipart/form-data&#x27;</span> <span class="attr">action</span>=<span class="string">&quot;upload.cgi&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">file</span> <span class="attr">name</span>=<span class="string">upload</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">submit</span> <span class="attr">name</span>=<span class="string">press</span> <span class="attr">value</span>=<span class="string">&quot;OK&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>你可以用 curl 这样上传文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl --form upload=@localfilename --form press=OK [URL]</span><br></pre></td></tr></table></figure><p>有时你需要在 <code>http request</code> 头信息中，提供一个 <code>referer</code> 字段，表示你是从哪里跳转过来的：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl --referer http://www.example.com http://www.example.com</span><br></pre></td></tr></table></figure><p>User Agent 字段用来表示客户端的设备信息。服务器有时会根据这个字段，针对不同设备，返回不同格式的网页，比如手机版和桌面版，curl 可以这样模拟：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl --user-agent &quot;[User Agent]&quot; [URL]</span><br></pre></td></tr></table></figure><p>使用 <code>--cookie</code> 参数，可以让 curl 发送 cookie：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl --cookie &quot;name=xxx&quot; www.example.com</span><br></pre></td></tr></table></figure><p>至于具体的 cookie 的值，可以从 <code>http response</code> 头信息的 <code>Set-Cookie</code> 字段中得到。</p><p><code>-c cookie-file</code>可以保存服务器返回的 cookie 到文件，<code>-b cookie-file</code> 可以使用这个文件作为 cookie 信息，进行后续的请求：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -c cookies http://example.com</span><br><span class="line">curl -b cookies http://example.com</span><br></pre></td></tr></table></figure><p>有时需要在 <code>http request</code> 之中，自行增加一个头信息。<code>--header</code> 参数就可以起到这个作用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl --header &quot;Content-Type:application/json&quot; http://example.com</span><br></pre></td></tr></table></figure><p>有些网域需要 HTTP 认证，这时 curl 需要用到 <code>--user</code> 参数：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl --user name:password example.com</span><br></pre></td></tr></table></figure><h3 id="三、Requests-库"><a href="#三、Requests-库" class="headerlink" title="三、Requests 库"></a>三、Requests 库</h3><p>requests 属于第三方库，Python 不内置，因此需要我们 <code>pip</code> 安装，安装完成后 <code>import</code> 一下，正常则说明可以开始使用了。</p><p><code>requests.get()</code> 用于请求目标网站，类型是一个 <code>HTTP response</code> 类型：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">response = requests.get(<span class="string">&#x27;http://www.baidu.com&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(response.status_code)  <span class="comment"># 打印状态码</span></span><br><span class="line"><span class="built_in">print</span>(response.url)          <span class="comment"># 打印请求url</span></span><br><span class="line"><span class="built_in">print</span>(response.headers)      <span class="comment"># 打印头信息</span></span><br><span class="line"><span class="built_in">print</span>(response.cookies)      <span class="comment"># 打印cookie信息</span></span><br><span class="line"><span class="built_in">print</span>(response.text)  <span class="comment">#以文本形式打印网页源码</span></span><br><span class="line"><span class="built_in">print</span>(response.content) <span class="comment">#以字节流形式打印</span></span><br><span class="line"><span class="built_in">print</span>(response.content.decode(<span class="string">&quot;utf-8&quot;</span>)) <span class="comment">#解决了通过response.text直接返回显示乱码的问题</span></span><br><span class="line">response.encoding=<span class="string">&quot;utf-8&quot;</span> <span class="comment">#避免乱码的问题发生</span></span><br></pre></td></tr></table></figure><p>各种请求方式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">requests.get(<span class="string">&#x27;http://httpbin.org/get&#x27;</span>)</span><br><span class="line">requests.post(<span class="string">&#x27;http://httpbin.org/post&#x27;</span>)</span><br><span class="line">requests.put(<span class="string">&#x27;http://httpbin.org/put&#x27;</span>)</span><br><span class="line">requests.delete(<span class="string">&#x27;http://httpbin.org/delete&#x27;</span>)</span><br><span class="line">requests.head(<span class="string">&#x27;http://httpbin.org/get&#x27;</span>)</span><br><span class="line">requests.options(<span class="string">&#x27;http://httpbin.org/get&#x27;</span>)</span><br></pre></td></tr></table></figure><p>基本的 GET 请求：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">response = requests.get(<span class="string">&#x27;http://httpbin.org/get&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(response.text)</span><br></pre></td></tr></table></figure><p>带参数的 GET 请求：</p><ol><li>直接将参数放在 url 内：</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">response = requests.get(http://httpbin.org/get?name=gemey&amp;age=<span class="number">22</span>)</span><br><span class="line"><span class="built_in">print</span>(response.text)</span><br></pre></td></tr></table></figure><ol><li>先将参数填写在 <code>dict</code> 中，发起请求时 <code>params</code> 参数指定为 <code>dict</code>：</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;tom&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;age&#x27;</span>: <span class="number">20</span></span><br><span class="line">&#125;</span><br><span class="line">response = requests.get(<span class="string">&#x27;http://httpbin.org/get&#x27;</span>, params=data)</span><br><span class="line"><span class="built_in">print</span>(response.text)</span><br></pre></td></tr></table></figure><p>解析 json：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">response = requests.get(<span class="string">&#x27;http://httpbin.org/get&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(response.text)</span><br><span class="line"><span class="built_in">print</span>(response.json())  <span class="comment">#response.json()方法同json.loads(response.text)</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(response.json()))</span><br></pre></td></tr></table></figure><ul><li>如果 JSON 解码失败， 将会抛出 <code>ValueError: No JSON object could be decoded</code> 异常。而成功调用 <code>response.json()</code> 并不意味着响应的成功。有的服务器会在失败的响应中包含一个 JSON 对象（比如 HTTP 500 的错误细节）。这种 JSON 会被解码返回。要检查请求是否成功，请使用 <code>r.raise_for_status()</code> 或者检查 <code>response.status_code</code> 是否和你的期望相同</li></ul><p>保存一个二进制文件，二进制内容为 <code>response.content</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">response = requests.get(<span class="string">&#x27;http://img.ivsky.com/img/tupian/pre/201708/30/kekeersitao-002.jpg&#x27;</span>)</span><br><span class="line">b = response.content</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;F://fengjing.jpg&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(b)</span><br></pre></td></tr></table></figure><p>添加 <code>HTTP headers</code> 信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">heads = &#123;&#125;</span><br><span class="line">heads[&#x27;User-Agent&#x27;] = &#x27;Mozilla/5.0 &#x27; \</span><br><span class="line">                          &#x27;(Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 &#x27; \</span><br><span class="line">                          &#x27;(KHTML, like Gecko) Version/5.1 Safari/534.50&#x27;</span><br><span class="line"> response = requests.get(&#x27;http://www.baidu.com&#x27;,headers=headers)</span><br></pre></td></tr></table></figure><p>使用代理，同添加 <code>headers</code> 方法，代理参数也要是一个 <code>dict</code>，这里使用 <code>requests</code> 库爬取了 IP 代理网站的 IP 与端口和类型：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_html</span>(<span class="params">url</span>):</span><br><span class="line">    proxy = &#123;</span><br><span class="line">        <span class="string">&#x27;http&#x27;</span>: <span class="string">&#x27;120.25.253.234:812&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;https&#x27;</span>: <span class="string">&#x27;163.125.222.244:8123&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    heads = &#123;&#125;</span><br><span class="line">    heads[<span class="string">&#x27;User-Agent&#x27;</span>] = <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.221 Safari/537.36 SE 2.X MetaSr 1.0&#x27;</span></span><br><span class="line">    req = requests.get(url, headers=heads,proxies=proxy)</span><br><span class="line">    html = req.text</span><br><span class="line">    <span class="keyword">return</span> html</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_ipport</span>(<span class="params">html</span>):</span><br><span class="line">    regex = <span class="string">r&#x27;&lt;td data-title=&quot;IP&quot;&gt;(.+)&lt;/td&gt;&#x27;</span></span><br><span class="line">    iplist = re.findall(regex, html)</span><br><span class="line">    regex2 = <span class="string">&#x27;&lt;td data-title=&quot;PORT&quot;&gt;(.+)&lt;/td&gt;&#x27;</span></span><br><span class="line">    portlist = re.findall(regex2, html)</span><br><span class="line">    regex3 = <span class="string">r&#x27;&lt;td data-title=&quot;类型&quot;&gt;(.+)&lt;/td&gt;&#x27;</span></span><br><span class="line">    typelist = re.findall(regex3, html)</span><br><span class="line">    sumray = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> iplist:</span><br><span class="line">        <span class="keyword">for</span> p <span class="keyword">in</span> portlist:</span><br><span class="line">            <span class="keyword">for</span> t <span class="keyword">in</span> typelist:</span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        a = t+<span class="string">&#x27;,&#x27;</span>+i + <span class="string">&#x27;:&#x27;</span> + p</span><br><span class="line">        sumray.append(a)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;高匿代理&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(sumray)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    url = <span class="string">&#x27;http://www.kuaidaili.com/free/&#x27;</span></span><br><span class="line">    get_ipport(get_html(url))</span><br></pre></td></tr></table></figure><p>基本 POST 请求：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">data = &#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;tom&#x27;</span>,<span class="string">&#x27;age&#x27;</span>:<span class="string">&#x27;22&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">response = requests.post(<span class="string">&#x27;http://httpbin.org/post&#x27;</span>, data=data)</span><br></pre></td></tr></table></figure><p>获取 cookie：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">response = requests.get(<span class="string">&#x27;http://www.baidu.com&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(response.cookies)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(response.cookies))</span><br><span class="line"><span class="keyword">for</span> k,v <span class="keyword">in</span> response.cookies.items():</span><br><span class="line">    <span class="built_in">print</span>(k+<span class="string">&#x27;:&#x27;</span>+v)</span><br></pre></td></tr></table></figure><p>会话维持：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">session = requests.Session()</span><br><span class="line">session.get(<span class="string">&#x27;http://httpbin.org/cookies/set/number/12345&#x27;</span>)</span><br><span class="line">response = session.get(<span class="string">&#x27;http://httpbin.org/cookies&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(response.text)</span><br></pre></td></tr></table></figure><p>证书验证设置：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> requests.packages <span class="keyword">import</span> urllib3</span><br><span class="line"></span><br><span class="line">urllib3.disable_warnings()  <span class="comment">#从urllib3中消除警告</span></span><br><span class="line">response = requests.get(<span class="string">&#x27;https://www.12306.cn&#x27;</span>,verify=<span class="literal">False</span>)  <span class="comment">#证书验证设为FALSE</span></span><br><span class="line"><span class="built_in">print</span>(response.status_code)</span><br></pre></td></tr></table></figure><p>超时异常捕获：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> requests.exceptions <span class="keyword">import</span> ReadTimeout</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    res = requests.get(<span class="string">&#x27;http://httpbin.org&#x27;</span>, timeout=<span class="number">0.1</span>)</span><br><span class="line">    <span class="built_in">print</span>(res.status_code)</span><br><span class="line"><span class="keyword">except</span> ReadTimeout:</span><br><span class="line">    <span class="built_in">print</span>(timeout)</span><br></pre></td></tr></table></figure><p>异常处理，在你不确定会发生什么错误时，尽量使用 <code>try…except</code> 来捕获异常：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> requests.exceptions <span class="keyword">import</span> ReadTimeout,HTTPError,RequestException</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    response = requests.get(<span class="string">&#x27;http://www.baidu.com&#x27;</span>,timeout=<span class="number">0.5</span>)</span><br><span class="line">    <span class="built_in">print</span>(response.status_code)</span><br><span class="line"><span class="keyword">except</span> ReadTimeout:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;timeout&#x27;</span>)</span><br><span class="line"><span class="keyword">except</span> HTTPError:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;httperror&#x27;</span>)</span><br><span class="line"><span class="keyword">except</span> RequestException:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;reqerror&#x27;</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;在开发过程中，我们常常需要和各种 API 打交道，cURL 和 Requests 都是很实用的 HTTP 客户端（库），&lt;a href=&quot;https://curl.haxx.se/&quot;&gt;curl&lt;/a&gt; 是一种命令行工具，作用是发出网络请求，然后得到和提取数据，显示在”标准输出”（stdout）上面。requests 是 Python 语言的第三方的库，专门用于发送 HTTP 请求，使用起来比 urllib 简洁很多。另外，关于 HTTP 协议的格式也可以参照&lt;a href=&quot;/HTTP&amp;amp;Servlet&quot;&gt;这篇笔记&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="其他开发" scheme="http://blog.zhuangzhihao.top/categories/%E5%85%B6%E4%BB%96%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="HTTP" scheme="http://blog.zhuangzhihao.top/tags/HTTP/"/>
    
  </entry>
  
  <entry>
    <title>Spring 核心概念</title>
    <link href="http://blog.zhuangzhihao.top/Spring-%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5/"/>
    <id>http://blog.zhuangzhihao.top/Spring-%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5/</id>
    <published>2022-08-23T16:00:00.000Z</published>
    <updated>2022-12-10T14:10:14.816Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>大部分 Java 后端程序员在日常工作中都会接触到 Spring ，Spring 早已成为 Java 后端开发事实上的行业标准，因此，如何用好 Spring ，也就成为 Java 程序员的必修课之一。我在去年<a href="/Java高级训练营/">阿里云开发者社区的 Java 训练营</a>中就接触过 Spring，但是仍然需要系统学习搞懂 Spring 相关的核心功能和实现原理。本文是 Spring 学习第二章——Spring 核心概念的笔记。</p></blockquote><span id="more"></span><h3 id="一、IOC（Inversion-of-Control）和-IOC-容器"><a href="#一、IOC（Inversion-of-Control）和-IOC-容器" class="headerlink" title="一、IOC（Inversion of Control）和 IOC 容器"></a>一、IOC（Inversion of Control）和 IOC 容器</h3><p>传统 Java 项目中，业务层需要调用数据层的方法，就需要在业务层 new 数据层的对象，如果数据层的实现类发生变化，那么业务层的代码也需要跟着改变，发生变更后，都需要进行编译打包和重部署，耦合度偏高。</p><p><img src="https://blog.zhuangzhihao.top/img/spring02.png" alt></p><p>针对这个问题，Spring 就提出了一个解决方案：使用对象时，在程序中不要主动使用 new 产生对象，转换为由外部提供对象。</p><p>IOC 控制反转：使用对象时，由主动 new 产生对象转换为由外部提供对象，此过程中对象创建控制权由程序转移到外部，此思想称为控制反转。</p><p>Spring 技术对 IOC 思想进行了实现，Spring 提供了一个容器，称为 IOC 容器，用来充当 IOC 思想中的”外部”。IOC 思想中的“别人”（外部）指的就是 Spring 的 IOC 容器。</p><p>IOC 容器负责对象的创建、初始化等一系列工作，其中包含了数据层和业务层的类对象。被创建或被管理的对象在 IOC 容器中统称为 Bean，IOC 容器中放的就是一个个的 Bean 对象。</p><p>Spring 是使用容器来管理 bean 对象的，主要管理项目中所使用到的类对象，比如 Service 和 Dao，并且使用配置文件将被管理的对象告知 IOC 容器。被管理的对象交给 IOC 容器，Spring 框架提供相应的接口获取到 IOC 容器，IOC 容器得到后，调用 Spring 框架提供对应接口中的方法从容器中获取 bean。使用 Spring 导入哪些坐标就需要在 <code>pom.xml</code> 添加对应的依赖。</p><h4 id="IOC-入门案例"><a href="#IOC-入门案例" class="headerlink" title="IOC 入门案例"></a>IOC 入门案例</h4><p>需求分析：将 <code>BookServiceImpl</code> 和 <code>BookDaoImpl</code> 交给 Spring 管理，并从容器中获取对应的 bean 对象进行方法调用。</p><ol><li><p>创建 Maven 的 Java 项目</p></li><li><p>pom.xml 添加 Spring 的依赖 jar 包：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.10.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在不同位置创建 <code>/service/BookService.java</code>，<code>/service/impl/BookServiceImpl.java</code>，<code>/dao/BookDao.java</code> 和 <code>/dao/impl/BookDaoImpl.java</code> 四个类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BookDao</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookDaoImpl</span> <span class="keyword">implements</span> <span class="title class_">BookDao</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;book dao save ...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BookService</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">BookService</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">BookDao</span> <span class="variable">bookDao</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BookDaoImpl</span>();</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;book service save ...&quot;</span>);</span><br><span class="line">        bookDao.save();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>resources 目录下新建 Spring 配置文件 <code>applicationContext.xml</code>，并完成 bean 的配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- bean标签表示配置bean：id属性表示给bean起名字，class属性表示给bean定义类型 --&gt;</span></span><br><span class="line">    </span><br><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;bookDao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;bezhuang.spring.dao.impl.BookDaoImpl&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;bookService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;bezhuang.spring.service.impl.BookServiceImpl&quot;</span>/&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">&lt;!-- bean定义时id属性在同一个上下文中(配置文件)不能重复 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>使用 Spring 提供的接口完成 IOC 容器的创建，创建 App 类，编写 main 方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">//加载配置文件，获取IOC容器</span></span><br><span class="line"><span class="type">ApplicationContext</span> <span class="variable">ctx</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;applicationContext.xml&quot;</span>); </span><br><span class="line">    <span class="comment">//从容器中获取对象进行方法调用    </span></span><br><span class="line">        <span class="comment">//BookDao bookDao = (BookDao) ctx.getBean(&quot;bookDao&quot;);</span></span><br><span class="line">        <span class="comment">//bookDao.save();</span></span><br><span class="line">        <span class="type">BookService</span> <span class="variable">bookService</span> <span class="operator">=</span> (BookService) ctx.getBean(<span class="string">&quot;bookService&quot;</span>);</span><br><span class="line">        bookService.save();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>Spring 的 IOC 入门案例已经完成，但是在 <code>BookServiceImpl</code> 的类中依然存在 <code>BookDaoImpl</code> 对象的 new 操作，它们之间的耦合度还是比较高。这块该如何解决，就需要用到下面的 DI（依赖注入）。</p><h3 id="二、DI（Dependency-Injection）"><a href="#二、DI（Dependency-Injection）" class="headerlink" title="二、DI（Dependency Injection）"></a>二、DI（Dependency Injection）</h3><p>当 IOC 容器中创建好 service 和 dao 对象后，IOC 容器中虽然有 service 和 dao 对象，但是 service 对象和 dao 对象没有任何关系，需要把 dao 对象交给 service，因为 service 运行需要依赖 dao 对象，也就是说要绑定 service 和 dao 对象之间的关系。</p><p>像这种在容器中建立对象与对象之间的绑定关系就要用到 DI（依赖注入）：在容器中建立 bean 与 bean 之间的依赖关系的整个过程，称为依赖注入，业务层要用数据层的类对象，以前是自己 <code>new</code>的，现在自己不 new 了，靠 IOC 容器来给注入进来。</p><p>IOC/DI 思想的最终目标就是充分解耦，具体实现靠：使用 IOC 容器管理 bean（IOC），在 IOC 容器内将有依赖关系的 bean 进行关系绑定（DI），最终结果为：使用对象时不仅可以直接从 IOC 容器中获取，并且获取到的 bean 已经绑定了所有的依赖关系。</p><p>要想实现依赖注入，必须要基于 IOC 管理 Bean，Service 中使用 new 形式创建的 Dao 对象需要删除掉，最终要使用 IOC 容器中的 bean 对象。在 Service 中提供方法，让 Spring 的 IOC 容器可以通过该方法传入 bean 对象。</p><h4 id="DI-入门案例"><a href="#DI-入门案例" class="headerlink" title="DI 入门案例"></a>DI 入门案例</h4><p>需求：基于 IOC 入门案例，在 <code>BookServiceImpl</code> 类中删除 new 对象的方式，使用 Spring 的 DI 完成 Dao 层的注入。</p><ol><li><p>在 <code>BookServiceImpl</code> 类中，删除业务层中使用 new 的方式创建的 dao 对象：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">BookService</span> &#123;</span><br><span class="line">    <span class="comment">//删除业务层中使用new的方式创建的dao对象</span></span><br><span class="line">    <span class="keyword">private</span> BookDao bookDao;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;book service save ...&quot;</span>);</span><br><span class="line">        bookDao.save();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在 <code>BookServiceImpl</code> 类中，为 <code>BookDao</code> 属性提供 <code>setter</code> 方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">BookService</span> &#123;</span><br><span class="line">    <span class="comment">//删除业务层中使用new的方式创建的dao对象</span></span><br><span class="line">    <span class="keyword">private</span> BookDao bookDao;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;book service save ...&quot;</span>);</span><br><span class="line">        bookDao.save();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//提供对应的set方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setBookDao</span><span class="params">(BookDao bookDao)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.bookDao = bookDao;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在配置文件中添加依赖注入的配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--bean标签标示配置bean</span></span><br><span class="line"><span class="comment">    id属性标示给bean起名字</span></span><br><span class="line"><span class="comment">    class属性表示给bean定义类型</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;bookDao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;bezhuang.spring.dao.impl.BookDaoImpl&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;bookService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;bezhuang.spring.service.impl.BookServiceImpl&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--配置server与dao的关系--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--property标签表示配置当前bean的属性--&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--name属性表示配置哪一个具体的属性，ref属性表示参照哪一个bean--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;bookDao&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;bookDao&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p>property 配置中的两个 bookDao 的含义是不一样的：</p><ul><li><code>name=&quot;bookDao&quot;</code> 中 <code>bookDao</code> 的作用是让 Spring 的 IOC 容器在获取到名称后，将首字母大写，前面加 set 找对应的 <code>setBookDao()</code> 方法进行对象注入。</li><li><code>ref=&quot;bookDao&quot;</code> 中 <code>bookDao</code> 的作用是让 Spring 能在 IOC 容器中找到 id 为 <code>bookDao</code> 的 Bean 对象给 <code>bookService</code> 进行注入。</li></ul><h3 id="三、IOC-相关内容"><a href="#三、IOC-相关内容" class="headerlink" title="三、IOC 相关内容"></a>三、IOC 相关内容</h3><h4 id="bean-基础配置"><a href="#bean-基础配置" class="headerlink" title="bean 基础配置"></a>bean 基础配置</h4><p>bean 用来定义 Spring 核心容器管理的对象，bean 基础配置（id 和 class）：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">id： bean的id，使用容器可以通过id值获取对应的bean，在一个容器中id值唯一</span></span><br><span class="line"><span class="comment">class: bean的类型，即配置的bean的全路径类名</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;bookDao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;bezhuang.spring.dao.imp1.BookDaoImpI&quot;</span>/&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;bookService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;bezhuang.spring.service.imp1.BookServiceImp1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>bean 的别名配置，打开 Spring 的配置文件 <code>applicationContext.xml</code>：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--name:为bean指定别名，别名可以有多个，使用逗号，分号，空格进行分隔--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--Ebi全称Enterprise Business Interface，翻译为企业业务接口--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;bookService&quot;</span> <span class="attr">name</span>=<span class="string">&quot;service service4 bookEbi&quot;</span> <span class="attr">class</span>=<span class="string">&quot;bezhuang.spring.service.impl.BookServiceImpl&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;bookDao&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;bookDao&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;bookDao&quot;</span> <span class="attr">name</span>=<span class="string">&quot;dao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;bezhuang.spring.dao.impl.BookDaoImpl&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>根据名称容器中获取 bean 对象：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">App</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">ApplicationContext</span> <span class="variable">ctx</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;applicationContext.xml&quot;</span>);</span><br><span class="line">        <span class="comment">//此处根据bean标签的id属性和name属性的任意一个值来获取bean对象</span></span><br><span class="line">        <span class="type">BookService</span> <span class="variable">bookService</span> <span class="operator">=</span> (BookService) ctx.getBean(<span class="string">&quot;service4&quot;</span>);</span><br><span class="line">        bookService.save();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>bean 依赖注入的 ref 属性指定 bean，必须在容器中存在，ref 的属性值，也可也是另一个 bean 的 name 属性值，不过此处还是建议使用其 id 来进行注入。</p><p>bean 作用范围 scope 配置：定义 bean 的作用范围，可选 singleton 单例（默认）或 prototype 非单例。</p><p>在 Spring 配置文件中，配置 scope 属性来实现 bean 的非单例创建（创建不同对象）：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;bookDao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;bezhuang.spring.dao.imp1.BookDaoImpl&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;prototype&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>bean 默认为单例，即在 Spring 的 IOC 容器中只会有该类的一个对象。 bean 对象只有一个就避免了对象的频繁创建与销毁，达到了 bean 对象的复用，性能高。</p><p>bean 在容器中是单例的，如果对象是有状态对象，即该对象有成员变量可以用来存储数据的，因为所有请求线程共用一个 bean 对象，所以会存在线程安全问题。如果对象是无状态对象，即该对象没有成员变量没有进行数据存储的，因方法中的局部变量在方法调用完成后会被销毁，所以不会存在线程安全问题。</p><p>哪些 bean 对象适合交给容器进行管理：表现层对象、业务层对象、数据层对象、工具对象。</p><p>哪些 bean 对象不适合交给容器进行管理：封装实例的域对象，因为会引发线程安全问题，所以不适合。</p><h4 id="bean-实例化"><a href="#bean-实例化" class="headerlink" title="bean 实例化"></a>bean 实例化</h4><p>bean 本质上就是对象，对象在 new 的时候会使用构造方法完成，那创建 bean 也是使用构造方法完成的。</p><p>实例化 bean 有三种方式：构造方法，静态工厂和实例工厂。</p><p>Spring 的第一种 bean 的创建方式：构造方法实例化。Spring 底层使用的是类的无参构造方法。</p><ul><li><p>提供可访问的构造方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookDaoImpl</span> <span class="keyword">implements</span> <span class="title class_">BookDao</span> &#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="title function_">BookDaoImpl</span><span class="params">()</span> &#123;</span><br><span class="line">    System.out.println&#123;<span class="string">&quot;book constructor is running...&quot;</span>&#125;;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">()</span> &#123;</span><br><span class="line">    System.out.println&#123;<span class="string">&quot;book dao save... &quot;</span>&#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>配置：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;bean </span><br><span class="line">  id=<span class="string">&quot;bookDao&quot;</span></span><br><span class="line">  class=<span class="string">&quot;bezhuang.spring.dao.impl.BookDaoImpl&quot;</span></span><br><span class="line">    /&gt;</span><br></pre></td></tr></table></figure></li><li><p>无参构造方法如果不存在，将抛出异常。 </p></li></ul><p>Spring 的第二种 bean 的创建方式：静态工厂实例化。这种方式一般是用来兼容早期的一些老系统，所以了解为主。</p><ul><li><p>静态工厂</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderDaoFactory</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> OrderDao <span class="title function_">getOrderDao</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">OrderDaoImp1</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;orderDao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;bezhuang.spring.factory.OrderDaoFactory&quot;</span> <span class="attr">factory-method</span>=<span class="string">&quot;getOrderDao&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>class</code>：工厂类的类全名，<code>factory-mehod</code>：具体工厂类中创建对象的方法名。</p></li></ul><p>Spring 的第三种 bean 的创建方式：实例工厂实例化。</p><ul><li><p>创建一个工厂类并提供一个普通方法，注意此处和静态工厂的工厂类不一样的地方是方法不是静态方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDaoFactory</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> UserDao <span class="title function_">getUserDao</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">UserDaoImpl</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>在 Spring 的配置文件中添加以下内容。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;bezhuang.spring.factory.UserDaoFactory&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userDao&quot;</span> <span class="attr">factory-method</span>=<span class="string">&quot;getUserDao&quot;</span> <span class="attr">factory-bean</span>=<span class="string">&quot;userFactory&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li></ul><ul><li>factory-bean：工厂的实例对象，factory-method：工厂对象中的具体创建对象的方法名。</li></ul><p>实例工厂实例化的方式配置的过程还是比较复杂，所以 Spring 为了简化这种配置方式就提供了一种叫 <code>FactoryBean</code> 的方式来简化开发。</p><ol><li><p>创建一个 UserDaoFactoryBean 的类，实现 FactoryBean 接口，重写接口的方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDaoFactoryBean</span> <span class="keyword">implements</span> <span class="title class_">FactoryBean</span>&lt;UserDao&gt; &#123;</span><br><span class="line">    <span class="comment">//代替原始实例工厂中创建对象的方法</span></span><br><span class="line">    <span class="keyword">public</span> UserDao <span class="title function_">getObject</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">UserDaoImpl</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//返回所创建类的Class对象</span></span><br><span class="line">    <span class="keyword">public</span> Class&lt;?&gt; getObjectType() &#123;</span><br><span class="line">        <span class="keyword">return</span> UserDao.class;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在 Spring 的配置文件中进行配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userDao&quot;</span> <span class="attr">class</span>=<span class="string">&quot;bezhuang.spring.factory.UserDaoFactoryBean&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="bean-生命周期"><a href="#bean-生命周期" class="headerlink" title="bean 生命周期"></a>bean 生命周期</h4><p>bean 生命周期是 bean 对象从创建到销毁的整体过程。bean 生命周期控制的是在 bean 创建后到销毁前做一些事情。</p><p><img src="https://blog.zhuangzhihao.top/img/spring03.png" alt></p><p>Spring 中对 bean 生命周期控制提供了两种方式：</p><ul><li>在配置文件中的 bean 标签中添加 <code>init-method</code> 和 <code>destroy-method</code> 属性。</li><li>类实现 <code>InitializingBean</code> 与 <code>DisposableBean</code> 接口，这种方式了解下即可。</li></ul><p>对于 bean 的生命周期控制在 bean 的整个生命周期中所处的位置：</p><ul><li><p>初始化容器</p><ol><li>创建对象（内存分配）</li><li>执行构造方法</li><li>执行属性注入（set 操作）</li><li>执行 bean 初始化方法</li></ol></li><li><p>使用 bean：执行业务操作</p></li><li>关闭/销毁容器：执行 bean 销毁方法</li></ul><p>关闭容器的两种方式：（<code>ConfigurableApplicationContext</code> 是 <code>ApplicationContext</code> 的子类）</p><ul><li><code>close()</code> 方法</li><li><code>registerShutdownHook()</code> 方法</li></ul><h3 id="四、DI-相关内容"><a href="#四、DI-相关内容" class="headerlink" title="四、DI 相关内容"></a>四、DI 相关内容</h3><p>Spring 为我们提供了两种注入方式，setter 注入和构造器注入。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;大部分 Java 后端程序员在日常工作中都会接触到 Spring ，Spring 早已成为 Java 后端开发事实上的行业标准，因此，如何用好 Spring ，也就成为 Java 程序员的必修课之一。我在去年&lt;a href=&quot;/Java高级训练营/&quot;&gt;阿里云开发者社区的 Java 训练营&lt;/a&gt;中就接触过 Spring，但是仍然需要系统学习搞懂 Spring 相关的核心功能和实现原理。本文是 Spring 学习第二章——Spring 核心概念的笔记。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Java" scheme="http://blog.zhuangzhihao.top/categories/Java/"/>
    
    
    <category term="Spring" scheme="http://blog.zhuangzhihao.top/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>初识 Spring</title>
    <link href="http://blog.zhuangzhihao.top/%E5%88%9D%E8%AF%86Spring/"/>
    <id>http://blog.zhuangzhihao.top/%E5%88%9D%E8%AF%86Spring/</id>
    <published>2022-08-21T16:00:00.000Z</published>
    <updated>2022-12-10T14:28:41.341Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>大部分 Java 后端程序员在日常工作中都会接触到 Spring ，Spring 早已成为 Java 后端开发事实上的行业标准，因此，如何用好 Spring ，也就成为 Java 程序员的必修课之一。我在去年<a href="/Java高级训练营/">阿里云开发者社区的 Java 训练营</a>中就接触过 Spring，但是仍然需要系统学习搞懂 Spring 相关的核心功能和实现原理。本文是 Spring 学习第一章——初识 Spring 的笔记。</p></blockquote><span id="more"></span><h3 id="一、Spring，始于框架，不止于框架"><a href="#一、Spring，始于框架，不止于框架" class="headerlink" title="一、Spring，始于框架，不止于框架"></a>一、Spring，始于框架，不止于框架</h3><p>Spring 并不是单一的一个技术，而是一个大家族，可以从官网的 <a href="https://spring.io/projects">Projects</a> 中查看其包含的所有技术。</p><p>Spring Framework 诞生于 2002 年，成型于 2003 年，最早的作者为 Rod Johnson：《Expert One-on-One J2EE Design and Development》、《Expert One-on-One J2EE Development without EJB》。</p><p>Spring Framework 用于构建企业级应用的轻量级一站式解决方案，设计理念：力争让选择无处不在，体现海纳百川的精神，保持向后兼容性，专注 API 设计，追求严苛的代码质量。</p><p><img src="https://blog.zhuangzhihao.top/img/spring01.png" alt></p><p>Spring Boot 是快速构建基于 Spring 的应用程序，旨在简化 Spring 应用的初始搭建和开发过程。进可开箱即用，退可按需改动，提供各种非功能特性，不用生成代码，没有 XML 配置。</p><p>Spring Boot 遵循“约定优于配置”的原则，只需要很少的配置或使用默认的配置。能够使用内嵌的 Tomcat、Jetty 服务器，不需要部署 war 文件。提供定制化的启动器 Starters，简化 Maven 配置，开箱即用。纯 Java 配置，提供了生产级的服务监控方案，如安全监控、应用监控、健康检测等。</p><p>Spring Cloud 用于简化分布式系统的开发，提供配置管理、服务注册与发现、熔断、服务追踪等功能。</p><h3 id="二、第一个-Spring-程序"><a href="#二、第一个-Spring-程序" class="headerlink" title="二、第一个 Spring 程序"></a>二、第一个 Spring 程序</h3><p>﻿﻿通过 <a href="https://start.spring.io/"><code>Spring Initializr</code></a> 生成骨架，依赖勾选 Spring Web 和 Spring Boot Actuator，编写第一段代码，运行程序。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> bezhuang.spring.hello.hellospring;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloSpringApplication</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">      SpringApplication.run(HelloSpringApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">hello</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;Hello, Spring&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>访问 <a href="http://localhost:8080/hello：">http://localhost:8080/hello：</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://localhost:8080/hello</span><br></pre></td></tr></table></figure><p>也可以访问其他功能：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://localhost:8080/actuator/health</span><br></pre></td></tr></table></figure><p>访问 Maven 的 POM 文件，分析项目结构：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>bezhuang.spring.hello<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hello-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>hello-spring<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;大部分 Java 后端程序员在日常工作中都会接触到 Spring ，Spring 早已成为 Java 后端开发事实上的行业标准，因此，如何用好 Spring ，也就成为 Java 程序员的必修课之一。我在去年&lt;a href=&quot;/Java高级训练营/&quot;&gt;阿里云开发者社区的 Java 训练营&lt;/a&gt;中就接触过 Spring，但是仍然需要系统学习搞懂 Spring 相关的核心功能和实现原理。本文是 Spring 学习第一章——初识 Spring 的笔记。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Java" scheme="http://blog.zhuangzhihao.top/categories/Java/"/>
    
    
    <category term="Spring" scheme="http://blog.zhuangzhihao.top/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>前端开发库 Sass</title>
    <link href="http://blog.zhuangzhihao.top/Sass/"/>
    <id>http://blog.zhuangzhihao.top/Sass/</id>
    <published>2022-08-10T16:00:00.000Z</published>
    <updated>2022-08-14T02:53:54.648Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>freeCodeCamp 前端开发库第三章。Sass，英文全称为 “Syntactically Awesome StyleSheets”，是对 CSS 的扩展。它添加了一些基础 CSS 中不具有的新特性。Sass 简化了 CSS，这让维护项目中的样式表变得更容易。在这个 Sass 课程中，学习如何将数据存储在变量中、嵌套 CSS、创建可重用的样式、为样式添加逻辑和循环等等。</p></blockquote><span id="more"></span><h3 id="一、用-Sass-变量存储数据"><a href="#一、用-Sass-变量存储数据" class="headerlink" title="一、用 Sass 变量存储数据"></a>一、用 Sass 变量存储数据</h3><p>Sass 不同于 CSS 的一个特点是它允许使用变量。 可以在 Sass 中声明变量，并为它赋值，就像在 JavaScript 中一样。 在 Sass 中，变量以 <code>$</code> 开头的，后跟变量名：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$main-fonts</span>: Arial, sans-serif;</span><br><span class="line"><span class="variable">$headings-color</span>: green;</span><br></pre></td></tr></table></figure><p>并使用变量：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="variable">$main-fonts</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="variable">$headings-color</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当需要把多个元素设置成相同颜色时，变量就会很有用。 一旦需要更改颜色，只需要改变这个变量的值就好。</p><h3 id="二、用-Sass-嵌套-CSS"><a href="#二、用-Sass-嵌套-CSS" class="headerlink" title="二、用 Sass 嵌套 CSS"></a>二、用 Sass 嵌套 CSS</h3><p>Sass 允许 CSS 规则的嵌套，这在组织样式表的时候会很有用，对于一个大型项目，CSS 规则会很复杂，这时引入嵌套功能（即在对应的父元素中写子元素的样式）可以有效地简化代码：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">nav</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: red;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">li</span> &#123;</span><br><span class="line">      <span class="attribute">display</span>: inline-block;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三、-指令"><a href="#三、-指令" class="headerlink" title="三、@ 指令"></a>三、@ 指令</h3><h4 id="用-Mixins-创建可重用-CSS"><a href="#用-Mixins-创建可重用-CSS" class="headerlink" title="用 Mixins 创建可重用 CSS"></a>用 Mixins 创建可重用 CSS</h4><p>在 Sass 中，mixin 是一组 CSS 声明，可以在整个样式表中重复使用。CSS 的新功能需要一段时间适配后，所有浏览器后才能完全使用。 随着浏览器的不断升级，使用这些 CSS 规则时可能需要添加浏览器前缀。 考虑 <code>box-shadow</code>：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  -webkit-<span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">4px</span> <span class="number">#fff</span>;</span><br><span class="line">  -moz-<span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">4px</span> <span class="number">#fff</span>;</span><br><span class="line">  -ms-<span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">4px</span> <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">4px</span> <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对于所有具有 <code>box-shadow</code> 属性的元素重写此规则，或者更改每个值以测试不同的效果，需要花费大量的精力。 Mixins 就像 CSS 的函数。 以下是一个例子：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@mixin</span> box-shadow(<span class="variable">$x</span>, <span class="variable">$y</span>, <span class="variable">$blur</span>, <span class="variable">$c</span>)&#123; </span><br><span class="line">  -webkit-<span class="attribute">box-shadow</span>: <span class="variable">$x</span> <span class="variable">$y</span> <span class="variable">$blur</span> <span class="variable">$c</span>;</span><br><span class="line">  -moz-<span class="attribute">box-shadow</span>: <span class="variable">$x</span> <span class="variable">$y</span> <span class="variable">$blur</span> <span class="variable">$c</span>;</span><br><span class="line">  -ms-<span class="attribute">box-shadow</span>: <span class="variable">$x</span> <span class="variable">$y</span> <span class="variable">$blur</span> <span class="variable">$c</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="variable">$x</span> <span class="variable">$y</span> <span class="variable">$blur</span> <span class="variable">$c</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>定义以 <code>@mixin</code> 开头，后跟自定义名称。 参数（<code>$x</code>，<code>$y</code>，<code>$blur</code>，以及上例中的 <code>$c</code> ）是可选的。 现在在需要 <code>box-shadow</code> 规则的地方，只需一行 mixin 调用而无需添加所有的浏览器前缀。 mixin 可以通过 <code>@include</code> 指令调用。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="keyword">@include</span> box-shadow(<span class="number">0px</span>, <span class="number">0px</span>, <span class="number">4px</span>, <span class="number">#fff</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="使用-if-和-else-为样式添加逻辑"><a href="#使用-if-和-else-为样式添加逻辑" class="headerlink" title="使用 @if 和 @else 为样式添加逻辑"></a>使用 @if 和 @else 为样式添加逻辑</h4><p>Sass 中的 <code>@if</code> 指令对于测试特定情况非常有用——它的工作方式与 JavaScript 中的 <code>if</code> 语句类似。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@mixin</span> make-bold(<span class="variable">$bool</span>) &#123;</span><br><span class="line">  <span class="keyword">@if</span> <span class="variable">$bool</span> == true &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>类似 JavaScript，可以在 Sass 中使用 <code>@else if</code> 和 <code>@else</code> 测试更多条件：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@mixin</span> text-effect(<span class="variable">$val</span>) &#123;</span><br><span class="line">  <span class="keyword">@if</span> <span class="variable">$val</span> == danger &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">@else</span> if <span class="variable">$val</span> == alert &#123;</span><br><span class="line">    <span class="attribute">color</span>: yellow;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">@else</span> if <span class="variable">$val</span> == success &#123;</span><br><span class="line">    <span class="attribute">color</span>: green;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">@else</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: black;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="使用-for-创建一个-Sass-循环"><a href="#使用-for-创建一个-Sass-循环" class="headerlink" title="使用 @for 创建一个 Sass 循环"></a>使用 @for 创建一个 Sass 循环</h4><p>可以在 Sass 中使用 <code>@for</code> 循环添加样式，它的用法和 JavaScript 中的 <code>for</code> 循环类似。<code>@for</code> 以两种方式使用：“开始 through 结束” 或 “开始 to 结束”。 主要区别在于“开始 to 结束”不包括结束数字，而“开始 through 结束”包括结束号码。</p><p>这是一个开始 through 结束的示例：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@for</span> <span class="variable">$i</span> from <span class="number">1</span> through <span class="number">12</span> &#123;</span><br><span class="line">  <span class="selector-class">.col-</span>#&#123;<span class="variable">$i</span>&#125; &#123; <span class="attribute">width</span>: <span class="number">100%</span>/<span class="number">12</span> * <span class="variable">$i</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>#&#123;$i&#125;</code> 部分是将变量（<code>i</code>）与文本组合成字符串的语法。 当 Sass 文件转换为 CSS 时，它看起来像这样：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.col-1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">8.33333%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.col-2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">16.66667%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.col-12</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是创建网格布局的有效方法。 现在，有了 12 个可用作 CSS class 的列宽选项。</p><h4 id="使用-each-遍历列表中的项目"><a href="#使用-each-遍历列表中的项目" class="headerlink" title="使用 @each 遍历列表中的项目"></a>使用 @each 遍历列表中的项目</h4><p>Sass 还提供 <code>@each</code> 指令，该指令循环遍历列表或映射中的每个项目。 在每次迭代时，变量将从列表或映射分配给当前值。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@each</span> <span class="variable">$color</span> in blue, red, green &#123;</span><br><span class="line">  .#&#123;<span class="variable">$color</span>&#125;-text &#123;<span class="attribute">color</span>: <span class="variable">$color</span>;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>map 的语法略有不同。 这是一个示例：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$colors</span>: (color1: blue, color2: red, color3: green);</span><br><span class="line"></span><br><span class="line"><span class="keyword">@each</span> <span class="variable">$key</span>, <span class="variable">$color</span> in <span class="variable">$colors</span> &#123;</span><br><span class="line">  .#&#123;<span class="variable">$color</span>&#125;-text &#123;<span class="attribute">color</span>: <span class="variable">$color</span>;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>请注意，需要用 <code>$key</code> 变量来引用 map 中的键。 否则，编译后的 CSS 将包含 <code>color1</code>，<code>color2</code>…… 以上两个代码示例都转换为以下 CSS：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.blue-text</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: blue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.red-text</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.green-text</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="使用-while-循环创建样式"><a href="#使用-while-循环创建样式" class="headerlink" title="使用 @while 循环创建样式"></a>使用 @while 循环创建样式</h4><p>Sass 中的 <code>@while</code> 指令与 JavaScript 中的 <code>while</code> 类似。 只要满足条件，它就会一直创建 CSS 代码。<code>@for</code> 挑战提供了一个创建简单网格系统的示例。 用 <code>@while</code> 也可以实现。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$x</span>: <span class="number">1</span>;</span><br><span class="line"><span class="keyword">@while</span> <span class="variable">$x</span> &lt; <span class="number">13</span> &#123;</span><br><span class="line">  <span class="selector-class">.col-</span>#&#123;<span class="variable">$x</span>&#125; &#123; <span class="attribute">width</span>: <span class="number">100%</span>/<span class="number">12</span> * <span class="variable">$x</span>;&#125;</span><br><span class="line">  <span class="variable">$x</span>: <span class="variable">$x</span> + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先，定义变量 <code>$x</code> 并将其设置为 1。 接下来，使用 <code>@while</code> 指令，<em>while</em> <code>$x</code> 小于 13 时创建网格系统 。 在设置 <code>width</code> 的 CSS 规则后，<code>$x</code> 增加 1 以避免无限循环。</p><h3 id="四、用-Partials-将样式分成小块"><a href="#四、用-Partials-将样式分成小块" class="headerlink" title="四、用 Partials 将样式分成小块"></a>四、用 Partials 将样式分成小块</h3><p>Sass 中的 Partials 是包含 CSS 代码段的单独的文件。 这些片段可以导入其它 Sass 文件使用。 可以把类似代码放到模块中，以保持代码结构规整且易于管理。</p><p>partials 的名称以下划线（<code>_</code>）字符开头，这样 Sass 就知道它是 CSS 的一小部分，而不会将其转换为 CSS 文件。 此外，Sass 文件以 <code>.scss</code> 文件扩展名结尾。 要将 partial 中的代码放入另一个 Sass 文件中，使用 <code>@import</code> 指令。</p><p>例如，如果所有 mixins 都保存在名为 “_mixins.scss” 的 partial 中，并且在 “main.scss” 文件中需要它们，下面是使用方法：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@import</span> <span class="string">&#x27;mixins&#x27;</span></span><br></pre></td></tr></table></figure><p>请注意，<code>import</code> 语句中不需要下划线——Sass 知道它是 partial。 将 partial 导入文件后，可以使用所有变量、mixins 和其它代码。</p><h3 id="五、将一组-CSS-样式扩展到另一个元素"><a href="#五、将一组-CSS-样式扩展到另一个元素" class="headerlink" title="五、将一组 CSS 样式扩展到另一个元素"></a>五、将一组 CSS 样式扩展到另一个元素</h3><p>Sass 有一个名为 <code>extend</code> 的功能，可以很容易地从一个元素中借用 CSS 规则并在另一个元素上重用它们。</p><p>例如，下面的 CSS 规则块设置了 <code>.panel</code> class 的样式。 它有 <code>background-color</code>，<code>height</code> 和 <code>border</code>。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.panel</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: red;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">70px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">2px</span> solid green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在需要另一个名为 <code>.big-panel</code> 的面板。 它具有与 <code>.panel</code> 相同的基本属性，但还需要 <code>width</code> 和 <code>font-size</code>。 可以从 <code>.panel</code> 复制并粘贴初始 CSS 规则，但是当添加更多类型的面板时，代码会变得重复。 <code>extend</code> 指令是一种重用为一个元素编写的规则的简单方法，可以为另一个元素重用并添加更多规则：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.big-panel</span>&#123;</span><br><span class="line">  <span class="keyword">@extend</span> .panel;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">2em</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>除了新样式之外，<code>.big-panel</code> 将具有与 <code>.panel</code> 相同的属性。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;freeCodeCamp 前端开发库第三章。Sass，英文全称为 “Syntactically Awesome StyleSheets”，是对 CSS 的扩展。它添加了一些基础 CSS 中不具有的新特性。Sass 简化了 CSS，这让维护项目中的样式表变得更容易。在这个 Sass 课程中，学习如何将数据存储在变量中、嵌套 CSS、创建可重用的样式、为样式添加逻辑和循环等等。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Web前端" scheme="http://blog.zhuangzhihao.top/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    
  </entry>
  
</feed>
