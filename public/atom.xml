<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Bezhuang&#39;s Blog</title>
  
  <subtitle>庄之皓的博客网站</subtitle>
  <link href="http://blog.zhuangzhihao.top/atom.xml" rel="self"/>
  
  <link href="http://blog.zhuangzhihao.top/"/>
  <updated>2022-12-01T13:14:00.930Z</updated>
  <id>http://blog.zhuangzhihao.top/</id>
  
  <author>
    <name>Bezhuang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Selenium for Python</title>
    <link href="http://blog.zhuangzhihao.top/Selenium%E7%88%AC%E8%99%AB/"/>
    <id>http://blog.zhuangzhihao.top/Selenium%E7%88%AC%E8%99%AB/</id>
    <published>2022-11-30T16:00:00.000Z</published>
    <updated>2022-12-01T13:14:00.930Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="http://www.seleniumhq.org/">Selenium</a> 是一个 Web 的自动化测试工具，最初是为网站自动化测试而开发的，Selenium 可以直接运行在浏览器上，它支持所有主流的浏览器。因为 Selenium 可以控制浏览器发送请求，并获取网页数据，因此可以应用于爬虫领域。Selenium 可以根据我们的指令，让浏览器自动加载页面，获取需要的数据，甚至页面截屏，或者判断网站上某些动作是否发生。Selenium Python bindings 提供了一个简单的 API，让你使用 Python 和 Selenium WebDriver 来编写功能/校验测试。 </p></blockquote><span id="more"></span><h3 id="一、Selenium-概述"><a href="#一、Selenium-概述" class="headerlink" title="一、Selenium 概述"></a>一、Selenium 概述</h3><p>Selenium 支持多平台、多浏览器、多语言去实现自动化测试，是一个开源和可移植的 Web 测试框架，支持并行测试执行，从而减少了时间并提高了测试效率。利用它，我们可以编写相关的自动化程序，让程序完全像人一样在浏览器里面操作 Web 界面，比如模拟鼠标点击、模拟键盘输入等等。不但能够操作 Web 界面，还能从 Web 中获取信息，并且相对来说，使用 Selenium 来获取信息更加简单，它的基本原理是我们编写自动化程序之后利用浏览器驱动直接对浏览器进行操作，只要我们用户能在浏览器上获得的信息使用 Selenium 都可以获得。</p><p>安装 Selenium：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install selenium </span><br></pre></td></tr></table></figure><h3 id="二、浏览器驱动"><a href="#二、浏览器驱动" class="headerlink" title="二、浏览器驱动"></a>二、浏览器驱动</h3><p>Selenium 自己不带浏览器，不支持浏览器的功能，它需要与第三方浏览器结合在一起才能使用。浏览器驱动用于使用 selenium 操控本地浏览器执行自动化操作。根据本地电脑 Chrome 的版本需要下载对应的﻿﻿<a href="https://npmmirror.com/mirrors/chromedriver"> ChromeDriver</a>，否则无法操控 Chrome 浏览器使用 Selenium 启动。其他浏览器也可以下载对应的驱动包，例如：<a href="https://developer.microsoft.com/en-us/microsoft-edge/tools/webdriver/#downloads">新版 Edge 驱动</a>，<a href="https://github.com/mozilla/geckodriver/releases">Firefox 驱动</a>。</p><p>驱动包不需要安装，只需要解压到 <code>/usr/local/bin</code> 目录，后续会在代码中调用：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> ~/Downloads/msedgedriver  /usr/local/bin</span><br></pre></td></tr></table></figure><p>由于 Safari 浏览器本身已经集成了 <code>safaridriver</code>，只要勾选 Safari - 开发 - 允许远程自动化并在终端输入开启即可：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">safaridriver --<span class="built_in">enable</span></span><br></pre></td></tr></table></figure><h3 id="三、控制浏览器自动网页"><a href="#三、控制浏览器自动网页" class="headerlink" title="三、控制浏览器自动网页"></a>三、控制浏览器自动网页</h3><p>控制 Safari 浏览器打开网页：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入 webdriver</span></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="comment"># 调用环境变量指定的浏览器创建浏览器对象</span></span><br><span class="line">driver = webdriver.Safari()</span><br><span class="line"><span class="comment"># 隐性等待设置了一个时间，在一段时间内网页是否加载完成，如果完成了，就进行下一步；在设置的时间内没有加载完成，则会报超时加载。</span></span><br><span class="line">driver.implicitly_wait(<span class="number">10</span>)</span><br><span class="line"><span class="comment"># get方法会一直等到页面被完全加载，然后才会继续程序</span></span><br><span class="line">driver.get(<span class="string">&#x27;https://www.baidu.com&#x27;</span>)</span><br><span class="line"><span class="comment"># id=&quot;kw&quot;是百度搜索输入框，输入字符串&quot;长城&quot;</span></span><br><span class="line">driver.find_element(<span class="string">&#x27;id&#x27;</span>, <span class="string">&#x27;kw&#x27;</span>).send_keys(<span class="string">&#x27;长城&#x27;</span>)</span><br><span class="line"><span class="comment"># id=&quot;su&quot;是百度搜索按钮，click() 是模拟点击</span></span><br><span class="line">driver.find_element(<span class="string">&#x27;id&#x27;</span>, <span class="string">&#x27;su&#x27;</span>).click()</span><br><span class="line"><span class="comment"># 等待一定时间</span></span><br><span class="line">sleep(<span class="number">5</span>)</span><br><span class="line"><span class="comment"># 关闭浏览器</span></span><br><span class="line">driver.quit()</span><br></pre></td></tr></table></figure><p>当然也可以调用 Chrome 驱动，控制 Chrome 浏览器打开网页：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入 webdriver</span></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="comment"># 调用键盘按键操作时需要引入的Keys包</span></span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.keys <span class="keyword">import</span> Keys</span><br><span class="line"><span class="comment"># 调用环境变量指定的PhantomJS浏览器创建浏览器对象</span></span><br><span class="line">driver = webdriver.Chrome(<span class="string">&quot;/usr/local/bin/chromedriver&quot;</span>)</span><br><span class="line"><span class="comment"># get方法会一直等到页面被完全加载，然后才会继续程序，通常测试会在这里选择 time.sleep(2)</span></span><br><span class="line">driver.get(<span class="string">&quot;http://www.baidu.com/&quot;</span>)</span><br><span class="line"><span class="comment"># id=&quot;kw&quot;是百度搜索输入框，输入字符串&quot;长城&quot;</span></span><br><span class="line">driver.find_element(By.CSS_SELECTOR,<span class="string">&quot;#kw&quot;</span>).send_keys(<span class="string">&quot;长城&quot;</span>)</span><br><span class="line"><span class="comment"># id=&quot;su&quot;是百度搜索按钮，click() 是模拟点击</span></span><br><span class="line">driver.find_element(By.CSS_SELECTOR,<span class="string">&quot;#su&quot;</span>).click()</span><br><span class="line"><span class="comment"># 关闭浏览器</span></span><br><span class="line">driver.quit()</span><br></pre></td></tr></table></figure><h3 id="四、常用操作"><a href="#四、常用操作" class="headerlink" title="四、常用操作"></a>四、常用操作</h3><h4 id="元素定位"><a href="#元素定位" class="headerlink" title="元素定位"></a>元素定位</h4><p>获取单个元素：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">driver.find_element(By.ID,<span class="string">&quot;inputOriginal&quot;</span>)</span><br><span class="line">driver.find_element(By.CSS_SELECTOR,<span class="string">&quot;#inputOriginal&quot;</span>)</span><br><span class="line">driver.find_element(By.TAG_NAME,<span class="string">&quot;div&quot;</span>)</span><br><span class="line">driver.find_element(By.NAME,<span class="string">&quot;username&quot;</span>)</span><br><span class="line">driver.find_element(By.LINK_TEXT,<span class="string">&quot;下一页&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li>如果找不到相应的元素会报错：<code>selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: xx</code>。</li></ul><p>获取多个元素：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">driver.find_elements(By.ID,<span class="string">&quot;inputOriginal&quot;</span>)</span><br><span class="line">driver.find_elements(By.CSS_SELECTOR,<span class="string">&quot;#inputOriginal&quot;</span>)</span><br><span class="line">driver.find_elements(By.TAG_NAME,<span class="string">&quot;div&quot;</span>)</span><br><span class="line">driver.find_elements(By.NAME,<span class="string">&quot;username&quot;</span>)</span><br><span class="line">driver.find_elements(By.LINK_TEXT,<span class="string">&quot;下一页&quot;</span>)</span><br></pre></td></tr></table></figure><p>访问有道翻译网站，输入单词，并获取翻译后的内容：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line">driver = webdriver.Safari()</span><br><span class="line"><span class="comment"># 加载有道翻译页面</span></span><br><span class="line">driver.get(<span class="string">&quot;https://fanyi.youdao.com/&quot;</span>)</span><br><span class="line"><span class="comment"># 获取输入框</span></span><br><span class="line"><span class="built_in">input</span> = driver.find_element(By.ID,<span class="string">&quot;inputOriginal&quot;</span>)</span><br><span class="line"><span class="comment"># 输入内容</span></span><br><span class="line"><span class="built_in">input</span>.send_keys(<span class="string">&quot;hello&quot;</span>)</span><br><span class="line"><span class="comment"># 获取翻译按钮</span></span><br><span class="line">tbtn = driver.find_element(By.ID,<span class="string">&quot;transMachine&quot;</span>)</span><br><span class="line"><span class="comment"># 发现页面被遮挡，此时无法点击</span></span><br><span class="line"><span class="comment"># 先获取遮挡的广告条，点击关闭按钮</span></span><br><span class="line">close_btn = driver.find_element(By.CSS_SELECTOR,<span class="string">&quot;.guide-con .guide-close&quot;</span>)</span><br><span class="line">close_btn.click()</span><br><span class="line"><span class="comment">#点击翻译</span></span><br><span class="line">tbtn.click()</span><br><span class="line"><span class="comment">#获取翻译后的内容</span></span><br><span class="line">transTarget = driver.find_element(By.ID,<span class="string">&quot;transTarget&quot;</span>)</span><br><span class="line">sleep(<span class="number">5</span>)</span><br><span class="line"><span class="built_in">print</span>(transTarget.text)</span><br></pre></td></tr></table></figure><h4 id="内容获取"><a href="#内容获取" class="headerlink" title="内容获取"></a>内容获取</h4><ul><li><code>size</code>：返回元素大小；</li><li><code>text</code>：获取元素的文本（<code>&lt;div&gt;hello&lt;/div&gt;</code>）；</li><li><code>title</code>：获取页面 <code>title</code>；</li><li><code>current_url</code>：获取当前页面 <code>URL</code>；</li><li><code>get_attribute()</code>：获取属性值（<code>&lt;a href=&quot;xxxx&quot;&gt;百度&lt;/a&gt;</code>）；</li><li><code>is_display()</code>：判断元素是否可见；</li><li><code>is_enabled()</code>：判断元素是否可用。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">driver = webdriver.Chrome(<span class="string">&quot;./chromedriver.exe&quot;</span>)</span><br><span class="line"><span class="comment"># 加载有道翻译页面</span></span><br><span class="line">driver.get(<span class="string">&quot;https://fanyi.youdao.com/&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(driver.title)</span><br><span class="line"><span class="built_in">print</span>(driver.current_url)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取输入框</span></span><br><span class="line">transMachine = driver.find_element(By.ID,<span class="string">&quot;transMachine&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(transMachine.size)</span><br><span class="line"><span class="built_in">print</span>(transMachine.text)</span><br><span class="line"><span class="built_in">print</span>(transMachine.get_attribute(<span class="string">&quot;href&quot;</span>))</span><br><span class="line"><span class="built_in">print</span>(transMachine.is_displayed())</span><br><span class="line"><span class="built_in">print</span>(transMachine.is_enabled())</span><br></pre></td></tr></table></figure><h4 id="窗口操作"><a href="#窗口操作" class="headerlink" title="窗口操作"></a>窗口操作</h4><ul><li><code>maximize_window()</code>：模拟浏览器最大化按钮；</li><li><code>set_window_size(100,100)</code>：设置浏览器大小（宽、高像素点）；</li><li><code>set_window_position(300,200)</code>：设置浏览器位置；</li><li><code>back()</code>：模拟浏览器后退按钮；</li><li><code>forward()</code>：模拟浏览器前进按钮；</li><li><code>refresh()</code>：模拟浏览器 F5 刷新；</li><li><code>close()</code> ：模拟浏览器关闭按钮（关闭单个窗口）；</li><li><code>quit()</code>：关闭所有 WebDriver 启动的窗口。</li></ul><h3 id="五、元素等待"><a href="#五、元素等待" class="headerlink" title="五、元素等待"></a>五、元素等待</h3><p>例如对于程序翻页获取每页元素：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.keys <span class="keyword">import</span> Keys</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome(<span class="string">&quot;./chromedriver.exe&quot;</span>)</span><br><span class="line"><span class="comment"># 加载当当网</span></span><br><span class="line">driver.get(<span class="string">&quot;https://www.dangdang.com/&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取输入框</span></span><br><span class="line">key = driver.find_element(By.ID,<span class="string">&quot;key_S&quot;</span>)</span><br><span class="line">key.send_keys(<span class="string">&quot;科幻&quot;</span>)</span><br><span class="line"><span class="comment"># 获取搜索框，点击搜索</span></span><br><span class="line">search = driver.find_element(By.CSS_SELECTOR,<span class="string">&quot;.search .button&quot;</span>)</span><br><span class="line">search.click()</span><br><span class="line"><span class="comment"># 获取商品标题及价格</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    shoplist = driver.find_elements(By.CSS_SELECTOR, <span class="string">&quot;.shoplist li&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> li <span class="keyword">in</span> shoplist:</span><br><span class="line">        <span class="built_in">print</span>(li.find_element(By.CSS_SELECTOR, <span class="string">&quot;a&quot;</span>).get_attribute(<span class="string">&quot;title&quot;</span>))</span><br><span class="line">    <span class="comment"># 获取下一页按钮</span></span><br><span class="line">    <span class="built_in">next</span> = driver.find_element(By.LINK_TEXT, <span class="string">&quot;下一页&quot;</span>)</span><br><span class="line">    <span class="built_in">next</span>.click()</span><br></pre></td></tr></table></figure><p>现在的网页越来越多采用了 <code>Ajax</code> 技术，这样程序便不能确定何时某个元素完全加载出来了。如果实际页面等待时间过长导致某个 <code>dom</code> 元素还没出来，但是你的代码直接使用了这个 <code>WebElement</code>，那么就会抛出 <code>NullPointer</code> 的异常。</p><p>为了避免这种元素定位困难而且会提高产生 <code>ElementNotVisibleException</code> 的概率。所以 <code>Selenium</code> 提供了两种等待方式，一种是隐式等待，一种是显式等待。隐式等待是等待特定的时间，显式等待是指定某一条件直到这个条件成立时继续执行。</p><h4 id="显式等待"><a href="#显式等待" class="headerlink" title="显式等待"></a>显式等待</h4><p>显式等待使用 <code>WebDriverWait</code> 完成，指定某个条件，然后设置最长等待时间。如果在这个时间还没有找到元素，那么便会抛出异常了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WebDriverWait(driver, timeout, poll_frequency=POLL_FREQUENCY, ignored_exceptions=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><ul><li><code>driver</code>：所创建的浏览器 driver；</li><li><code>timeout</code>：最长时间长度（默认单位：秒）；</li><li><code>poll_frequency</code>：间隔检测时长（每）默认 0.5 秒；</li><li><code>ignored_exceptions</code>：方法调用中忽略的异常，默认只抛出找不到元素的异常。</li></ul><p>显式等待基础格式：<code>webDriverWait</code> + <code>until</code> +（判断条件）。</p><ul><li><p><code>until</code>：直到调用的方法返回值为 True：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">until(method, message=’’)</span><br><span class="line"><span class="comment"># method：expected_conditions 库中定义的方法</span></span><br><span class="line"><span class="comment"># message：自定义报错信息</span></span><br></pre></td></tr></table></figure></li><li><p>判断条件：</p><ul><li>判断当前页面标题是否为 <code>title</code>：<code>title_is(title)</code></li><li>判断当前页面标题是否包含 <code>title</code>：<code>title_contains(title)</code></li><li>判断此定位的元素是否存在：<code>presence_of_element_located(locator)</code></li><li>判断页面网址中是否包含 <code>url</code>：<code>url_contains(url)</code></li><li>判断此定位的元素是否可见：<code>visibility_of_element_located(locator)</code></li><li>判断此元素是否可见：<code>visibility_of(element)</code></li><li>判断此定位的一组元素是否至少存在一个：<code>presence_of_all_elements_located(locator)</code></li><li>判断此定位的一组元素至少有一个可见：<code>visibility_of_any_elements_located(locator)</code></li><li>判断此定位的一组元素全部可见：<code>visibility_of_all_elements_located(locator)</code></li><li>判断此定位中是否包含 <code>text_</code>的内容：<code>text_to_be_present_in_element(locator, text_)</code>_</li><li>判断此定位中的 <code>value</code> 属性中是否包含 <code>text_</code> 的内容：<code>text_to_be_present_in_element_value(locator, text_)</code></li><li>判断定位的元素是否为 <code>frame</code>，并直接切换到这个 <code>frame</code> 中：<code>frame_to_be_available_and_switch_to_it(locator)</code></li><li>判断定位的元素是否不可见：<code>invisibility_of_element_located(locator)</code></li><li>判断此元素是否不可见：<code>invisibility_of_element(element)</code></li><li>判断所定位的元素是否可见且可点击：<code>element_to_be_clickable(locator)</code></li><li>判断此元素是否不可用：<code>staleness_of(element)</code></li><li>判断该元素是否被选中：<code>element_to_be_selected(element)</code></li><li>判断定位的元素是否被选中：<code>element_located_to_be_selected(locator)</code></li><li><code>element</code>：所获得的元素</li><li><code>locator</code>：元素的定位信息</li><li><code>text_</code>：期望的文本信息</li></ul></li></ul><p>示例程序：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium.webdriver.support.ui <span class="keyword">import</span> WebDriverWait</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC</span><br><span class="line"><span class="comment"># 程序每0.5秒检查，是否满足：标题包含“百度一下”这个条件，检查是否满足条件的最长时间为：15秒，超过15秒仍未满足条件则抛出异常</span></span><br><span class="line">WebDriverWait(driver, <span class="number">15</span>, <span class="number">0.5</span>).until(EC.title_contains(<span class="string">&quot;百度一下&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 程序每0.5秒检查，是否满足：某定位的元素出现，检查是否满足条件的最长时间为：15秒，超过15秒仍未满足条件则抛出异常</span></span><br><span class="line">WebDriverWait(driver, <span class="number">15</span>, <span class="number">0.5</span>).until(EC.visibility_of_element_located(By.CSS_SELECTOR,<span class="string">&quot;XX&quot;</span>))</span><br></pre></td></tr></table></figure><h4 id="隐式等待"><a href="#隐式等待" class="headerlink" title="隐式等待"></a>隐式等待</h4><p>隐式等待比较简单，就是设置全局元素查找的超时时间：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">implicitly_wait(time_to_wait)</span><br></pre></td></tr></table></figure><p>设置的时间单位为秒，例如 <code>implicitly_wait(30)</code>，意思是超过 30 秒没有定位到一个元素，程序就会报错抛出异常，期间会一直轮询查找定位元素。</p><h3 id="六、页面操作和动作链"><a href="#六、页面操作和动作链" class="headerlink" title="六、页面操作和动作链"></a>六、页面操作和动作链</h3><h4 id="鼠标及键盘操作"><a href="#鼠标及键盘操作" class="headerlink" title="鼠标及键盘操作"></a>鼠标及键盘操作</h4><p>鼠标操作：</p><ul><li><code>context_click()</code>：此方法模拟鼠标右键点击效果；</li><li><code>double_click()</code>：此方法模拟双标双击效果；</li><li><code>drag_and_drop()</code>：此方法模拟双标拖动效果；</li><li><code>move_to_element()</code>：此方法模拟鼠标悬停效果；</li><li><code>perform()</code>：此方法用来触发执行以上的鼠标方法。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#导入动作链</span></span><br><span class="line"><span class="keyword">from</span> selenium.webdriver <span class="keyword">import</span> ActionChains</span><br><span class="line"></span><br><span class="line">driver.get(<span class="string">&quot;https://www.baidu.com/&quot;</span>)</span><br><span class="line">more = driver.find_element(By.LINK_TEXT,<span class="string">&quot;更多&quot;</span>)</span><br><span class="line"><span class="comment">#将鼠标移动到更多按钮</span></span><br><span class="line">ActionChains(driver).move_to_element(more).context_click().perform()</span><br></pre></td></tr></table></figure><p>键盘操作：</p><ul><li><code>send_keys(Keys.BACK_SPACE)</code>：删除键（BackSpace） ;</li><li><code>send_keys(Keys.SPACE)</code>：空格键（Space）;</li><li><code>send_keys(Keys.TAB)</code>：制表键（Tab）； </li><li><code>send_keys(Keys.ESCAPE)</code>：回退键（Esc）； </li><li><code>send_keys(Keys.ENTER)</code>：回车键（Enter） ；</li><li><code>send_keys(Keys.CONTROL,&#39;a&#39;)</code>：全选（Ctrl+A）； </li><li><code>send_keys(Keys.CONTROL,&#39;c&#39;)</code>：复制（Ctrl+C）；</li><li><code>driver.forward()</code>：前进；</li><li><code>driver.back()</code>：后退。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium.webdriver.common.keys <span class="keyword">import</span> Keys</span><br><span class="line"></span><br><span class="line">driver.get(<span class="string">&quot;https://www.baidu.com/&quot;</span>)</span><br><span class="line"></span><br><span class="line">element = driver.find_element(By.ID,<span class="string">&quot;kw&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输入用户名</span></span><br><span class="line">element.send_keys(<span class="string">&quot;admin1&quot;</span>)</span><br><span class="line"><span class="comment"># 删除1</span></span><br><span class="line">element.send_keys(Keys.BACK_SPACE)</span><br><span class="line"><span class="comment"># 全选</span></span><br><span class="line">element.send_keys(Keys.CONTROL,<span class="string">&#x27;a&#x27;</span>)</span><br><span class="line"><span class="comment"># 复制</span></span><br><span class="line">element.send_keys(Keys.CONTROL,<span class="string">&#x27;c&#x27;</span>)</span><br><span class="line"><span class="comment"># 粘贴</span></span><br><span class="line"><span class="comment"># element.send_keys(Keys.CONTROL,&#x27;v&#x27;)</span></span><br></pre></td></tr></table></figure><h4 id="滚动条操作"><a href="#滚动条操作" class="headerlink" title="滚动条操作"></a>滚动条操作</h4><p>在 HTML 页面中，由于前端技术框架的原因，页面元素为动态显示，元素根据滚动条的下拉而被加载：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1. 设置 JavaScritp 脚本控制滚动条（左边距：0；上边距：1000）</span></span><br><span class="line"><span class="comment"># 单位像素</span></span><br><span class="line">js=<span class="string">&quot;window.scrollTo(0,1000)&quot;</span> </span><br><span class="line"><span class="comment">#2. WebDriver 调用 JS 脚本方法</span></span><br><span class="line">driver.execute_script(js)</span><br></pre></td></tr></table></figure><h4 id="窗口截图"><a href="#窗口截图" class="headerlink" title="窗口截图"></a>窗口截图</h4><p>自动化脚本是由程序去执行的，因此有时候打印的错误信息并不是十分明确。如果在执行出错的时候对当前窗口截图保存，那么通过图片就可以非常直观地看到出错的原因：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 截取当前窗口</span></span><br><span class="line">driver.get_screenshot_as_file(<span class="string">&quot;./demo.png&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="七、存储数据"><a href="#七、存储数据" class="headerlink" title="七、存储数据"></a>七、存储数据</h3><p>将数据写入 CSV 文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 读写CSV文件</span></span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"><span class="comment"># 以写入方式打开文件，如果文件不存在则自动创建</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;/Users/zhihaozhuang/Downloads/test.csv&quot;</span>, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line"><span class="comment"># 获取csv writer，用于写入csv格式数据</span></span><br><span class="line">writer = csv.writer(f)</span><br><span class="line"><span class="comment"># 写入数据</span></span><br><span class="line">writer.writerow([<span class="string">&quot;张三&quot;</span>, <span class="string">&quot;男&quot;</span>, <span class="string">&quot;1.7&quot;</span>])</span><br><span class="line"><span class="comment"># 关闭文件</span></span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>使用 <a href="https://zhuanlan.zhihu.com/p/60003892">pymysql</a> 将数据写入至 MySQL：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install pymysql</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line">  </span><br><span class="line"><span class="comment"># 创建连接</span></span><br><span class="line">conn = pymysql.connect(host=<span class="string">&#x27;127.0.0.1&#x27;</span>, port=<span class="number">3306</span>, user=<span class="string">&#x27;root&#x27;</span>, passwd=<span class="string">&#x27;&#x27;</span>, db=<span class="string">&#x27;tkq1&#x27;</span>, charset=<span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line"><span class="comment"># 创建游标</span></span><br><span class="line">cursor = conn.cursor()</span><br><span class="line">  </span><br><span class="line"><span class="comment"># 执行SQL，并返回收影响行数</span></span><br><span class="line">effect_row = cursor.execute(<span class="string">&quot;select * from tb7&quot;</span>)</span><br><span class="line">  </span><br><span class="line"><span class="comment"># 执行SQL，并返回受影响行数</span></span><br><span class="line"><span class="comment">#effect_row = cursor.execute(&quot;update tb7 set pass = &#x27;123&#x27; where nid = %s&quot;, (11,))</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 执行SQL，并返回受影响行数,执行多次</span></span><br><span class="line"><span class="comment">#effect_row = cursor.executemany(&quot;insert into tb7(user,pass,licnese)values(%s,%s,%s)&quot;, [(&quot;u1&quot;,&quot;u1pass&quot;,&quot;11111&quot;),(&quot;u2&quot;,&quot;u2pass&quot;,&quot;22222&quot;)])</span></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="comment"># 提交，不然无法保存新建或者修改的数据</span></span><br><span class="line">conn.commit()</span><br><span class="line">  </span><br><span class="line"><span class="comment"># 关闭游标</span></span><br><span class="line">cursor.close()</span><br><span class="line"><span class="comment"># 关闭连接</span></span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure><h3 id="八、下载页面上的图片"><a href="#八、下载页面上的图片" class="headerlink" title="八、下载页面上的图片"></a>八、下载页面上的图片</h3><p>可以借助 <code>requests</code> 库来完成图片的保存，通过 <code>selenium</code> 获取图片的地址，再通过 <code>requests</code> 来将图片保存到本地。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install requests</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">driver = webdriver.Safari()</span><br><span class="line">driver.implicitly_wait(<span class="number">30</span>)</span><br><span class="line"></span><br><span class="line">driver.get(<span class="string">&#x27;http://baidu.com&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#  使用get_attribute()方法获取对应属性的属性值，src属性值就是图片地址。</span></span><br><span class="line">url = driver.find_element_by_css_selector(<span class="string">&#x27;#lg&gt;img&#x27;</span>).get_attribute(<span class="string">&#x27;src&#x27;</span>)</span><br><span class="line">driver.quit()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过requests发送一个get请求到图片地址，返回的响应就是图片内容</span></span><br><span class="line">r = requests.get(url)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将获取到的图片二进制流写入本地文件</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;baidu.png&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="comment"># 对于图片类型的通过r.content方式访问响应内容，将响应内容写入baidu.png中</span></span><br><span class="line">    f.write(r.content)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://www.seleniumhq.org/&quot;&gt;Selenium&lt;/a&gt; 是一个 Web 的自动化测试工具，最初是为网站自动化测试而开发的，Selenium 可以直接运行在浏览器上，它支持所有主流的浏览器。因为 Selenium 可以控制浏览器发送请求，并获取网页数据，因此可以应用于爬虫领域。Selenium 可以根据我们的指令，让浏览器自动加载页面，获取需要的数据，甚至页面截屏，或者判断网站上某些动作是否发生。Selenium Python bindings 提供了一个简单的 API，让你使用 Python 和 Selenium WebDriver 来编写功能/校验测试。 &lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Python" scheme="http://blog.zhuangzhihao.top/categories/Python/"/>
    
    
    <category term="Automation" scheme="http://blog.zhuangzhihao.top/tags/Automation/"/>
    
  </entry>
  
  <entry>
    <title>React 即时通信 ChatUI 其他列表组件</title>
    <link href="http://blog.zhuangzhihao.top/ChatUI%E5%85%B6%E4%BB%96%E5%88%97%E8%A1%A8/"/>
    <id>http://blog.zhuangzhihao.top/ChatUI%E5%85%B6%E4%BB%96%E5%88%97%E8%A1%A8/</id>
    <published>2022-11-24T16:00:00.000Z</published>
    <updated>2022-11-25T13:57:39.713Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>React 即时通信 UI 实战第九章。React 即时通信 UI 实战为<a href="https://www.bilibili.com/video/BV1PK4y1b7bY?p=2&amp;spm_id_from=pageDriver&amp;vd_source=0965c74096f788f105780e5d5d0e9ebf">峰华前端工程师</a>推出的 React 实战课程，以聊天（即时通信）为原型，构建了一整套的 UI 组件库，课程重点在于 UI 组件的分析和实现，力求打造自用组件库。本章包括其他列表组件，包括联系人列表、笔记列表和文件列表组件。</p></blockquote><span id="more"></span><h3 id="一、抽离过滤列表组件"><a href="#一、抽离过滤列表组件" class="headerlink" title="一、抽离过滤列表组件"></a>一、抽离过滤列表组件</h3><p>使用 Hygen 创建一个 <code>FilterList</code> 组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new FilterList</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/FilterList/index.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledFilterList</span> <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Input</span> <span class="keyword">from</span> <span class="string">&quot;components/Input&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Filter</span> <span class="keyword">from</span> <span class="string">&quot;components/Filter&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Select</span> <span class="keyword">from</span> <span class="string">&quot;components/Select&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Option</span> <span class="keyword">from</span> <span class="string">&quot;components/Option&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Button</span> <span class="keyword">from</span> <span class="string">&quot;components/Button&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">Plus</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/plus.svg&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">FilterList</span>(<span class="params">&#123;</span></span><br><span class="line"><span class="params">  children,</span></span><br><span class="line"><span class="params">  options,</span></span><br><span class="line"><span class="params">  filterLabel = <span class="string">&quot;列表排序&quot;</span>,</span></span><br><span class="line"><span class="params">  actionLabel,</span></span><br><span class="line"><span class="params">  ...rest</span></span><br><span class="line"><span class="params">&#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledFilterList</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Input.Search</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Filter</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">padding:</span> &quot;<span class="attr">20px</span> <span class="attr">0</span>&quot; &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;options &amp;&amp; (</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Filter.Filters</span> <span class="attr">label</span>=<span class="string">&#123;filterLabel&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              &#123;options.map((option, index) =&gt; (</span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">Option</span> <span class="attr">key</span>=<span class="string">&#123;index&#125;</span>&gt;</span>&#123;option&#125;<span class="tag">&lt;/<span class="name">Option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              ))&#125;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">Select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">Filter.Filters</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        )&#125;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        &#123;actionLabel &amp;&amp; (</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Filter.Action</span> <span class="attr">label</span>=<span class="string">&#123;actionLabel&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Icon</span> <span class="attr">icon</span>=<span class="string">&#123;Plus&#125;</span> <span class="attr">width</span>=<span class="string">&#123;12&#125;</span> <span class="attr">height</span>=<span class="string">&#123;12&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">Filter.Action</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        )&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Filter</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledFilterList</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">FilterList</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">  <span class="attr">options</span>: <span class="title class_">PropTypes</span>.<span class="property">array</span>,</span><br><span class="line">  <span class="attr">filterLabel</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">  <span class="attr">actionLabel</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">FilterList</span>;</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/FilterList/style.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledFilterList</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  padding: 30px;</span></span><br><span class="line"><span class="string">  height: 100vh;</span></span><br><span class="line"><span class="string">  overflow-y: auto;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledFilterList</span>;</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/FilterList/filterList.stories.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">FilterList</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;页面组件/FilterList&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">FilterList</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">FilterList</span>&gt;</span>此处添加 children list<span class="tag">&lt;/<span class="name">FilterList</span>&gt;</span></span>;</span><br></pre></td></tr></table></figure><p>再让 <code>MessageList</code> 使用新抽离出的 <code>FilterList</code> 组件，编辑 <code>src/components/MessageList/index.js</code>  文件：：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledMessageList</span>, &#123; <span class="title class_">ChatList</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">Plus</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/plus.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Filter</span> <span class="keyword">from</span> <span class="string">&quot;components/Filter&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Select</span> <span class="keyword">from</span> <span class="string">&quot;components/Select&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Option</span> <span class="keyword">from</span> <span class="string">&quot;components/Option&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Button</span> <span class="keyword">from</span> <span class="string">&quot;components/Button&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Input</span> <span class="keyword">from</span> <span class="string">&quot;components/Input&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">MessageCard</span> <span class="keyword">from</span> <span class="string">&quot;components/MessageCard&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> face1 <span class="keyword">from</span> <span class="string">&quot;assets/images/face-male-1.jpg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">FilterList</span> <span class="keyword">from</span> <span class="string">&quot;components/FilterList&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">MessageList</span>(<span class="params">&#123; children, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledMessageList</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">FilterList</span> <span class="attr">options</span>=<span class="string">&#123;[</span>&quot;<span class="attr">最新消息优先</span>&quot;, &quot;<span class="attr">在线好友优先</span>&quot;]&#125; <span class="attr">actionLabel</span>=<span class="string">&quot;创建会话&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ChatList</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          &#123;[1, 2, 3, 4, 5, 6].map((_, index) =&gt; (</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">MessageCard</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">key</span>=<span class="string">&#123;index&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">active</span>=<span class="string">&#123;index</span> === <span class="string">3&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">replied</span>=<span class="string">&#123;index</span> % <span class="attr">3</span> === <span class="string">0&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">avatarSrc</span>=<span class="string">&#123;face1&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">name</span>=<span class="string">&quot;李铭浩&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">avatarStatus</span>=<span class="string">&quot;online&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">statusText</span>=<span class="string">&quot;在线&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">time</span>=<span class="string">&quot;3 小时之前&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">message</span>=<span class="string">&quot;即使爬到最高的山上，一次也只能脚踏实地地&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">unreadCount</span>=<span class="string">&#123;2&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            /&gt;</span></span></span><br><span class="line"><span class="language-xml">          ))&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">ChatList</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">FilterList</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledMessageList</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">MessageList</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">MessageList</span>;</span><br></pre></td></tr></table></figure><h3 id="二、联系人列表组件开发"><a href="#二、联系人列表组件开发" class="headerlink" title="二、联系人列表组件开发"></a>二、联系人列表组件开发</h3><p>使用 Hygen 创建一个 <code>ContactCard</code> 组件，用于展示联系人卡片：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new ContactCard</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/ContactCard/index.js</code>  文件：：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">import React from <span class="string">&quot;react&quot;</span>;</span><br><span class="line">import PropTypes from <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line">import StyledContactCard, &#123; Intro, Name &#125; from <span class="string">&quot;./style&quot;</span>;</span><br><span class="line">import face from <span class="string">&quot;assets/images/face-male-1.jpg&quot;</span>;</span><br><span class="line">import Avatar from <span class="string">&quot;components/Avatar&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> ContactCard(&#123; children, ...rest &#125;) &#123;</span><br><span class="line">  <span class="built_in">return</span> (</span><br><span class="line">    &lt;StyledContactCard &#123;...rest&#125;&gt;</span><br><span class="line">      &lt;Avatar src=&#123;face&#125; status=<span class="string">&quot;online&quot;</span> /&gt;</span><br><span class="line">      &lt;Name&gt;李浩&lt;/Name&gt;</span><br><span class="line">      &lt;Intro&gt;我是前端工程师&lt;/Intro&gt;</span><br><span class="line">    &lt;/StyledContactCard&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ContactCard.propTypes = &#123;</span><br><span class="line">  children: PropTypes.any,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> default ContactCard;</span><br></pre></td></tr></table></figure><p>再在 <code>style.js</code> 中修改样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Paragraph</span> <span class="keyword">from</span> <span class="string">&quot;components/Paragraph&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; card &#125; <span class="keyword">from</span> <span class="string">&quot;utils/mixins&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledAvatar</span> <span class="keyword">from</span> <span class="string">&quot;components/Avatar/style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Name</span> = <span class="title function_">styled</span>(<span class="title class_">Paragraph</span>).<span class="title function_">attrs</span>(&#123; <span class="attr">size</span>: <span class="string">&quot;large&quot;</span> &#125;)<span class="string">`</span></span><br><span class="line"><span class="string">  grid-area: name;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Intro</span> = <span class="title function_">styled</span>(<span class="title class_">Paragraph</span>).<span class="title function_">attrs</span>(&#123; <span class="attr">type</span>: <span class="string">&quot;secondary&quot;</span> &#125;)<span class="string">`</span></span><br><span class="line"><span class="string">  grid-area: intro;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledContactCard</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;card()&#125;</span></span></span><br><span class="line"><span class="string">  display: grid;</span></span><br><span class="line"><span class="string">  grid-template-areas:</span></span><br><span class="line"><span class="string">    &quot;avatar name&quot;</span></span><br><span class="line"><span class="string">    &quot;avatar intro&quot;;</span></span><br><span class="line"><span class="string">  grid-template-columns: 62px auto;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;StyledAvatar&#125;</span> &#123;</span></span><br><span class="line"><span class="string">    grid-area: avatar;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledContactCard</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">Name</span>, <span class="title class_">Intro</span> &#125;;</span><br></pre></td></tr></table></figure><p>最后修改 <code>contactCard.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ContactCard</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/ContactCard&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">ContactCard</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">ContactCard</span> /&gt;</span></span>;</span><br></pre></td></tr></table></figure><p>使用 Hygen 创建一个 <code>ContactList</code> 组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new ContactList</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/ContactList/index.js</code>  文件：：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">import React from <span class="string">&quot;react&quot;</span>;</span><br><span class="line">import PropTypes from <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line">import StyledContactList, &#123; Contacts &#125; from <span class="string">&quot;./style&quot;</span>;</span><br><span class="line">import FilterList from <span class="string">&quot;components/FilterList&quot;</span>;</span><br><span class="line">import ContactCard from <span class="string">&quot;components/ContactCard&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> ContactList(&#123; children, ...rest &#125;) &#123;</span><br><span class="line">  <span class="built_in">return</span> (</span><br><span class="line">    &lt;StyledContactList &#123;...rest&#125;&gt;</span><br><span class="line">      &lt;FilterList options=&#123;[<span class="string">&quot;新添加优先&quot;</span>, <span class="string">&quot;按姓名排序&quot;</span>]&#125; actionLabel=<span class="string">&quot;添加好友&quot;</span>&gt;</span><br><span class="line">        &lt;Contacts&gt;</span><br><span class="line">          &#123;new Array(10).fill(0).map((_, i) =&gt; (</span><br><span class="line">            &lt;ContactCard key=&#123;i&#125; /&gt;</span><br><span class="line">          ))&#125;</span><br><span class="line">        &lt;/Contacts&gt;</span><br><span class="line">      &lt;/FilterList&gt;</span><br><span class="line">    &lt;/StyledContactList&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ContactList.propTypes = &#123;</span><br><span class="line">  children: PropTypes.any,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> default ContactList;</span><br></pre></td></tr></table></figure><p>再在 <code>style.js</code> 中修改样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Contacts</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  margin-top: -8px;</span></span><br><span class="line"><span class="string">  &amp; &gt; * &#123;</span></span><br><span class="line"><span class="string">    margin: 8px 0;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledContactList</span> = styled.<span class="property">div</span><span class="string">``</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledContactList</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">Contacts</span> &#125;;</span><br></pre></td></tr></table></figure><p>最后修改 <code>contactList.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ContactList</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;页面组件/ContactList&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">ContactList</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">ContactList</span> /&gt;</span></span>;</span><br></pre></td></tr></table></figure><h3 id="三、文件列表组件开发"><a href="#三、文件列表组件开发" class="headerlink" title="三、文件列表组件开发"></a>三、文件列表组件开发</h3><p>使用 Hygen 创建一个 <code>FileCard</code> 组件，用于展示联系人卡片：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new FileCard</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/FileCard/index.js</code>  文件：：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">import React from <span class="string">&quot;react&quot;</span>;</span><br><span class="line">import PropTypes from <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line">import StyledFileCard, &#123;</span><br><span class="line">  FileName,</span><br><span class="line">  FileSize,</span><br><span class="line">  Options,</span><br><span class="line">  Time,</span><br><span class="line">  FileIcon,</span><br><span class="line">&#125; from <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"></span><br><span class="line">import &#123; ReactComponent as FileZip &#125; from <span class="string">&quot;assets/icon/fileZip.svg&quot;</span>;</span><br><span class="line">import &#123; ReactComponent as FileExcel &#125; from <span class="string">&quot;assets/icon/fileExcel.svg&quot;</span>;</span><br><span class="line">import &#123; ReactComponent as FileWord &#125; from <span class="string">&quot;assets/icon/fileWord.svg&quot;</span>;</span><br><span class="line">import &#123; ReactComponent as FilePpt &#125; from <span class="string">&quot;assets/icon/filePpt.svg&quot;</span>;</span><br><span class="line">import &#123; ReactComponent as FileImage &#125; from <span class="string">&quot;assets/icon/fileImage.svg&quot;</span>;</span><br><span class="line">import &#123; ReactComponent as FilePdf &#125; from <span class="string">&quot;assets/icon/filePdf.svg&quot;</span>;</span><br><span class="line">import &#123; ReactComponent as OptionsIcon &#125; from <span class="string">&quot;assets/icon/options.svg&quot;</span>;</span><br><span class="line">import Icon from <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"></span><br><span class="line">const fileIcons = &#123;</span><br><span class="line">  zip: FileZip,</span><br><span class="line">  image: FileImage,</span><br><span class="line">  pdf: FilePdf,</span><br><span class="line">  word: FileWord,</span><br><span class="line">  excel: FileExcel,</span><br><span class="line">  ppt: FilePpt,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> FileCard(&#123; children, ...rest &#125;) &#123;</span><br><span class="line">  <span class="built_in">return</span> (</span><br><span class="line">    &lt;StyledFileCard &#123;...rest&#125;&gt;</span><br><span class="line">      &lt;FileIcon icon=&#123;fileIcons.zip&#125; /&gt;</span><br><span class="line">      &lt;FileName&gt;Source Code.zip&lt;/FileName&gt;</span><br><span class="line">      &lt;FileSize&gt;1.5M&lt;/FileSize&gt;</span><br><span class="line">      &lt;Options&gt;</span><br><span class="line">        &lt;Icon icon=&#123;OptionsIcon&#125; opacity=&#123;0.3&#125; /&gt;</span><br><span class="line">      &lt;/Options&gt;</span><br><span class="line">      &lt;Time&gt;2019年02月03日&lt;/Time&gt;</span><br><span class="line">    &lt;/StyledFileCard&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">FileCard.propTypes = &#123;</span><br><span class="line">  children: PropTypes.any,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> default FileCard;</span><br></pre></td></tr></table></figure><p>再在 <code>style.js</code> 中修改样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Heading</span> <span class="keyword">from</span> <span class="string">&quot;components/Heading&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Paragraph</span> <span class="keyword">from</span> <span class="string">&quot;components/Paragraph&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Popover</span> <span class="keyword">from</span> <span class="string">&quot;components/Popover&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; card &#125; <span class="keyword">from</span> <span class="string">&quot;utils/mixins&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">FileIcon</span> = <span class="title function_">styled</span>(<span class="title class_">Icon</span>).<span class="title function_">attrs</span>(&#123;</span><br><span class="line">  <span class="attr">width</span>: <span class="number">60</span>,</span><br><span class="line">  <span class="attr">height</span>: <span class="number">60</span>,</span><br><span class="line">&#125;)<span class="string">`</span></span><br><span class="line"><span class="string">  grid-area: icon;</span></span><br><span class="line"><span class="string">  justify-self: start;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">FileName</span> = <span class="title function_">styled</span>(<span class="title class_">Heading</span>).<span class="title function_">attrs</span>(&#123; <span class="attr">level</span>: <span class="number">2</span> &#125;)<span class="string">`</span></span><br><span class="line"><span class="string">  grid-area: name;</span></span><br><span class="line"><span class="string">  align-self: center;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">FileSize</span> = <span class="title function_">styled</span>(<span class="title class_">Paragraph</span>).<span class="title function_">attrs</span>(&#123; <span class="attr">type</span>: <span class="string">&quot;secondary&quot;</span> &#125;)<span class="string">`</span></span><br><span class="line"><span class="string">  grid-area: size;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Options</span> = <span class="title function_">styled</span>(<span class="title class_">Popover</span>)<span class="string">`</span></span><br><span class="line"><span class="string">  grid-area: options;</span></span><br><span class="line"><span class="string">  justify-self: end;</span></span><br><span class="line"><span class="string">  align-self: center;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Time</span> = <span class="title function_">styled</span>(<span class="title class_">Paragraph</span>).<span class="title function_">attrs</span>(&#123; <span class="attr">type</span>: <span class="string">&quot;secondary&quot;</span> &#125;)<span class="string">`</span></span><br><span class="line"><span class="string">  grid-area: time;</span></span><br><span class="line"><span class="string">  justify-self: end;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledFileCard</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;card()&#125;</span></span></span><br><span class="line"><span class="string">  display: grid;</span></span><br><span class="line"><span class="string">  grid-template-areas:</span></span><br><span class="line"><span class="string">    &quot;icon name options&quot;</span></span><br><span class="line"><span class="string">    &quot;icon size time&quot;;</span></span><br><span class="line"><span class="string">  grid-template-columns: 74px 1fr 1fr;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledFileCard</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">FileIcon</span>, <span class="title class_">FileName</span>, <span class="title class_">FileSize</span>, <span class="title class_">Options</span>, <span class="title class_">Time</span> &#125;;</span><br></pre></td></tr></table></figure><p>最后修改 <code>fileCard.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">FileCard</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/FileCard&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">FileCard</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">FileCard</span> /&gt;</span></span>;</span><br></pre></td></tr></table></figure><p>使用 Hygen 创建一个 <code>FileList</code> 组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new FileList</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/FileList/index.js</code>  文件：：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">import React from <span class="string">&quot;react&quot;</span>;</span><br><span class="line">import PropTypes from <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line">import StyledFileList, &#123; Files &#125; from <span class="string">&quot;./style&quot;</span>;</span><br><span class="line">import FilterList from <span class="string">&quot;components/FilterList&quot;</span>;</span><br><span class="line">import FileCard from <span class="string">&quot;components/FileCard&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> FileList(&#123; children, ...rest &#125;) &#123;</span><br><span class="line">  <span class="built_in">return</span> (</span><br><span class="line">    &lt;StyledFileList &#123;...rest&#125;&gt;</span><br><span class="line">      &lt;FilterList options=&#123;[<span class="string">&quot;最新文件优先&quot;</span>, <span class="string">&quot;按文件名排序&quot;</span>]&#125;&gt;</span><br><span class="line">        &lt;Files&gt;</span><br><span class="line">          &#123;new Array(10).fill(0).map((_, i) =&gt; (</span><br><span class="line">            &lt;FileCard key=&#123;i&#125; /&gt;</span><br><span class="line">          ))&#125;</span><br><span class="line">        &lt;/Files&gt;</span><br><span class="line">      &lt;/FilterList&gt;</span><br><span class="line">    &lt;/StyledFileList&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">FileList.propTypes = &#123;</span><br><span class="line">  children: PropTypes.any,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> default FileList;</span><br></pre></td></tr></table></figure><p>再在 <code>style.js</code> 中修改样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Files</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  margin-top: -8px;</span></span><br><span class="line"><span class="string">  &amp; &gt; * &#123;</span></span><br><span class="line"><span class="string">    margin: 8px 0;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledFileList</span> = styled.<span class="property">div</span><span class="string">``</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledFileList</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">Files</span> &#125;;</span><br></pre></td></tr></table></figure><p>最后修改 <code>fileList.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">FileList</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;页面组件/FileList&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">FileList</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">FileList</span> /&gt;</span></span>;</span><br></pre></td></tr></table></figure><h3 id="四、笔记列表组件开发"><a href="#四、笔记列表组件开发" class="headerlink" title="四、笔记列表组件开发"></a>四、笔记列表组件开发</h3><p>使用 Hygen 创建一个 <code>NoteCard</code> 组件，用于展示联系人卡片：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new NoteCard</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/NoteCard/index.js</code>  文件：：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">import note1 from <span class="string">&quot;assets/images/note-1.jpg&quot;</span>;</span><br><span class="line">import PropTypes from <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line">import React from <span class="string">&quot;react&quot;</span>;</span><br><span class="line">import StyledNoteCard, &#123;</span><br><span class="line">  NoteImage,</span><br><span class="line">  NoteTitle,</span><br><span class="line">  NoteExcerpt,</span><br><span class="line">  NotePublishTime,</span><br><span class="line">&#125; from <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> NoteCard(&#123; children, ...rest &#125;) &#123;</span><br><span class="line">  <span class="built_in">return</span> (</span><br><span class="line">    &lt;StyledNoteCard &#123;...rest&#125;&gt;</span><br><span class="line">      &lt;NoteImage src=&#123;note1&#125; /&gt;</span><br><span class="line">      &lt;NoteTitle&gt;这是笔记标题&lt;/NoteTitle&gt;</span><br><span class="line">      &lt;NoteExcerpt&gt;这是笔记内容摘要&lt;/NoteExcerpt&gt;</span><br><span class="line">      &lt;NotePublishTime&gt;2020-02-08&lt;/NotePublishTime&gt;</span><br><span class="line">    &lt;/StyledNoteCard&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">NoteCard.propTypes = &#123;</span><br><span class="line">  children: PropTypes.any,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> default NoteCard;</span><br></pre></td></tr></table></figure><p>再在 <code>style.js</code> 中修改样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Heading</span> <span class="keyword">from</span> <span class="string">&quot;components/Heading&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Paragraph</span> <span class="keyword">from</span> <span class="string">&quot;components/Paragraph&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; card &#125; <span class="keyword">from</span> <span class="string">&quot;utils/mixins&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">NoteImage</span> = styled.<span class="property">img</span><span class="string">`</span></span><br><span class="line"><span class="string">  grid-area: image;</span></span><br><span class="line"><span class="string">  width: 60px;</span></span><br><span class="line"><span class="string">  height: 60px;</span></span><br><span class="line"><span class="string">  object-fit: cover;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">NoteTitle</span> = <span class="title function_">styled</span>(<span class="title class_">Heading</span>).<span class="title function_">attrs</span>(&#123; <span class="attr">level</span>: <span class="number">2</span> &#125;)<span class="string">`</span></span><br><span class="line"><span class="string">  grid-area: title;</span></span><br><span class="line"><span class="string">  align-self: center;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">NoteExcerpt</span> = <span class="title function_">styled</span>(<span class="title class_">Paragraph</span>).<span class="title function_">attrs</span>(&#123; <span class="attr">size</span>: <span class="string">&quot;small&quot;</span> &#125;)<span class="string">`</span></span><br><span class="line"><span class="string">  grid-area: excerpt;</span></span><br><span class="line"><span class="string">  align-self: center;</span></span><br><span class="line"><span class="string">  white-space: nowrap;</span></span><br><span class="line"><span class="string">  text-overflow: ellipsis;</span></span><br><span class="line"><span class="string">  overflow: hidden;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">NotePublishTime</span> = <span class="title function_">styled</span>(<span class="title class_">Paragraph</span>).<span class="title function_">attrs</span>(&#123; <span class="attr">type</span>: <span class="string">&quot;secondary&quot;</span> &#125;)<span class="string">`</span></span><br><span class="line"><span class="string">  grid-area: time;</span></span><br><span class="line"><span class="string">  justify-self: end;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledNoteCard</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;card()&#125;</span></span></span><br><span class="line"><span class="string">  display: grid;</span></span><br><span class="line"><span class="string">  grid-template-areas:</span></span><br><span class="line"><span class="string">    &quot;image title time&quot;</span></span><br><span class="line"><span class="string">    &quot;image excerpt excerpt&quot;;</span></span><br><span class="line"><span class="string">  grid-template-columns: 72px 2fr 1fr;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledNoteCard</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">NoteImage</span>, <span class="title class_">NoteTitle</span>, <span class="title class_">NoteExcerpt</span>, <span class="title class_">NotePublishTime</span> &#125;;</span><br></pre></td></tr></table></figure><p>最后修改 <code>noteCard.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">NoteCard</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/NoteCard&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">NoteCard</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">NoteCard</span> /&gt;</span></span>;</span><br></pre></td></tr></table></figure><p>使用 Hygen 创建一个 <code>NoteList</code> 组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new NoteList</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/NoteList/index.js</code>  文件：：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">import React from <span class="string">&quot;react&quot;</span>;</span><br><span class="line">import PropTypes from <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line">import StyledNoteList, &#123; Notes &#125; from <span class="string">&quot;./style&quot;</span>;</span><br><span class="line">import FilterList from <span class="string">&quot;components/FilterList&quot;</span>;</span><br><span class="line">import NoteCard from <span class="string">&quot;components/NoteCard&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> NoteList(&#123; children, ...rest &#125;) &#123;</span><br><span class="line">  <span class="built_in">return</span> (</span><br><span class="line">    &lt;StyledNoteList &#123;...rest&#125;&gt;</span><br><span class="line">      &lt;FilterList</span><br><span class="line">        options=&#123;[<span class="string">&quot;最新笔记优先&quot;</span>, <span class="string">&quot;有改动的优先&quot;</span>]&#125;</span><br><span class="line">        actionLabel=<span class="string">&quot;添加笔记&quot;</span></span><br><span class="line">      &gt;</span><br><span class="line">        &lt;Notes&gt;</span><br><span class="line">          &#123;new Array(10).fill(0).map((_, i) =&gt; (</span><br><span class="line">            &lt;NoteCard key=&#123;i&#125; /&gt;</span><br><span class="line">          ))&#125;</span><br><span class="line">        &lt;/Notes&gt;</span><br><span class="line">      &lt;/FilterList&gt;</span><br><span class="line">    &lt;/StyledNoteList&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">NoteList.propTypes = &#123;</span><br><span class="line">  children: PropTypes.any,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> default NoteList;</span><br></pre></td></tr></table></figure><p>再在 <code>style.js</code> 中修改样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Notes</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  &amp; &gt; * &#123;</span></span><br><span class="line"><span class="string">    margin: 8px 0;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  margin-top: -8px;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledNoteList</span> = styled.<span class="property">div</span><span class="string">``</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledNoteList</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">Notes</span> &#125;;</span><br></pre></td></tr></table></figure><p>最后修改 <code>noteList.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">NoteList</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;页面组件/NoteList&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">NoteList</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">NoteList</span> /&gt;</span></span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;React 即时通信 UI 实战第九章。React 即时通信 UI 实战为&lt;a href=&quot;https://www.bilibili.com/video/BV1PK4y1b7bY?p=2&amp;amp;spm_id_from=pageDriver&amp;amp;vd_source=0965c74096f788f105780e5d5d0e9ebf&quot;&gt;峰华前端工程师&lt;/a&gt;推出的 React 实战课程，以聊天（即时通信）为原型，构建了一整套的 UI 组件库，课程重点在于 UI 组件的分析和实现，力求打造自用组件库。本章包括其他列表组件，包括联系人列表、笔记列表和文件列表组件。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Web前端" scheme="http://blog.zhuangzhihao.top/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="React" scheme="http://blog.zhuangzhihao.top/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>React 即时通信 ChatUI 设置页面</title>
    <link href="http://blog.zhuangzhihao.top/ChatUI%E8%AE%BE%E7%BD%AE%E9%A1%B5%E9%9D%A2/"/>
    <id>http://blog.zhuangzhihao.top/ChatUI%E8%AE%BE%E7%BD%AE%E9%A1%B5%E9%9D%A2/</id>
    <published>2022-11-18T16:00:00.000Z</published>
    <updated>2022-11-25T13:13:15.667Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>React 即时通信 UI 实战第八章。React 即时通信 UI 实战为<a href="https://www.bilibili.com/video/BV1PK4y1b7bY?p=2&amp;spm_id_from=pageDriver&amp;vd_source=0965c74096f788f105780e5d5d0e9ebf">峰华前端工程师</a>推出的 React 实战课程，以聊天（即时通信）为原型，构建了一整套的 UI 组件库，课程重点在于 UI 组件的分析和实现，力求打造自用组件库。本章包括设置页面中的 InputText、Select（表单）、Radio、Switch 开关等组件。</p></blockquote><span id="more"></span><h3 id="一、文本输入框组件开发"><a href="#一、文本输入框组件开发" class="headerlink" title="一、文本输入框组件开发"></a>一、文本输入框组件开发</h3><p>使用 Hygen 创建一个 <code>InputText</code> 组件，并移动到 <code>src/components/Input</code> 组件目录下，作为 <code>Input</code> 的子组件导出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new InputText</span><br></pre></td></tr></table></figure><p>再使用 Hygen 创建一个 <code>LabelContainer</code> 组件，对 Label 和控件进行布局：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new LabelContainer</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/LabelContainer/index.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledLabelContainer</span> <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Text</span> <span class="keyword">from</span> <span class="string">&quot;components/Text&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">LabelContainer</span>(<span class="params">&#123; children, label, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledLabelContainer</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;label &amp;&amp; <span class="tag">&lt;<span class="name">Text</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">marginBottom:</span> &quot;<span class="attr">8px</span>&quot; &#125;&#125;&gt;</span>&#123;label&#125;: <span class="tag">&lt;/<span class="name">Text</span>&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">      &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledLabelContainer</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">LabelContainer</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">LabelContainer</span>;</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/LabelContainer/style.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledLabelContainer</span> = styled.<span class="property">label</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: flex;</span></span><br><span class="line"><span class="string">  flex-direction: column;</span></span><br><span class="line"><span class="string">  font-size: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.normal&#125;</span>;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledLabelContainer</span>;</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/Input/InputText/style.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">InputUnderline</span> = styled.<span class="property">input</span><span class="string">`</span></span><br><span class="line"><span class="string">  border: none;</span></span><br><span class="line"><span class="string">  border-bottom: 1px solid <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.gray4&#125;</span>;</span></span><br><span class="line"><span class="string">  font-size: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.normal&#125;</span>;</span></span><br><span class="line"><span class="string">  width: 100%;</span></span><br><span class="line"><span class="string">  background: none;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  &amp;::placeholder &#123;</span></span><br><span class="line"><span class="string">    color: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.gray5&#125;</span>;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  :focus,</span></span><br><span class="line"><span class="string">  :hover &#123;</span></span><br><span class="line"><span class="string">    border-bottom-color: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.primaryColor&#125;</span>;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledInputText</span> = styled.<span class="property">div</span><span class="string">``</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledInputText</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">InputUnderline</span> &#125;;</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/Input/InputText/index.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledInputText</span>, &#123; <span class="title class_">InputUnderline</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">LabelContainer</span> <span class="keyword">from</span> <span class="string">&quot;components/LabelContainer&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">InputText</span>(<span class="params">&#123; label, placeholder = <span class="string">&quot;请输入内容&quot;</span>, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> input = <span class="language-xml"><span class="tag">&lt;<span class="name">InputUnderline</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&#123;placeholder&#125;</span> /&gt;</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledInputText</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;label ? <span class="tag">&lt;<span class="name">LabelContainer</span> <span class="attr">label</span>=<span class="string">&#123;label&#125;</span>&gt;</span>&#123;input&#125;<span class="tag">&lt;/<span class="name">LabelContainer</span>&gt;</span> : input&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledInputText</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">InputText</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">label</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">  <span class="attr">placeholder</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">InputText</span>;</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/Input/index.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledInput</span>, &#123; <span class="title class_">InputContainer</span>, <span class="title class_">Prefix</span>, <span class="title class_">Suffix</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">SearchIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/search.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useTheme &#125; <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">InputText</span> <span class="keyword">from</span> <span class="string">&quot;./InputText&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Input</span>(<span class="params">&#123; placeholder = <span class="string">&quot;请输入内容...&quot;</span>, prefix, suffix, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">InputContainer</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;prefix &amp;&amp; <span class="tag">&lt;<span class="name">Prefix</span>&gt;</span>&#123;prefix&#125;<span class="tag">&lt;/<span class="name">Prefix</span>&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">StyledInput</span> <span class="attr">placeholder</span>=<span class="string">&#123;placeholder&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;suffix &amp;&amp; <span class="tag">&lt;<span class="name">Suffix</span>&gt;</span>&#123;suffix&#125;<span class="tag">&lt;/<span class="name">Suffix</span>&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">InputContainer</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Search</span>(<span class="params">&#123; placeholder = <span class="string">&quot;请输入搜索内容...&quot;</span>, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> theme = <span class="title function_">useTheme</span>();</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">placeholder</span>=<span class="string">&#123;placeholder&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">prefix</span>=<span class="string">&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &lt;<span class="attr">Icon</span> <span class="attr">icon</span>=<span class="string">&#123;SearchIcon&#125;</span> <span class="attr">color</span>=<span class="string">&#123;theme.gray3&#125;</span> <span class="attr">width</span>=<span class="string">&#123;18&#125;</span> <span class="attr">height</span>=<span class="string">&#123;18&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#125;</span></span><br><span class="line"><span class="language-xml">      &#123;...rest&#125;</span></span><br><span class="line"><span class="language-xml">    /&gt;</span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Input</span>.<span class="property">Search</span> = <span class="title class_">Search</span>;</span><br><span class="line"><span class="title class_">Input</span>.<span class="property">Text</span> = <span class="title class_">InputText</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Input</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">placeholder</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">  <span class="attr">prefix</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">  <span class="attr">suffix</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Input</span>;</span><br></pre></td></tr></table></figure><p>在 <code>src/components/Input/input.stories.js</code>  文件中添加两行 stories：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">InputTextWithLabel</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Input.Text</span> <span class="attr">label</span>=<span class="string">&quot;昵称&quot;</span> /&gt;</span></span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">InputTextWithoutLabel</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Input.Text</span> /&gt;</span></span>;</span><br></pre></td></tr></table></figure><p>使用 <code>yarn</code> 命令启动 storybook：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn run storybook</span><br></pre></td></tr></table></figure><h3 id="二、重构-Select-组件"><a href="#二、重构-Select-组件" class="headerlink" title="二、重构 Select 组件"></a>二、重构 Select 组件</h3><p>编辑 <code>src/components/Select/index.js</code>  文件：：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">import React from <span class="string">&quot;react&quot;</span>;</span><br><span class="line">import PropTypes from <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line">import StyledSelect from <span class="string">&quot;./style&quot;</span>;</span><br><span class="line">import LabelContainer from <span class="string">&quot;components/LabelContainer&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> Select(&#123; label, <span class="built_in">type</span>, children, ...rest &#125;) &#123;</span><br><span class="line">  const selectWithoutLabel = (</span><br><span class="line">    &lt;StyledSelect <span class="built_in">type</span>=&#123;<span class="built_in">type</span>&#125; &#123;...rest&#125;&gt;</span><br><span class="line">      &#123;children&#125;</span><br><span class="line">    &lt;/StyledSelect&gt;</span><br><span class="line">  );</span><br><span class="line">  <span class="built_in">return</span> label ? (</span><br><span class="line">    &lt;LabelContainer label=&#123;label&#125;&gt;selectWithoutLabel&lt;/LabelContainer&gt;</span><br><span class="line">  ) : (</span><br><span class="line">    selectWithoutLabel</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Select.propTypes = &#123;</span><br><span class="line">  <span class="built_in">type</span>: PropTypes.oneOf([<span class="string">&quot;form&quot;</span>]),</span><br><span class="line">  children: PropTypes.any,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> default Select;</span><br></pre></td></tr></table></figure><p>再在 <code>style.js</code> 中修改样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled, &#123; css &#125; <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">CaretDown</span> <span class="keyword">from</span> <span class="string">&quot;assets/icon/caret_down.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">CaretDown2</span> <span class="keyword">from</span> <span class="string">&quot;assets/icon/caretDown2.svg&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> typeVariants = &#123;</span><br><span class="line">  <span class="attr">form</span>: css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(</span><span class="subst">$&#123;CaretDown2&#125;</span><span class="language-css">);</span></span><br><span class="line"><span class="language-css">  `</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledSelect</span> = styled.<span class="property">select</span><span class="string">`</span></span><br><span class="line"><span class="string">  appearance: none;</span></span><br><span class="line"><span class="string">  background-image: url(<span class="subst">$&#123;CaretDown&#125;</span>);</span></span><br><span class="line"><span class="string">  background-repeat: no-repeat;</span></span><br><span class="line"><span class="string">  background-position: right center;</span></span><br><span class="line"><span class="string">  background-color: transparent;</span></span><br><span class="line"><span class="string">  border: none;</span></span><br><span class="line"><span class="string">  padding-right: 14px;</span></span><br><span class="line"><span class="string">  font-size: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.normal&#125;</span>;</span></span><br><span class="line"><span class="string">  color: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.grayDark&#125;</span>;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;(&#123; type &#125;) =&gt; type &amp;&amp; typeVariants[type]&#125;</span></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  ::-ms-expand &#123;</span></span><br><span class="line"><span class="string">    display: none;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledSelect</span>;</span><br></pre></td></tr></table></figure><p>最后在 <code>select.stories.js</code> 文件中添加一个 story：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">FormSelect</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Select</span> <span class="attr">type</span>=<span class="string">&quot;form&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Option</span>&gt;</span>北京市<span class="tag">&lt;/<span class="name">Option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Option</span>&gt;</span>河北省<span class="tag">&lt;/<span class="name">Option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Select</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="三、Radio-单选按钮组件开发"><a href="#三、Radio-单选按钮组件开发" class="headerlink" title="三、Radio 单选按钮组件开发"></a>三、Radio 单选按钮组件开发</h3><p>使用 Hygen 创建一个 <code>Radio</code> 组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new Radio</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/Radio/index.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledRadio</span>, &#123; <span class="title class_">RadioButton</span>, <span class="title class_">Circle</span>, <span class="title class_">StyledRadioGroup</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">LabelContainer</span> <span class="keyword">from</span> <span class="string">&quot;components/LabelContainer&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Radio</span>(<span class="params">&#123; name, children, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledRadio</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">RadioButton</span> <span class="attr">name</span>=<span class="string">&#123;name&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Circle</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledRadio</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">RadioGroup</span>(<span class="params">&#123; label, children, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">LabelContainer</span> <span class="attr">label</span>=<span class="string">&#123;label&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">StyledRadioGroup</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span>&#123;children&#125;<span class="tag">&lt;/<span class="name">StyledRadioGroup</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">LabelContainer</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Radio</span>.<span class="property">Group</span> = <span class="title class_">RadioGroup</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Radio</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title class_">RadioGroup</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">label</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Radio</span>;</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/Radio/style.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Circle</span> = styled.<span class="property">span</span><span class="string">`</span></span><br><span class="line"><span class="string">  line-height: 16px;</span></span><br><span class="line"><span class="string">  width: 16px;</span></span><br><span class="line"><span class="string">  height: 16px;</span></span><br><span class="line"><span class="string">  border: 1px solid <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.primaryColor&#125;</span>;</span></span><br><span class="line"><span class="string">  border-radius: 50%;</span></span><br><span class="line"><span class="string">  position: absolute;</span></span><br><span class="line"><span class="string">  left: 0;</span></span><br><span class="line"><span class="string">  top: 0;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  ::after &#123;</span></span><br><span class="line"><span class="string">    content: &quot;&quot;;</span></span><br><span class="line"><span class="string">    width: 10px;</span></span><br><span class="line"><span class="string">    height: 10px;</span></span><br><span class="line"><span class="string">    background-color: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.primaryColor&#125;</span>;</span></span><br><span class="line"><span class="string">    border-radius: 50%;</span></span><br><span class="line"><span class="string">    position: absolute;</span></span><br><span class="line"><span class="string">    left: 2px;</span></span><br><span class="line"><span class="string">    top: 2px;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    opacity: 0;</span></span><br><span class="line"><span class="string">    transform: scale(0);</span></span><br><span class="line"><span class="string">    transition: 0.2s ease;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">RadioButton</span> = styled.<span class="property">input</span>.<span class="title function_">attrs</span>(&#123; <span class="attr">type</span>: <span class="string">&quot;radio&quot;</span> &#125;)<span class="string">`</span></span><br><span class="line"><span class="string">  width: 0;</span></span><br><span class="line"><span class="string">  height: 0;</span></span><br><span class="line"><span class="string">  opacity: 0;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  :checked + <span class="subst">$&#123;Circle&#125;</span>::after &#123;</span></span><br><span class="line"><span class="string">    opacity: 1;</span></span><br><span class="line"><span class="string">    transform: scale(1);</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  :not(:checked) + <span class="subst">$&#123;Circle&#125;</span>::after &#123;</span></span><br><span class="line"><span class="string">    opacity: 0;</span></span><br><span class="line"><span class="string">    transform: scale(0);</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledRadioGroup</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: flex;</span></span><br><span class="line"><span class="string">  &amp; &gt; *:not(:first-child) &#123;</span></span><br><span class="line"><span class="string">    margin-left: 24px;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledRadio</span> = styled.<span class="property">label</span><span class="string">`</span></span><br><span class="line"><span class="string">  position: relative;</span></span><br><span class="line"><span class="string">  padding-left: 22px;</span></span><br><span class="line"><span class="string">  cursor: pointer;</span></span><br><span class="line"><span class="string">  display: inline-block;</span></span><br><span class="line"><span class="string">  line-height: 16px;</span></span><br><span class="line"><span class="string">  font-size: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.normal&#125;</span>;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledRadio</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">RadioButton</span>, <span class="title class_">Circle</span>, <span class="title class_">StyledRadioGroup</span> &#125;;</span><br></pre></td></tr></table></figure><p>在 <code>src/components/Radio/radio.stories.js</code>  文件中添加 stories：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Radio</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/Input/Radio&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Radio</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Radio</span>&gt;</span>选项<span class="tag">&lt;/<span class="name">Radio</span>&gt;</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">RadioGroup</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">Radio.Group</span> <span class="attr">label</span>=<span class="string">&quot;请选择&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Radio</span> <span class="attr">name</span>=<span class="string">&quot;option&quot;</span>&gt;</span>选项1<span class="tag">&lt;/<span class="name">Radio</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Radio</span> <span class="attr">name</span>=<span class="string">&quot;option&quot;</span>&gt;</span>选项2<span class="tag">&lt;/<span class="name">Radio</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Radio</span> <span class="attr">name</span>=<span class="string">&quot;option&quot;</span>&gt;</span>选项3<span class="tag">&lt;/<span class="name">Radio</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">Radio.Group</span>&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="四、Switch-开关组件开发"><a href="#四、Switch-开关组件开发" class="headerlink" title="四、Switch 开关组件开发"></a>四、Switch 开关组件开发</h3><p>使用 Hygen 创建一个 <code>Switch</code> 组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new Switch</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/LabelContainer/index.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledSwitch</span>, &#123; <span class="title class_">Checkbox</span>, <span class="title class_">Slider</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Switch</span>(<span class="params">&#123; children, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledSwitch</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Checkbox</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Slider</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledSwitch</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Switch</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Switch</span>;</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/LabelContainer/style.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Slider</span> = styled.<span class="property">span</span><span class="string">`</span></span><br><span class="line"><span class="string">  background-color: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.gray4&#125;</span>;</span></span><br><span class="line"><span class="string">  position: absolute;</span></span><br><span class="line"><span class="string">  left: 0;</span></span><br><span class="line"><span class="string">  right: 0;</span></span><br><span class="line"><span class="string">  top: 0;</span></span><br><span class="line"><span class="string">  bottom: 0;</span></span><br><span class="line"><span class="string">  border-radius: 16px;</span></span><br><span class="line"><span class="string">  transition: 0.4s;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  &amp;::before &#123;</span></span><br><span class="line"><span class="string">    display: block;</span></span><br><span class="line"><span class="string">    content: &quot;&quot;;</span></span><br><span class="line"><span class="string">    position: absolute;</span></span><br><span class="line"><span class="string">    width: 28px;</span></span><br><span class="line"><span class="string">    height: 28px;</span></span><br><span class="line"><span class="string">    top: 1px;</span></span><br><span class="line"><span class="string">    left: 1px;</span></span><br><span class="line"><span class="string">    background-color: white;</span></span><br><span class="line"><span class="string">    box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.05), 0px 2px 2px rgba(0, 0, 0, 0.1),</span></span><br><span class="line"><span class="string">      0px 3px 1px rgba(0, 0, 0, 0.0510643);</span></span><br><span class="line"><span class="string">    border-radius: 50%;</span></span><br><span class="line"><span class="string">    transition: 0.4s;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Checkbox</span> = styled.<span class="property">input</span>.<span class="title function_">attrs</span>(&#123; <span class="attr">type</span>: <span class="string">&quot;checkbox&quot;</span> &#125;)<span class="string">`</span></span><br><span class="line"><span class="string">  width: 0;</span></span><br><span class="line"><span class="string">  height: 0;</span></span><br><span class="line"><span class="string">  opacity: 0;</span></span><br><span class="line"><span class="string">  :checked + <span class="subst">$&#123;Slider&#125;</span> &#123;</span></span><br><span class="line"><span class="string">    background-color: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.primaryColor&#125;</span>;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    ::before &#123;</span></span><br><span class="line"><span class="string">      transform: translateX(20px);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledSwitch</span> = styled.<span class="property">label</span><span class="string">`</span></span><br><span class="line"><span class="string">  width: 51px;</span></span><br><span class="line"><span class="string">  height: 31px;</span></span><br><span class="line"><span class="string">  position: relative;</span></span><br><span class="line"><span class="string">  display: inline-block;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledSwitch</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">Checkbox</span>, <span class="title class_">Slider</span> &#125;;</span><br></pre></td></tr></table></figure><p>在 <code>src/components/Input/input.stories.js</code>  文件中添加 stories：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Switch</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/Input/Switch&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Switch</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">padding:</span> &quot;<span class="attr">1vw</span>&quot; &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Switch</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="五、组装设置页编辑个人资料页面"><a href="#五、组装设置页编辑个人资料页面" class="headerlink" title="五、组装设置页编辑个人资料页面"></a>五、组装设置页编辑个人资料页面</h3><p>使用 Hygen 创建一个 EditProfile 组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new EditProfile</span><br></pre></td></tr></table></figure><p>在 <code>index.js</code> 文件中编辑组件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useState &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledEditProfile</span>, &#123;</span><br><span class="line">  <span class="title class_">GroupTitle</span>,</span><br><span class="line">  <span class="title class_">GenderAndRegion</span>,</span><br><span class="line">  <span class="title class_">SelectGroup</span>,</span><br><span class="line">  <span class="title class_">StyledIconInput</span>,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Profile</span> <span class="keyword">from</span> <span class="string">&quot;components/Profile&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> face <span class="keyword">from</span> <span class="string">&quot;assets/images/face-male-1.jpg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Avatar</span> <span class="keyword">from</span> <span class="string">&quot;components/Avatar&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FontAwesomeIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/react-fontawesome&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; faCheck &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-solid-svg-icons&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Button</span> <span class="keyword">from</span> <span class="string">&quot;components/Button&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;styled-components/macro&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">InputText</span> <span class="keyword">from</span> <span class="string">&quot;components/Input/InputText&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Radio</span> <span class="keyword">from</span> <span class="string">&quot;components/Radio&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">LabelContainer</span> <span class="keyword">from</span> <span class="string">&quot;components/LabelContainer&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Select</span> <span class="keyword">from</span> <span class="string">&quot;components/Select&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Option</span> <span class="keyword">from</span> <span class="string">&quot;components/Option&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  faWeibo,</span><br><span class="line">  faGithub,</span><br><span class="line">  faLinkedin,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-brands-svg-icons&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">EditProfile</span>(<span class="params">&#123; children, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> [showEdit, setShowEdit] = <span class="title function_">useState</span>(<span class="literal">false</span>);</span><br><span class="line">  <span class="keyword">if</span> (!showEdit) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">Profile</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">onEdit</span>=<span class="string">&#123;()</span> =&gt;</span> setShowEdit(true)&#125;</span></span><br><span class="line"><span class="language-xml">        showEditBtn</span></span><br><span class="line"><span class="language-xml">        showCloseIcon=&#123;false&#125;</span></span><br><span class="line"><span class="language-xml">      /&gt;</span></span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledEditProfile</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Avatar</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">src</span>=<span class="string">&#123;face&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">size</span>=<span class="string">&quot;160px&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">css</span>=<span class="string">&#123;</span>`</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">grid-area:</span> <span class="attr">1</span> / <span class="attr">1</span> / <span class="attr">2</span> / <span class="attr">2</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">justify-self:</span> <span class="attr">center</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">margin-bottom:</span> <span class="attr">12px</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        `&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">size</span>=<span class="string">&quot;52px&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">css</span>=<span class="string">&#123;</span>`</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">grid-area:</span> <span class="attr">1</span> / <span class="attr">1</span> / <span class="attr">3</span> / <span class="attr">2</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">z-index:</span> <span class="attr">10</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">align-self:</span> <span class="attr">end</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">justify-self:</span> <span class="attr">end</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        `&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faCheck&#125;</span> <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> setShowEdit(false)&#125; /&gt;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">GroupTitle</span>&gt;</span>基本信息<span class="tag">&lt;/<span class="name">GroupTitle</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">InputText</span> <span class="attr">label</span>=<span class="string">&quot;昵称&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">GenderAndRegion</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Radio.Group</span> <span class="attr">label</span>=<span class="string">&quot;性别&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Radio</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">Radio</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Radio</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">Radio</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Radio.Group</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">LabelContainer</span> <span class="attr">label</span>=<span class="string">&quot;地区&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">SelectGroup</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Select</span> <span class="attr">type</span>=<span class="string">&quot;form&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Option</span>&gt;</span>省份<span class="tag">&lt;/<span class="name">Option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">Select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Select</span> <span class="attr">type</span>=<span class="string">&quot;form&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Option</span>&gt;</span>城市<span class="tag">&lt;/<span class="name">Option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">Select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Select</span> <span class="attr">type</span>=<span class="string">&quot;form&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Option</span>&gt;</span>区县<span class="tag">&lt;/<span class="name">Option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">Select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">SelectGroup</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">LabelContainer</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">GenderAndRegion</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">InputText</span> <span class="attr">label</span>=<span class="string">&quot;个性签名&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">GroupTitle</span>&gt;</span>联系信息<span class="tag">&lt;/<span class="name">GroupTitle</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">InputText</span> <span class="attr">label</span>=<span class="string">&quot;联系电话&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">InputText</span> <span class="attr">label</span>=<span class="string">&quot;电子邮箱&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">InputText</span> <span class="attr">label</span>=<span class="string">&quot;个人网站&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">GroupTitle</span>&gt;</span>社交信息<span class="tag">&lt;/<span class="name">GroupTitle</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">IconInput</span> <span class="attr">icon</span>=<span class="string">&#123;faWeibo&#125;</span> <span class="attr">bgColor</span>=<span class="string">&quot;#F06767&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">IconInput</span> <span class="attr">icon</span>=<span class="string">&#123;faGithub&#125;</span> <span class="attr">bgColor</span>=<span class="string">&quot;black&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">IconInput</span> <span class="attr">icon</span>=<span class="string">&#123;faLinkedin&#125;</span> <span class="attr">bgColor</span>=<span class="string">&quot;#2483C0&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledEditProfile</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">IconInput</span>(<span class="params">&#123; icon, bgColor, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledIconInput</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Icon.Social</span> <span class="attr">icon</span>=<span class="string">&#123;icon&#125;</span> <span class="attr">bgColor</span>=<span class="string">&#123;bgColor&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">InputText</span> &#123;<span class="attr">...rest</span>&#125; /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledIconInput</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">EditProfile</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">EditProfile</span>;</span><br></pre></td></tr></table></figure><p>再在 <code>style.js</code> 中修改样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Text</span> <span class="keyword">from</span> <span class="string">&quot;components/Text&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">GroupTitle</span> = <span class="title function_">styled</span>(<span class="title class_">Text</span>).<span class="title function_">attrs</span>(&#123; <span class="attr">size</span>: <span class="string">&quot;large&quot;</span> &#125;)<span class="string">`</span></span><br><span class="line"><span class="string">  align-self: end;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">GenderAndRegion</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: grid;</span></span><br><span class="line"><span class="string">  grid-template-columns: 1fr 1fr;</span></span><br><span class="line"><span class="string">  justify-items: space-between;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">SelectGroup</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  &gt; * &#123;</span></span><br><span class="line"><span class="string">    margin: 0 4px;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  margin: 0 -4px;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledIconInput</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: grid;</span></span><br><span class="line"><span class="string">  grid-template-columns: 38px 1fr;</span></span><br><span class="line"><span class="string">  align-items: end;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledEditProfile</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: grid;</span></span><br><span class="line"><span class="string">  grid-template-columns: 1fr;</span></span><br><span class="line"><span class="string">  row-gap: 20px;</span></span><br><span class="line"><span class="string">  padding: 30px;</span></span><br><span class="line"><span class="string">  max-height: 100vh;</span></span><br><span class="line"><span class="string">  overflow-y: auto;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledEditProfile</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">GroupTitle</span>, <span class="title class_">GenderAndRegion</span>, <span class="title class_">SelectGroup</span>, <span class="title class_">StyledIconInput</span> &#125;;</span><br></pre></td></tr></table></figure><p>最后编辑 <code>editProfile.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">EditProfile</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;页面组件/EditProfile&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">EditProfile</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">EditProfile</span> /&gt;</span></span>;</span><br></pre></td></tr></table></figure><h3 id="六、设置项组件开发"><a href="#六、设置项组件开发" class="headerlink" title="六、设置项组件开发"></a>六、设置项组件开发</h3><p>使用 Hygen 创建一个 <code>Settings</code> 组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new Settings</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/Settings/index.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledSettings</span>, &#123;</span><br><span class="line">  <span class="title class_">StyledSettingsItem</span>,</span><br><span class="line">  <span class="title class_">SettingsItemControl</span>,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">ArrowMenuRight</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/arrowMenuRight.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Paragraph</span> <span class="keyword">from</span> <span class="string">&quot;components/Paragraph&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Switch</span> <span class="keyword">from</span> <span class="string">&quot;components/Switch&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Seperator</span> <span class="keyword">from</span> <span class="string">&quot;components/Seperator&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Settings</span>(<span class="params">&#123; children, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">StyledSettings</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span>&#123;children&#125;<span class="tag">&lt;/<span class="name">StyledSettings</span>&gt;</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">SettingsItem</span>(<span class="params">&#123;</span></span><br><span class="line"><span class="params">  type = <span class="string">&quot;switch&quot;</span>,</span></span><br><span class="line"><span class="params">  label,</span></span><br><span class="line"><span class="params">  description,</span></span><br><span class="line"><span class="params">  children,</span></span><br><span class="line"><span class="params">  ...rest</span></span><br><span class="line"><span class="params">&#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledSettingsItem</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">SettingsItemControl</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Paragraph</span> <span class="attr">size</span>=<span class="string">&quot;large&quot;</span>&gt;</span>&#123;label&#125;<span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;type === &quot;switch&quot; &amp;&amp; <span class="tag">&lt;<span class="name">Switch</span> /&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">        &#123;type === &quot;menu&quot; &amp;&amp; <span class="tag">&lt;<span class="name">Icon</span> <span class="attr">icon</span>=<span class="string">&#123;ArrowMenuRight&#125;</span> /&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">SettingsItemControl</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      &#123;description &amp;&amp; (</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Paragraph</span> <span class="attr">type</span>=<span class="string">&quot;secondary&quot;</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">margin:</span> &quot;<span class="attr">4px</span> <span class="attr">0</span>&quot; &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">          &#123;description&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      )&#125;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Seperator</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">marginTop:</span> &quot;<span class="attr">8px</span>&quot;, <span class="attr">marginBottom:</span> &quot;<span class="attr">20px</span>&quot; &#125;&#125; /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledSettingsItem</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Settings</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">type</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">  <span class="attr">label</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">  <span class="attr">description</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Settings</span>;</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/Settings/style.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledSettingsItem</span> = styled.<span class="property">div</span><span class="string">``</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">SettingsItemControl</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: flex;</span></span><br><span class="line"><span class="string">  justify-content: space-between;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledSettings</span> = styled.<span class="property">div</span><span class="string">``</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledSettings</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">StyledSettingsItem</span>, <span class="title class_">SettingsItemControl</span> &#125;;</span><br></pre></td></tr></table></figure><p>在 <code>src/components/Settings/settings.stories.js</code>  文件中添加两行 stories：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Settings</span>, &#123; <span class="title class_">SettingsItem</span> &#125; <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;页面组件/Settings&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Settings</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Settings</span>&gt;</span>默认<span class="tag">&lt;/<span class="name">Settings</span>&gt;</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">WithoutDescription</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">SettingsItem</span> <span class="attr">label</span>=<span class="string">&quot;这是一个没有描述的设置项&quot;</span> /&gt;</span></span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">WithDescription</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">SettingsItem</span> <span class="attr">label</span>=<span class="string">&quot;这是一个有描述的设置项&quot;</span> <span class="attr">description</span>=<span class="string">&quot;这是设置项描述&quot;</span> /&gt;</span></span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">WithMenu</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">SettingsItem</span> <span class="attr">label</span>=<span class="string">&quot;有子菜单的设置项&quot;</span> <span class="attr">type</span>=<span class="string">&quot;menu&quot;</span> /&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="七、组装设置页面"><a href="#七、组装设置页面" class="headerlink" title="七、组装设置页面"></a>七、组装设置页面</h3><p>编辑 <code>src/components/Settings/style.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledSettingsItem</span> = styled.<span class="property">div</span><span class="string">``</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">SettingsItemControl</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: flex;</span></span><br><span class="line"><span class="string">  justify-content: space-between;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledSettingsGroup</span> = styled.<span class="property">div</span><span class="string">``</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledSettings</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  padding: 72px;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledSettings</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">StyledSettingsItem</span>, <span class="title class_">SettingsItemControl</span>, <span class="title class_">StyledSettingsGroup</span> &#125;;</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/Settings/index.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledSettings</span>, &#123;</span><br><span class="line">  <span class="title class_">StyledSettingsItem</span>,</span><br><span class="line">  <span class="title class_">SettingsItemControl</span>,</span><br><span class="line">  <span class="title class_">StyledSettingsGroup</span>,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">ArrowMenuRight</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/arrowMenuRight.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Paragraph</span> <span class="keyword">from</span> <span class="string">&quot;components/Paragraph&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Switch</span> <span class="keyword">from</span> <span class="string">&quot;components/Switch&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Seperator</span> <span class="keyword">from</span> <span class="string">&quot;components/Seperator&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Settings</span>(<span class="params">&#123; children, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledSettings</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">SettingsGroup</span> <span class="attr">groupName</span>=<span class="string">&quot;隐私设置&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">SettingsItem</span> <span class="attr">label</span>=<span class="string">&quot;添加好友时需要验证&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">SettingsItem</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">label</span>=<span class="string">&quot;推荐通讯录好友&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">description</span>=<span class="string">&quot;上传的通讯录只用来匹配好友列表，本应用不会记录和发送任何信息给其它机构或&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">SettingsItem</span> <span class="attr">label</span>=<span class="string">&quot;只能通过手机号找到我&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">SettingsGroup</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">SettingsGroup</span> <span class="attr">groupName</span>=<span class="string">&quot;通知设置&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">SettingsItem</span> <span class="attr">label</span>=<span class="string">&quot;新消息通知&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">SettingsItem</span> <span class="attr">label</span>=<span class="string">&quot;语音和视频通话提醒&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">SettingsItem</span> <span class="attr">label</span>=<span class="string">&quot;显示通知详情&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">SettingsItem</span> <span class="attr">label</span>=<span class="string">&quot;声音&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">SettingsItem</span> <span class="attr">label</span>=<span class="string">&quot;查看已静音的好友列表&quot;</span> <span class="attr">type</span>=<span class="string">&quot;menu&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">SettingsGroup</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledSettings</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">SettingsGroup</span>(<span class="params">&#123; groupName, children, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledSettingsGroup</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Paragraph</span> <span class="attr">size</span>=<span class="string">&quot;xxlarge&quot;</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">paddingBottom:</span> &quot;<span class="attr">24px</span>&quot; &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;groupName&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledSettingsGroup</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">SettingsItem</span>(<span class="params">&#123;</span></span><br><span class="line"><span class="params">  type = <span class="string">&quot;switch&quot;</span>,</span></span><br><span class="line"><span class="params">  label,</span></span><br><span class="line"><span class="params">  description,</span></span><br><span class="line"><span class="params">  children,</span></span><br><span class="line"><span class="params">  ...rest</span></span><br><span class="line"><span class="params">&#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledSettingsItem</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">SettingsItemControl</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Paragraph</span> <span class="attr">size</span>=<span class="string">&quot;large&quot;</span>&gt;</span>&#123;label&#125;<span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;type === &quot;switch&quot; &amp;&amp; <span class="tag">&lt;<span class="name">Switch</span> /&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">        &#123;type === &quot;menu&quot; &amp;&amp; <span class="tag">&lt;<span class="name">Icon</span> <span class="attr">icon</span>=<span class="string">&#123;ArrowMenuRight&#125;</span> /&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">SettingsItemControl</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      &#123;description &amp;&amp; (</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Paragraph</span> <span class="attr">type</span>=<span class="string">&quot;secondary&quot;</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">margin:</span> &quot;<span class="attr">4px</span> <span class="attr">0</span>&quot; &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">          &#123;description&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      )&#125;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Seperator</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">marginTop:</span> &quot;<span class="attr">8px</span>&quot;, <span class="attr">marginBottom:</span> &quot;<span class="attr">20px</span>&quot; &#125;&#125; /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledSettingsItem</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Settings</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">type</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">  <span class="attr">label</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">  <span class="attr">description</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Settings</span>;</span><br></pre></td></tr></table></figure><p>在 <code>src/components/Settings/settings.stories.js</code>  文件中更改 Default Story：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Settings</span> /&gt;</span></span>;</span><br></pre></td></tr></table></figure><h3 id="八、屏蔽列表组件开发"><a href="#八、屏蔽列表组件开发" class="headerlink" title="八、屏蔽列表组件开发"></a>八、屏蔽列表组件开发</h3><p>使用 Hygen 创建一个 <code>BlockedList</code> 组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new BlockedList</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/BlockedList/index.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledBlockedList</span>, &#123;</span><br><span class="line">  <span class="title class_">SettingsMenu</span>,</span><br><span class="line">  <span class="title class_">ClosableAvatar</span>,</span><br><span class="line">  <span class="title class_">BlockedAvatar</span>,</span><br><span class="line">  <span class="title class_">CloseIcon</span>,</span><br><span class="line">  <span class="title class_">BlockedName</span>,</span><br><span class="line">  <span class="title class_">FriendList</span>,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">ArrowMenuLeft</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/arrowMenuLeft.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> closeCircle &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/closeCircle.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> face <span class="keyword">from</span> <span class="string">&quot;assets/images/face-male-1.jpg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;styled-components/macro&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Text</span> <span class="keyword">from</span> <span class="string">&quot;components/Text&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">BlockedList</span>(<span class="params">&#123; children, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledBlockedList</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">SettingsMenu</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Icon</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">icon</span>=<span class="string">&#123;ArrowMenuLeft&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">css</span>=<span class="string">&#123;</span>`</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">cursor:</span> <span class="attr">pointer</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          `&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Text</span> <span class="attr">size</span>=<span class="string">&quot;xxlarge&quot;</span>&gt;</span>已屏蔽的好友<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">SettingsMenu</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">FriendList</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;new Array(8).fill(0).map((_, i) =&gt; &#123;</span></span><br><span class="line"><span class="language-xml">          return (</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">ClosableAvatar</span> <span class="attr">key</span>=<span class="string">&#123;i&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">BlockedAvatar</span> <span class="attr">size</span>=<span class="string">&quot;105px&quot;</span> <span class="attr">src</span>=<span class="string">&#123;face&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">CloseIcon</span> <span class="attr">width</span>=<span class="string">&#123;46&#125;</span> <span class="attr">height</span>=<span class="string">&#123;51&#125;</span> <span class="attr">icon</span>=<span class="string">&#123;closeCircle&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">BlockedName</span>&gt;</span>李浩<span class="tag">&lt;/<span class="name">BlockedName</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">ClosableAvatar</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          );</span></span><br><span class="line"><span class="language-xml">        &#125;)&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">FriendList</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledBlockedList</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">BlockedList</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">BlockedList</span>;</span><br></pre></td></tr></table></figure><p>编辑 <code>src/components/BlockedList/style.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledText</span> <span class="keyword">from</span> <span class="string">&quot;components/Text/style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Avatar</span> <span class="keyword">from</span> <span class="string">&quot;components/Avatar&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Text</span> <span class="keyword">from</span> <span class="string">&quot;components/Text&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">BlockedAvatar</span> = <span class="title function_">styled</span>(<span class="title class_">Avatar</span>)<span class="string">`</span></span><br><span class="line"><span class="string">  grid-area: avatar;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">BlockedName</span> = <span class="title function_">styled</span>(<span class="title class_">Text</span>).<span class="title function_">attrs</span>(&#123; <span class="attr">size</span>: <span class="string">&quot;xlarge&quot;</span> &#125;)<span class="string">`</span></span><br><span class="line"><span class="string">  grid-area: name;</span></span><br><span class="line"><span class="string">  margin-top: 20px;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">CloseIcon</span> = <span class="title function_">styled</span>(<span class="title class_">Icon</span>)<span class="string">`</span></span><br><span class="line"><span class="string">  grid-area: 2 / 3 / 5 / 4;</span></span><br><span class="line"><span class="string">  z-index: 10;</span></span><br><span class="line"><span class="string">  margin-top: 10px;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">ClosableAvatar</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: grid;</span></span><br><span class="line"><span class="string">  grid-template-areas:</span></span><br><span class="line"><span class="string">    &quot;avatar avatar avatar&quot;</span></span><br><span class="line"><span class="string">    &quot;avatar avatar avatar&quot;</span></span><br><span class="line"><span class="string">    &quot;avatar avatar avatar&quot;</span></span><br><span class="line"><span class="string">    &quot;name name name&quot;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  justify-items: center;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">SettingsMenu</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  height: 148px;</span></span><br><span class="line"><span class="string">  display: grid;</span></span><br><span class="line"><span class="string">  grid-template-columns: 10px 1fr;</span></span><br><span class="line"><span class="string">  align-items: center;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;StyledText&#125;</span> &#123;</span></span><br><span class="line"><span class="string">    grid-column: span 1/-1;</span></span><br><span class="line"><span class="string">    justify-self: center;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">FriendList</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: grid;</span></span><br><span class="line"><span class="string">  grid-template-columns: repeat(5, 1fr);</span></span><br><span class="line"><span class="string">  row-gap: 24px;</span></span><br><span class="line"><span class="string">  justify-items: center;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledBlockedList</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  padding: 2vh 4vw;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledBlockedList</span>;</span><br><span class="line"><span class="keyword">export</span> &#123;</span><br><span class="line">  <span class="title class_">SettingsMenu</span>,</span><br><span class="line">  <span class="title class_">ClosableAvatar</span>,</span><br><span class="line">  <span class="title class_">BlockedAvatar</span>,</span><br><span class="line">  <span class="title class_">BlockedName</span>,</span><br><span class="line">  <span class="title class_">CloseIcon</span>,</span><br><span class="line">  <span class="title class_">FriendList</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>修改 <code>src/components/BlockedList/blockedList.stories.js</code>  文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">BlockedList</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;页面组件/BlockedList&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">BlockedList</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">BlockedList</span> /&gt;</span></span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;React 即时通信 UI 实战第八章。React 即时通信 UI 实战为&lt;a href=&quot;https://www.bilibili.com/video/BV1PK4y1b7bY?p=2&amp;amp;spm_id_from=pageDriver&amp;amp;vd_source=0965c74096f788f105780e5d5d0e9ebf&quot;&gt;峰华前端工程师&lt;/a&gt;推出的 React 实战课程，以聊天（即时通信）为原型，构建了一整套的 UI 组件库，课程重点在于 UI 组件的分析和实现，力求打造自用组件库。本章包括设置页面中的 InputText、Select（表单）、Radio、Switch 开关等组件。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Web前端" scheme="http://blog.zhuangzhihao.top/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="React" scheme="http://blog.zhuangzhihao.top/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>Java 语言程序设计实践性环节</title>
    <link href="http://blog.zhuangzhihao.top/Java%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%AE%9E%E8%B7%B5%E7%8E%AF%E8%8A%82/"/>
    <id>http://blog.zhuangzhihao.top/Java%E8%AF%AD%E8%A8%80%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%AE%9E%E8%B7%B5%E7%8E%AF%E8%8A%82/</id>
    <published>2022-10-29T16:00:00.000Z</published>
    <updated>2022-10-29T00:53:27.405Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Java 语言程序设计实践环节（04748）是 Java 语言程序设计（一）专业课的上级测试部分，考核目标是掌握调试、完善和简单设计 Java 程序的能力、掌握 MyEclipse 开发工具的使用（新建项目，新建类，修改与运行程序）、掌握 Java 的基本语句，基本输入输出流、掌握使用类及方法进行 Java 面向对象程序开发的方法。运行环境是 Windows 10 系统下的 MyEclipse 软件。</p></blockquote><span id="more"></span><h4 id="一、输入、输出语句"><a href="#一、输入、输出语句" class="headerlink" title="一、输入、输出语句"></a>一、输入、输出语句</h4><p>使用 Scanner 语句输入时需要引入包 <code>import java.util.Scanner;</code> ，并定义 Scanner 对象：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test1</span> &#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">      <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">      <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">      <span class="type">String</span> <span class="variable">temp</span> <span class="operator">=</span> sc.next();</span><br><span class="line">      System.out.println(<span class="string">&quot;temp：&quot;</span>+ n);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>BufferedReader</code> 由 <code>Reader</code> 类扩展而来，提供通用的缓冲方式文本读取，而且提供了很实用的 <code>readLine</code>，读取一个文本行，从字符输入流中读取文本，缓冲各个字符，从而提供字符、数组和行的高效读取。使用 BufferedReader 流前需要引入 <code>import java.io.Reader;</code>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*</span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test2</span> &#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">      String st;</span><br><span class="line">      <span class="type">int</span> num;</span><br><span class="line">      <span class="type">float</span> fnum;</span><br><span class="line">      <span class="keyword">try</span>&#123;</span><br><span class="line">          <span class="type">BufferedReader</span> <span class="variable">br</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">          <span class="comment">// 读取一个文本行</span></span><br><span class="line">          st = br.readLine(); <span class="comment">// 阻塞式，当没有数据读取时，就一直会阻塞，而不是返回null</span></span><br><span class="line">            num = Integer.parseInt(br.readLine());  <span class="comment">//需要整型数据 Integer 转换为基本数据类型 int</span></span><br><span class="line">          fnum = Float.parseFloat(br.readLine());  <span class="comment">//Java 把从键盘输入的数据一律看作是字符串，因此若要从键盘输入并让系统认可是数值型数据，必须经过转换。</span></span><br><span class="line">          System.out.println(st + num + snum);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(IOException e)&#123;</span><br><span class="line">          System.out.println(<span class="string">&quot;错误&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二、实现常见的基本算法"><a href="#二、实现常见的基本算法" class="headerlink" title="二、实现常见的基本算法"></a>二、实现常见的基本算法</h3><p>字符统计程序。编写输入字符行，统计输入字符行中数字符、英文字母个数的 Java 应用程序：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test3</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">0</span> ;</span><br><span class="line">    <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">0</span> ;</span><br><span class="line">    <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">0</span> ;</span><br><span class="line">    <span class="type">int</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">0</span> ;</span><br><span class="line">    <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in) ;</span><br><span class="line">    System.out.println(<span class="string">&quot;请输入一串字符串&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> sc.nextLine() ;</span><br><span class="line">    <span class="type">char</span>[] sr = s.toCharArray() ;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span> ;i&lt;sr.length ; i ++ ) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&#x27;A&#x27;</span>&lt;=sr[i] &amp;&amp; <span class="string">&#x27;Z&#x27;</span>&gt;=sr[i] || <span class="string">&#x27;a&#x27;</span>&lt;=sr[i] &amp;&amp; <span class="string">&#x27;z&#x27;</span>&gt;=sr[i] ) &#123;</span><br><span class="line">          a++ ;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">&#x27;0&#x27;</span>&lt;=sr[i] &amp;&amp; <span class="string">&#x27;9&#x27;</span>&gt;=sr[i]) &#123;</span><br><span class="line">          b++ ;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(sr[i] == <span class="string">&#x27; &#x27;</span>) &#123;</span><br><span class="line">          c++ ;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">          d++ ;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;字母的个数为：&quot;</span> + a);</span><br><span class="line">    System.out.println(<span class="string">&quot;数字的个数为：&quot;</span> + b);</span><br><span class="line">    System.out.println(<span class="string">&quot;空格的个数为：&quot;</span> + c);</span><br><span class="line">    System.out.println(<span class="string">&quot;其他字符的个数为：&quot;</span> + d);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>特殊性质数的判断。例如水仙花数、完数、素数的判断程序：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 水仙花数，即：三位数的每一位的立方和等于这个三位数本身</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Daffodil</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span>  <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> sum=<span class="number">0</span>, number;</span><br><span class="line">        <span class="keyword">for</span>(number=<span class="number">100</span>;number&lt;=<span class="number">999</span>;number++) &#123;</span><br><span class="line">           <span class="type">int</span> <span class="variable">num1</span> <span class="operator">=</span> number%<span class="number">10</span>;</span><br><span class="line">           <span class="type">int</span> <span class="variable">num10</span> <span class="operator">=</span> number/<span class="number">10</span>%<span class="number">10</span>;</span><br><span class="line">           <span class="type">int</span> <span class="variable">num100</span> <span class="operator">=</span> number/<span class="number">100</span>%<span class="number">10</span>;</span><br><span class="line">           sum = num1*num1*num1 + num10*num10*num10 + num100*num100*num100;</span><br><span class="line">            <span class="keyword">if</span>(sum==number) &#123;</span><br><span class="line">                System.out.println(number+<span class="string">&quot;是水仙花数&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 完数，即：所有因子和（除了他本身）== 他本身</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WanNumber</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> num=<span class="number">1</span>;num&lt;=<span class="number">1000</span>;num++) &#123;</span><br><span class="line">           <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>( i=<span class="number">1</span>;i&lt;num;i++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(num%i==<span class="number">0</span>) &#123;</span><br><span class="line">                    sum+=i;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(num==sum) &#123;</span><br><span class="line">                System.out.println(num);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//素数：只能被1和他本身整除的数</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PrimeDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入一个数&quot;</span>);</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">paime</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        <span class="type">boolean</span> t=<span class="literal">true</span>;</span><br><span class="line">         <span class="type">int</span> i;</span><br><span class="line">         <span class="keyword">for</span> (i=<span class="number">2</span>;i&lt;paime;i++)</span><br><span class="line">         &#123;</span><br><span class="line">             <span class="keyword">if</span>(paime%i==<span class="number">0</span>)</span><br><span class="line">             &#123;</span><br><span class="line">                 t=<span class="literal">false</span>;</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">if</span>(t)</span><br><span class="line">         &#123;</span><br><span class="line">             System.out.println(<span class="string">&quot;是素数&quot;</span>);</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">else</span></span><br><span class="line">         &#123;</span><br><span class="line">           System.out.println(<span class="string">&quot;是素数&quot;</span>);</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>类的继承定义。声明几何形状类，类中定义几何形状的成员变量和方法，然后继承声明几何形状类，创建对象，并显示对象的相关信息。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GeometricObject</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String col;    <span class="comment">//String类型的私有数据域color，用于保存几何对象的颜色，默认值为white。</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> fil;   <span class="comment">//boolean类型的私有数据域filled，用于表明几何对象是否填充颜色，默认值为false。</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">GeometricObject</span><span class="params">()</span> &#123;  <span class="comment">//有参构造方法，将颜色、是否填充颜色设置为给定的参数。</span></span><br><span class="line">      col = <span class="string">&quot;white&quot;</span>;</span><br><span class="line">      fil = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">GeometricObject</span><span class="params">(String col, <span class="type">boolean</span> fil)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.col = col;</span><br><span class="line">      <span class="built_in">this</span>.fil = fil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getCol</span><span class="params">()</span> &#123;    <span class="comment">//访问器方法getColor、isFilled，分别用于访问颜色、是否填充颜色。</span></span><br><span class="line">      <span class="keyword">return</span> col;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCol</span><span class="params">(String col)</span> &#123;   <span class="comment">//更改器方法setColor、setFilled，分别用于更改颜色、是否填充颜色。</span></span><br><span class="line">      <span class="built_in">this</span>.col = col;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isFil</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> fil;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setFil</span><span class="params">(<span class="type">boolean</span> fil)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.fil = fil;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Triangle</span> <span class="keyword">extends</span> <span class="title class_">GeometricObject</span> &#123;   <span class="comment">//定义一个名为Triangle的类来继承GeometricObject类。</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> s1;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> s2;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> s3;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Triangle</span><span class="params">()</span> &#123;</span><br><span class="line">      s1 = <span class="number">1</span>;</span><br><span class="line">      s2 = <span class="number">1</span>;</span><br><span class="line">      s3 = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Triangle</span><span class="params">(String col, <span class="type">boolean</span> fil, <span class="type">double</span> s1, <span class="type">double</span> s2, <span class="type">double</span> s3)</span> &#123;</span><br><span class="line">      <span class="built_in">super</span>(col, fil);</span><br><span class="line">      <span class="built_in">this</span>.s1 = s1;</span><br><span class="line">      <span class="built_in">this</span>.s2 = s2;</span><br><span class="line">      <span class="built_in">this</span>.s3 = s3;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">gets</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="type">double</span> <span class="variable">p</span> <span class="operator">=</span> (s1 + s2 + s3) / <span class="number">2.0</span>;</span><br><span class="line">      <span class="type">double</span> <span class="variable">s</span> <span class="operator">=</span> p * (p - s1) * (p - s2) * (p - s3);</span><br><span class="line">      s = Math.sqrt(s);</span><br><span class="line">      <span class="keyword">return</span> s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getc</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> s1 + s2 + s3;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">tos</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">      String s=<span class="string">&quot;Triangle:\n&quot;</span>+<span class="string">&quot;side1 = &quot;</span>+s1+<span class="string">&quot; side2 = &quot;</span>+s2+<span class="string">&quot; side3 = &quot;</span>+s3+<span class="string">&quot;\n&quot;</span></span><br><span class="line">        +<span class="string">&quot;Color: &quot;</span>+getCol()+<span class="string">&quot; and filled: &quot;</span>+isFil()+<span class="string">&quot;\n&quot;</span></span><br><span class="line">        +<span class="string">&quot;The area is &quot;</span>+gets()+<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;The perimeter is &quot;</span>+getc()+<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">      System.out.println(s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Scanner sc=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">double</span> a=sc.nextDouble();</span><br><span class="line">        <span class="type">double</span> b=sc.nextDouble();</span><br><span class="line">        <span class="type">double</span> c=sc.nextDouble();</span><br><span class="line">        String s=sc.next();</span><br><span class="line">        <span class="type">boolean</span> f=sc.nextBoolean();</span><br><span class="line">        sc.close();</span><br><span class="line">        Triangle t=<span class="keyword">new</span> <span class="title class_">Triangle</span>(s,f,a,b,c);</span><br><span class="line">        t.tos();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数组排序程序。编写输入整数序列、对输入的整数进行排序后输出的程序：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 冒泡排序算法</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Array4</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">int</span>[] Arr = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">14</span>,<span class="number">52</span>,<span class="number">56</span>,<span class="number">32</span>,<span class="number">17</span>&#125;;</span><br><span class="line">        printArray(Arr);</span><br><span class="line">        bubbleSort(Arr);</span><br><span class="line">        printArray(Arr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printArray</span><span class="params">(<span class="type">int</span>[] arr)</span>&#123;</span><br><span class="line">        System.out.print(<span class="string">&quot;[&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> x=<span class="number">0</span>; x&lt;arr.length; x++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(x!=arr.length-<span class="number">1</span>)</span><br><span class="line">              System.out.print(arr[x]+<span class="string">&quot;,&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">              System.out.println(arr[x]+<span class="string">&quot;]&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> a, <span class="type">int</span> b)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">temp</span> <span class="operator">=</span> arr[a];</span><br><span class="line">        arr[a] = arr[b];</span><br><span class="line">        arr[b] = temp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//冒泡排序法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">bubbleSort</span><span class="params">(<span class="type">int</span>[] arr)</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> x=<span class="number">0</span>; x&lt;arr.length-<span class="number">1</span>; x++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> y=<span class="number">0</span>; y&lt;arr.length-<span class="number">1</span>-x;y++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(arr[y]&gt;arr[y+<span class="number">1</span>])</span><br><span class="line">                  swap(arr,y+<span class="number">1</span>,y);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>提取整数中每个数字的程序：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span>&#123;</span><br><span class="line">  <span class="keyword">public</span> String <span class="title function_">print</span><span class="params">(<span class="type">int</span> num)</span>&#123;</span><br><span class="line">      <span class="keyword">while</span>(num&gt;<span class="number">0</span>)&#123;</span><br><span class="line">          System.out.print(num%<span class="number">10</span>+<span class="string">&quot;，&quot;</span>);</span><br><span class="line">          num/=<span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String [] args)</span>&#123;</span><br><span class="line">      <span class="type">Test</span> <span class="variable">t</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Test</span>();</span><br><span class="line">      t.print(<span class="number">12345</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三、基于-Swing-和-AWT-的界面程序设计"><a href="#三、基于-Swing-和-AWT-的界面程序设计" class="headerlink" title="三、基于 Swing 和 AWT 的界面程序设计"></a>三、基于 Swing 和 AWT 的界面程序设计</h3><p>两个顶级容器的应用：Frame(窗口)、Dialog(弹窗)  ：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.Button;</span><br><span class="line"><span class="keyword">import</span> java.awt.Color;</span><br><span class="line"><span class="keyword">import</span> java.awt.Dialog;</span><br><span class="line"><span class="keyword">import</span> java.awt.Frame;</span><br><span class="line"><span class="keyword">import</span> java.awt.Label;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowEvent;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Myframe</span> <span class="variable">frame</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Myframe</span>();</span><br><span class="line">        frame.init();</span><br><span class="line">        frame.compen();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建一个桌面窗口，并在窗口中添加一个按钮组件</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Myframe</span> <span class="keyword">extends</span> <span class="title class_">Frame</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> -<span class="number">3005332394925719672L</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Myframe</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="built_in">super</span>(<span class="string">&quot;测试窗口&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//通过设置初始化函数来对此窗口进行初始化</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.setVisible(<span class="literal">true</span>);</span><br><span class="line">        <span class="built_in">super</span>.setBounds(<span class="number">200</span>, <span class="number">200</span>, <span class="number">200</span>, <span class="number">200</span>);</span><br><span class="line">        <span class="comment">//为窗口添加事件，进行关闭操作</span></span><br><span class="line">        <span class="built_in">this</span>.addWindowListener(<span class="keyword">new</span> <span class="title class_">WindowAdapter</span>() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">windowClosing</span><span class="params">(WindowEvent e)</span> &#123;</span><br><span class="line">            System.exit(<span class="number">0</span>);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//为此窗口添加一个组件---按钮组件</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">compen</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Button</span> <span class="variable">button</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Button</span>(<span class="string">&quot;按钮&quot;</span>);</span><br><span class="line">        button.setSize(<span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line">        <span class="comment">//设置组件的布局方式</span></span><br><span class="line">        <span class="built_in">this</span>.setLayout(<span class="literal">null</span>);;</span><br><span class="line">        <span class="built_in">this</span>.add(button);</span><br><span class="line">        <span class="comment">//为按钮主键添加侦听器---侦听器通过内部类实现---接口、继承</span></span><br><span class="line">        button.addActionListener(<span class="keyword">new</span> <span class="title class_">ActionListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">actionPerformed</span><span class="params">(ActionEvent e)</span> &#123;</span><br><span class="line">                <span class="comment">//当侦听到事件后，响应此继承的方法，并执行方法中的语句</span></span><br><span class="line">                <span class="comment">//事件产生后，重新创建一个弹窗对象进行显示</span></span><br><span class="line">                end();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">end</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="keyword">new</span> <span class="title class_">Mydialog</span>(<span class="built_in">this</span>,<span class="string">&quot;测试弹窗&quot;</span>).increase();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//创建一个弹窗通过监听弹出</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Mydialog</span> <span class="keyword">extends</span> <span class="title class_">Dialog</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加构造函数，直接通过构造函数对弹窗进行初始化</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Mydialog</span><span class="params">(Frame owner,String title)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(owner,title);</span><br><span class="line">        setVisible(<span class="literal">true</span>);<span class="comment">//方法继承自window类，往往用于顶级窗口，设置窗口是否可见</span></span><br><span class="line">        setSize(<span class="number">100</span>, <span class="number">200</span>);<span class="comment">//继承自window类，用于设置组件的大小</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 继承自window类，用于设置窗口的背景颜色，</span></span><br><span class="line"><span class="comment">         * 其需要传入color类对象可以使用color类中的类变量。</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        setBackground(Color.BLUE);</span><br><span class="line">        setLocation(<span class="number">200</span>, <span class="number">300</span>);<span class="comment">//继承自window类，移动组件到指定位置，也就是将组件放到指定位置。以物理机左上角作为原点。</span></span><br><span class="line">        <span class="comment">/*setBounds(x, y, width, height);</span></span><br><span class="line"><span class="comment">         * 继承自window类，用于移动组件到指定位置，并设定组件的大小。</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="comment">//为窗口添加事件，进行关闭操作,</span></span><br><span class="line">        <span class="comment">//这种内部类不去实现一个接口而是去继承一个类，而这个类实现类所有方法，但是方法体为空，便于以后</span></span><br><span class="line">        <span class="comment">//进行使用，这种模式方法叫做适配器模式，大大降低了无效代码的使用。</span></span><br><span class="line">        <span class="built_in">this</span>.addWindowListener(<span class="keyword">new</span> <span class="title class_">WindowAdapter</span>() &#123;</span><br><span class="line">            <span class="comment">//当事件产生后，系统构造出内部类对象，通过此对象调用，复写的方法</span></span><br><span class="line">            <span class="comment">//其中复写中方法中的参数，通过系统产生传入，</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">windowClosing</span><span class="params">(WindowEvent e)</span> &#123;</span><br><span class="line">              System.exit(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//向此容器中添加组件---文本框</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">increase</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Label</span> <span class="variable">label</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Label</span>(<span class="string">&quot;这是一个文本框&quot;</span>,<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">this</span>.add(label);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="四、JavaApplet-下的图形处理"><a href="#四、JavaApplet-下的图形处理" class="headerlink" title="四、JavaApplet 下的图形处理"></a>四、JavaApplet 下的图形处理</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.awt.* ;</span><br><span class="line"><span class="keyword">import</span> java.applet.Applet ;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AppletImage</span> <span class="keyword">extends</span> <span class="title class_">Applet</span>&#123;</span><br><span class="line"><span class="keyword">private</span> Image img[] ;</span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> index=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span>&#123;</span><br><span class="line">img=<span class="keyword">new</span> <span class="title class_">Image</span>[<span class="number">10</span>];</span><br><span class="line"><span class="type">int</span> num ;</span><br><span class="line"><span class="keyword">for</span>(num=<span class="number">0</span>;num&lt;<span class="number">10</span>;num++)&#123;</span><br><span class="line">img[num]=getImage(getDocumentBase(),<span class="string">&quot;T&quot;</span>+(num+<span class="number">1</span>)+<span class="string">&quot;.gif&quot;</span>) ;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span>&#123;</span><br><span class="line">      </span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">paint</span><span class="params">(Graphics g)</span>&#123;</span><br><span class="line">        g.drawImage(img[index],<span class="number">0</span>,<span class="number">0</span>,<span class="built_in">this</span>) ;  <span class="comment">//绘制图像</span></span><br><span class="line">        index=++index%<span class="number">10</span> ;</span><br><span class="line">        repaint() ;  <span class="comment">//重画applet 界面</span></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">          Thread.sleep(<span class="number">500</span>) ;  <span class="comment">//线程暂停</span></span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">          </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="五、Java-下的多线程程序设计"><a href="#五、Java-下的多线程程序设计" class="headerlink" title="五、Java 下的多线程程序设计"></a>五、Java 下的多线程程序设计</h3><p>编写一个有两个线程的程序，第一个线程用来计算 1~100 之间的偶数及个数，第二个线程用来计算 1-100 之间的偶数及个数：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> experiment4;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">NumberRunnable</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> first;</span><br><span class="line">    NumberRunnable(<span class="type">int</span> first)&#123;</span><br><span class="line">        <span class="built_in">this</span>.first=first;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=first;i&lt;=<span class="number">100</span>;i+=<span class="number">2</span>)&#123;</span><br><span class="line">            System.out.println(i+ <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;结束！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Exp4_1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">NumberRunnable</span> <span class="variable">runnable1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">NumberRunnable</span>(<span class="number">1</span>);</span><br><span class="line">        <span class="type">NumberRunnable</span> <span class="variable">runnable2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">NumberRunnable</span>(<span class="number">2</span>);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread_odd</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(runnable1,<span class="string">&quot;奇数线程&quot;</span>);</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread_even</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Thread</span>(runnable2,<span class="string">&quot;偶数线程&quot;</span>);</span><br><span class="line">        thread_odd.start();</span><br><span class="line">        thread_even.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Java 语言程序设计实践环节（04748）是 Java 语言程序设计（一）专业课的上级测试部分，考核目标是掌握调试、完善和简单设计 Java 程序的能力、掌握 MyEclipse 开发工具的使用（新建项目，新建类，修改与运行程序）、掌握 Java 的基本语句，基本输入输出流、掌握使用类及方法进行 Java 面向对象程序开发的方法。运行环境是 Windows 10 系统下的 MyEclipse 软件。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="计算机科学与技术" scheme="http://blog.zhuangzhihao.top/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>操作系统实践性环节</title>
    <link href="http://blog.zhuangzhihao.top/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%B7%B5%E7%8E%AF%E8%8A%82/"/>
    <id>http://blog.zhuangzhihao.top/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%B7%B5%E7%8E%AF%E8%8A%82/</id>
    <published>2022-10-24T16:00:00.000Z</published>
    <updated>2022-10-26T03:19:00.762Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>操作系统（02327）实践环节是操作系统专业课的上级测试部分，考核目标是具有熟练使用 Linux 系统常用命令的能力以及初步掌握进程的创建、控制及进程间通信程序的编写方法。运行环境是通过 putty 远程登录工具远程连接 Linux 服务器，在练习时我仍旧使用系统默认终端（zsh）连接<a href="/Ubuntu远程开发配置">云服务器</a>使用。</p></blockquote><span id="more"></span><h3 id="一、Linux-系统常用命令的使用"><a href="#一、Linux-系统常用命令的使用" class="headerlink" title="一、Linux 系统常用命令的使用"></a>一、Linux 系统常用命令的使用</h3><h4 id="登陆命令"><a href="#登陆命令" class="headerlink" title="登陆命令"></a>登陆命令</h4><p>建立 SSH 连接：<code>ssh root@zhuangzhihao.top</code></p><p>清屏：<code>ctrl + l</code> 或者 <code>clear</code></p><p>终止当前运行：<code>ctrl + c</code></p><p>执行 exit 命令退回到原来用户：<code>exit</code> 或 <code>logout</code> 或 <code>ctrl + d</code></p><h4 id="文件处理命令"><a href="#文件处理命令" class="headerlink" title="文件处理命令"></a>文件处理命令</h4><p>显示当前目录下的文件：<code>ls</code></p><p>显示当前目录下的所有文件，包括隐藏文件：<code>ls -a</code></p><p>列表显示详细信息：<code>ls -l</code></p><p>在此目录下创建一个 <code>dir</code> 目录：<code>mkdir dir</code></p><p>递归创建，如果没有 <code>dir</code> 目录的话会报错，如果加上 <code>-p</code> 则不会：<code>mkdir -p dir/subdir</code></p><p>同时创建 <code>dir/subdir</code>、<code>dir2</code> 三个目录：<code>mkdir -p dir/subdir dir2</code></p><p>切换路径到 <code>root</code> 目录下：<code>cd /root</code></p><p>切换到上一目录：<code>cd ./</code></p><p>切换到下一目录：<code>cd ../</code></p><p>删除当前目录下，一个空白目录 <code>dir</code>：<code>rmdir ./dir</code></p><p>显示当前路径：<code>pwd</code></p><p>将 <code>install.sh</code> 文件，复制到 <code>dir</code> 目录下：<code>cp install.sh dir</code></p><p>将 <code>dir</code> 目录，复制到 <code>dir2</code> 目录下：<code>cp -r dir dir2</code></p><p>将 <code>dir</code> 这个目录，复制到 <code>dir2</code> 目录下，如果没有 <code>newdir</code> 目录，那么将 <code>dir</code> 的名字改为 <code>newdir</code>：<code>cp -r dir dir2/newdir</code></p><p>将 <code>install.sh</code> 文件，复制到 <code>dir2</code> 目录下，但保证 <code>install.sh</code> 文件属性不会改变，例如最后一次修改的时间不会改变：<code>cp -p install.sh dir2</code></p><p>将 <code>dir</code> 目录剪切到 <code>dir2</code> 目录：<code>mv dir dir2</code> （如果没有 <code>dir2</code> 这个目录，呢么就是将 <code>dir</code> 的名字改为 <code>dir2</code>，相当于改名。）</p><p>删除 <code>install.sh</code> 文件，出现提示是否删除确认：<code>rm install.sh</code></p><p>删除 <code>install.sh</code> 文件，<code>-f</code> 不出现提示：<code>rm -f install.sh</code></p><p>直接删除 <code>dir</code> 目录，<code>-r</code> 删除目录：<code>rm -rf dir</code></p><p>直接删除此文件夹下的所有文件目录：<code>rm -rf *</code></p><p>创建一个空文件 <code>hello.c</code>：<code>touch hello.c</code></p><p>同时创建 <code>hello</code> 和 <code>hello.c</code> 两个文件：<code>touch hello hello.c</code></p><p>创建一个文件名为 <code>hello hello.c</code> 的文件：<code>touch &quot;hello hello.c&quot;</code></p><p>显示 <code>hello</code> 文件内容：<code>cat hello</code></p><p>显示 <code>hello</code> 文件内容，并显示行数：<code>cat -n hello</code></p><p>倒着显示 <code>hello</code> 文件内容（没有 <code>-n</code> 属性）：`tac hello</p><p>将 <code>hello</code> 文件的内容分页显示：<code>more hello</code>（当数据较多时可以使用这命令，使用空格或 <code>f</code> 翻页，<code>q</code> 退出）</p><p>将 <code>hello</code> 文件的内容倒着显示分页显示：<code>less hello</code></p><p>查看 <code>hello</code> 文件前 5 行内容：<code>head -n 5 hello</code>（如果不加行数，默认为 10）</p><p>查看 <code>hello</code> 文件后 10 行内容：<code>tail-n hello</code></p><h4 id="链接文件"><a href="#链接文件" class="headerlink" title="链接文件"></a>链接文件</h4><p>创建 <code>hello</code> 文件的软连接为 <code>hello.sort</code>：<code>ln hello ./hello.sort</code></p><p>创建 <code>hello</code> 文件的硬连接为 <code>hello.sort</code>：<code>ln -s hello ./hello.sort</code></p><p>创建 <code>dir</code> 目录的软连接为 <code>dir.sort</code>：<code>ln dir ./dir.sort</code>（注意：不允许将硬链接指向目录）</p><p>编译链接：<code>gcc -otest.out E1_fork.c</code>（生成可执行文件 <code>test.out</code>）</p><p>运行当前目录下的可执行文件 <code>test.out</code>：<code>./test.out</code></p><h4 id="权限管理命令"><a href="#权限管理命令" class="headerlink" title="权限管理命令"></a>权限管理命令</h4><p> 改变目录或文件权限：<code>chmod [设置权限的对象]+/-[权限] [文件]</code></p><ul><li>设置权限的对象包括所有者、所属组、其他这三类。<code>u</code> 表示文件的所有者，<code>g</code> 表示文件的所属组，<code>o</code> 代表其他人，<code>+</code> 代表增加权限，<code>-</code> 代表去掉权限</li><li>文件的权限就是读、写和执行，分别用 <code>r</code>、<code>w</code>、<code>x</code> 表示</li><li>多个设置权限可以使用逗号分隔：<code>chmod u+x,g+w abc.txt</code></li></ul><p>将 <code>abc.txt</code> 文件所属组的权限增加一个写的权限：<code>chmod g+w abc.txt</code></p><p>假设您是名为 <code>myfile</code> 的文件的所有者，并且要设置其权限，以便：<code>user</code> 可以 <code>read</code>，<code>write</code> 和 <code>execute</code> 它，且你的 <code>group</code> 的成员可以 <code>read</code> 和 <code>execute</code> 它，且 <code>others</code> 只能读取它：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> u=rwx,g=rx,o=r myfile</span><br></pre></td></tr></table></figure><p>使用八进制权限表示法的数字权限，4 代表阅读， 2 代表写， 1 代表执行，以及 0 表示无权限。</p><ul><li>因此，7 是权限 4 + 2 + 1（读取、写入和执行），5 是 4 + 0 + 1（读取、无写入和执行），4 是 4 + 0 + 0（读取、无写入和未执行）。</li><li>数字表示权限，三个数字分别表示所有者，所属组和其他人。</li><li>给 user、group 和 others 都赋予读写执行权限：<code>chmod 777 abc.txt</code></li></ul><p>修改 <code>hello</code>.c 文件的所有者为 zhuang：<code>chown zhuang hello.c</code></p><p>修改 <code>hello</code>.c 文件的所属组为 <code>xionggroup</code>：<code>chgrp xionggroup hello.c</code></p><p>显示，设置文件的缺省权限：<code>umask -S</code></p><h4 id="文件搜索命令"><a href="#文件搜索命令" class="headerlink" title="文件搜索命令"></a>文件搜索命令</h4><p>在当前目录下搜索名字为 <code>myfile</code> 的文件，区分大小写：<code>find ./ -name myfile</code></p><p>在当前目录下搜索名字为 <code>myfile</code> 的文件，不区分大小写：<code>find ./ -i name myfile</code></p><p>在当前目录下搜索名字以 <code>.c</code> 结尾的文件，区分大小写：<code>find ./ -name &quot;*.c&quot;</code></p><p>在当前目录下搜索名字包含 <code>ello</code> 的文件，区分大小写：<code>find ./ -name &quot;*ello*&quot;</code></p><p>在当前目录下搜索名字包含 <code>bb</code> 的目录，区分大小写：<code>find ./ -name &quot;*bb*&quot; -type d</code>（<code>d</code>：目录， <code>f</code>：文件， <code>i</code>：软链接）</p><p>在文件资料库查找文件 <code>myfile</code>，区分大小写：<code>locate myfile</code></p><p>查询 Linux 系统中命令的位置以及被查询命令帮助文档的位置：<code>whereis cp</code></p><p>查找一个存储所有命令相关信息的数据库，根据命令名返回相关结果：<code>whatis cp</code></p><p>过滤 <code>test.txt</code> 文件中 <code>hello</code> 内容：<code>grep hello test.txt</code>（加 <code>-i</code> 不区分大小写）</p><p>统计 <code>test.txt</code> 中 <code>hello</code> 内容的行数：<code>grep -c hello test.txt</code></p><h4 id="帮助命令"><a href="#帮助命令" class="headerlink" title="帮助命令"></a>帮助命令</h4><p>获得 <code>shell</code>内置命令 <code>date</code> 的帮助信息：<code>help date</code></p><p>获得帮助信息，比命令的 help 选项多了命令的用法示例、命令的描述等内容：<code>man date</code></p><h4 id="用户管理命令"><a href="#用户管理命令" class="headerlink" title="用户管理命令"></a>用户管理命令</h4><p>增加一个 <code>zhuang</code> 用户：<code>useradd zhuang</code></p><p>修改 <code>zhuang</code> 用户的密码：<code>passwd zhuang</code></p><p>切换用户为 <code>zhuang</code>：<code>su zhuang</code></p><p>显示目前登入系统的用户信息：<code>who</code> 或者 <code>w</code></p><h4 id="压缩解压命令"><a href="#压缩解压命令" class="headerlink" title="压缩解压命令"></a>压缩解压命令</h4><p>将 <code>myfile</code> 文件压缩为 <code>myfile.gz</code>：<code>gzip myfile</code>（只能压缩文件，原文件不保留）</p><p>解压 <code>myfile.gz</code> 文件：<code>gunzip myfile.gz</code></p><p>将目录 <code>dir</code> 直接打包并压缩为 <code>name.tar.gz</code> 打包目录：<code>tar -zcf name.tar.gz dir</code>（.tar.gz）</p><p>将 <code>name.tar.gz</code> 打包目录解压：<code>tar -zxf name.tar.gz</code>（<code>-x</code>：解包，<code>-c</code>：打包，<code>-v</code>：显示详细信息，<code>-f</code>：指定文件名，<code>-z</code>：同时打包压缩）</p><p>将目录 <code>dir</code> 压缩为 <code>name.zip</code>：<code>zip -r name dir</code></p><p>将 <code>name.zip</code> 解压：<code>unzip name.zip</code></p><h4 id="网络命令"><a href="#网络命令" class="headerlink" title="网络命令"></a>网络命令</h4><p>给用户 <code>zhuang</code> 发送信息（开启聊天框），按 <code>ctrl+d</code> 结束：<code>write zhuang</code></p><p>给所有在线用户发送广播 <code>helloworld</code>：<code>wall helloworld</code></p><p>查看网卡和设置信息：<code>ping</code></p><p>查看网卡和设置网卡信息：<code>ifconfig</code></p><p>列出过去和现在登入系统的用户信息：<code>last</code></p><p>列出特定用户上次登录时间：<code>lastlog</code></p><h4 id="关机重启命令"><a href="#关机重启命令" class="headerlink" title="关机重启命令"></a>关机重启命令</h4><p>重启：<code>reboot</code></p><p>立刻关机：<code>halt</code> 或 <code>poweroff</code></p><p>立刻重启（root 用户使用）：<code>shutdown -r now</code>（-c：取消前一个关机命令，-h ：关机，-r ：重启）</p><p>过10分钟自动重启（root用户使用）：<code>shutdown -r 10</code></p><p>过10分钟自动关机（root用户使用）：<code>shutdown -h 10</code></p><p>在时间为 21:00 时候重启（root用户使用）：<code>shutdown -r 21:00</code> </p><p>如果是通过 <code>shutdown</code> 命令设置重启或关机的话，可以用 <code>shutdown -c</code> 命令取消重启。</p><p>退出登录命令：<code>logout</code></p><h3 id="二、进程的创建、控制及进程间通信"><a href="#二、进程的创建、控制及进程间通信" class="headerlink" title="二、进程的创建、控制及进程间通信"></a>二、进程的创建、控制及进程间通信</h3><h4 id="getpid-获取-PID"><a href="#getpid-获取-PID" class="headerlink" title="getpid() 获取 PID"></a>getpid() 获取 PID</h4><p><code>getpid</code> 获取当前进程 ID，<code>getppid</code> 获取父进程 ID。</p><p><code>pid_t</code> 是 C 语言中用户自定义类型，在 <code>sys/types.h</code> 中定义，<code>typedef int pid_t;</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">pid_t</span> <span class="title function_">getpid</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">pid_t</span> <span class="title function_">getppid</span><span class="params">(<span class="type">void</span>)</span>;</span><br></pre></td></tr></table></figure><p>打印当前进程的 PID：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;pid=%x, ppid=%x\n&quot;</span>, getpid(), getppid());</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="fork-创建进程"><a href="#fork-创建进程" class="headerlink" title="fork() 创建进程"></a>fork() 创建进程</h4><p><code>fork</code> 创建一个子进程，父子进程并发运行，子进程复制父进程的如下属性：</p><ul><li>代码段、数据段的内容，父子进程拥有相同的代码和数据。</li><li>打开文件列表。</li></ul><p><code>fork</code> 不复制进程的 PID 属性，父子的进程的 PID 都是唯一的。 </p><p>返回值：</p><ul><li><code>pid</code> 是进程 ID 的缩写，<code>pid_t</code> 是使用 <code>typedef</code> 定义的进程 ID 类型。</li><li>父进程从 <code>fork</code> 返回处继续执行，在父进程中，<code>fork</code> 返回子进程 PID。</li><li>子进程从 <code>fork</code> 返回处开始执行，在子进程中，<code>fork</code> 返回 0。</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">pid_t</span> <span class="title function_">fork</span><span class="params">(<span class="type">void</span>)</span>;</span><br></pre></td></tr></table></figure><p>创建子进程：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">pid_t</span> pid;</span><br><span class="line">    <span class="type">int</span> x = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    pid = fork(); <span class="comment">//创建子进程</span></span><br><span class="line">    <span class="keyword">if</span> (pid == <span class="number">0</span>) &#123;  <span class="comment">/* Child */</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;child : x=%d\n&quot;</span>, ++x); </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;pid=%d\n&quot;</span>, pid);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;pid=%d\n&quot;</span>, pid);</span><br><span class="line">    <span class="comment">/* Parent */</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;parent: x=%d\n&quot;</span>, --x); </span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">输出结果:</span></span><br><span class="line"><span class="comment">    parent: x=0</span></span><br><span class="line"><span class="comment">    pid=15112</span></span><br><span class="line"><span class="comment">    child : x=2</span></span><br><span class="line"><span class="comment">    pid=0</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p><code>fork()</code> 进程有以下几个特点：</p><ul><li>调用 1 次，返回 2 次。 一次是在父进程中执行，一次是在刚创建的子进程中执行。 pid 为 0，表示当前在子进程中。</li><li>并发执行。 父进程和子进程是并发运行的独立进程。 内核以任意方式交替执行，可能会先执行父进程，也可能会先执行子进程。 程序员应该避免猜测谁先执行来做一下逻辑处理。</li><li>拥有相同且独立的地址空间：刚 fork 出的子进程和父进程拥有相同的用户栈、堆，变量。但他们相互独立的。 例如例子中：输出 x 的变量值，child 自增 1 与 parent 自减 1 互不影响。</li></ul><h4 id="其他进程控制相关函数"><a href="#其他进程控制相关函数" class="headerlink" title="其他进程控制相关函数"></a>其他进程控制相关函数</h4><p><code>wait()</code>：查询子进程的退出状态（即正常退出的退出码或导致异常终止的信号），并回收子进程的内核资源。若成功则返回进程 ID，若出错则返回 -1。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/wait.h&gt;</span></span></span><br><span class="line"><span class="type">pid_t</span> <span class="title function_">wait</span><span class="params">(<span class="type">int</span> * status)</span>;</span><br></pre></td></tr></table></figure><p><code>wait()</code> 函数常用来控制父进程和子进程的同步。在父进程中调用 <code>wait()</code> 函数，则父进程被阻塞，进入等待队列，等待子进程结束。当子进程结束时，会产生一个终止状态字，系统会向父进程发送 SIGCHLD 信号。当接到信号后，父进程提取子进程的终止状态字，从 <code>wait()</code> 函数返回继续执行原程序。</p><p><code>exit()</code>：进程结束最常调用的函数，在 <code>main()</code> 函数中调用 <code>return</code>，最终也是调用 <code>exit()</code> 函数。这些都是进程的正常终止。在正常终止时，<code>exit()</code> 函数返回进程结束状态。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">exit</span><span class="params">(<span class="type">int</span> status)</span></span><br></pre></td></tr></table></figure><p>从 OS 角度来看，进程终止会释放进程用户空间的所有资源，而进程描述符并不释放，它将来由其父进程回收。若父进程先于子进程终止，子进程成为孤儿进程，孤儿进程会被 <code>init</code> 进程（进程号为1）领养。若子进程先于父进程终止，子进程成为僵尸进程，父进程尚未对其进行善后处理（获取终止子进程的有关信息，释放它仍占用的资源）。</p><p>程序可以执行到 <code>main()</code> 的最后一个 <code>&#125;</code> 的结束，也可以运行 <code>exit();</code> 结束，也可以运行到 <code>return 0;</code> 结束。</p><p><code>execl()</code>：系统调用 <code>execl()</code> 可以将新程序加载到某一进程的内存空间，该进程会从新程序的 <code>main()</code> 函数开始执行。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">execl</span> <span class="params">(<span class="type">const</span> <span class="type">char</span> * pathname, <span class="type">const</span> <span class="type">char</span> * arg0,…<span class="comment">/*(char*)0*/</span>)</span></span><br><span class="line"><span class="comment">// pathname是要加载程序的全路径名，arg0及以后为参数列表。</span></span><br></pre></td></tr></table></figure><p>进程的用户内存空间被替换，而进程的其他属性基本不改变。进程完整的内存空间：正文区、堆区、栈区、数据区都被替换，原内容不存在了。代码替换完后，在 <code>execl()</code> 后面的代码毫无意义。</p><p>创建多个进程：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//print1.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NUM 5</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc,<span class="type">char</span> *argv[])</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;NUM;i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,argv[<span class="number">1</span>]);</span><br><span class="line">        fflush(<span class="built_in">stdout</span>);</span><br><span class="line">        sleep(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//multi_process.c</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">    <span class="type">pid_t</span> pid[<span class="number">3</span>];</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)&#123;</span><br><span class="line">        pid[i]=fork();</span><br><span class="line">        <span class="keyword">if</span>(pid[i]==<span class="number">0</span>)&#123;</span><br><span class="line">          <span class="keyword">break</span>;<span class="comment">//防止子进程再次创建子进程</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(pid[<span class="number">0</span>]==<span class="number">0</span>)&#123;</span><br><span class="line">      execl(<span class="string">&quot;print1&quot;</span>,<span class="string">&quot;print&quot;</span>,<span class="string">&quot;Good&quot;</span>,<span class="literal">NULL</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(pid[<span class="number">1</span>]==<span class="number">0</span>)&#123;</span><br><span class="line">          execl(<span class="string">&quot;print1&quot;</span>,<span class="string">&quot;print&quot;</span>,<span class="string">&quot;Hello&quot;</span>,<span class="literal">NULL</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(pid[<span class="number">2</span>]==<span class="number">0</span>) execl(<span class="string">&quot;print1&quot;</span>,<span class="string">&quot;print&quot;</span>,<span class="string">&quot;201919044217&quot;</span>,<span class="literal">NULL</span>);</span><br><span class="line">            wait();</span><br><span class="line">            wait();</span><br><span class="line">            wait();<span class="comment">//调用一次，只能回收一个子进程</span></span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gcc print1.c –o print1</span><br><span class="line">gcc multi_process.c –o multi</span><br><span class="line">time ./multi  <span class="comment">#获取到一个程序的执行时间，包括程序的实际运行时间(real time)，以及程序运行在用户态的时间(user time)和内核态的时间(sys time)</span></span><br></pre></td></tr></table></figure><h4 id="进程间通信（IPC）"><a href="#进程间通信（IPC）" class="headerlink" title="进程间通信（IPC）"></a>进程间通信（IPC）</h4><p>注意：在超级用户（管理员）下才可以进行共享内存进程通信，否则提示段错误。使用 <code>su -</code> 切换。</p><p>共享内存实现 IPC 基本步骤：</p><ol><li>﻿﻿﻿获得唯一的 <code>key</code> 值：一般采用 <code>ftok</code> 得到唯一的键值，</li><li>﻿﻿使用 <code>shmget</code> 创建或获得共享内存区，</li><li>﻿﻿使用 <code>shmat</code> 将共享内存区附加到进程中，</li><li>﻿﻿﻿使用共享内存区，</li><li>与共享内存区脱离，但是记住这时共享内在区，依然存在，必须等到内核重启，</li><li>﻿﻿﻿申请的共享内存区的大小是有限制的。</li></ol><p>实验内容：应用 Linux 共享内存机制，实现两个进程间相互传递一个学生的记录，包括：</p><ol><li>﻿﻿﻿学号：SID，char 型，8 位</li><li>﻿﻿姓名：NAME，char 型，8 位</li><li>﻿﻿年龄：Age，int 型</li><li>﻿﻿﻿专业：Specialty，char 型，8 位</li><li>﻿﻿﻿班级：Class，char 型，4 位一个记录约 30 个字节。</li></ol><p>共享内存函数由 <code>shmget</code>、<code>shmat</code>、<code>shmdt</code>、<code>shmctl</code> 四个函数组成：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//shm1</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/ipc.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/shm.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.n&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    <span class="type">char</span> name[<span class="number">4</span>];</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">&#125;people;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> arge, <span class="type">char</span> *argvll)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> shm_id, i;</span><br><span class="line">    <span class="type">key_t</span> key; </span><br><span class="line">  <span class="type">char</span> temp;</span><br><span class="line">    people *p_map;</span><br><span class="line">    <span class="type">char</span> *path = <span class="string">&quot;./shm1.c&quot;</span>;</span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">使用 ftok 根据 path 和作为项目标识符的单个字符生成 key 值确保进程间使用相同的 key</span></span><br><span class="line"><span class="comment">使用相同 key 值的 shmget 只会在第一次时创建新结构</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">key = ftok(path, <span class="number">0</span>); <span class="comment">//产生 key 值</span></span><br><span class="line"><span class="keyword">if</span>(key == <span class="number">-1</span>)&#123;</span><br><span class="line">      perror(<span class="string">&quot;ftok error \n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">shm_id = shmget(key, <span class="number">4096</span>, IPC_CREAT); <span class="comment">//创建大小为 4096 字节的共享内存段，IPC_CREAT是创建标志，代表如果不存在就创建，成功则返回共享存储的 ID。</span></span><br><span class="line"><span class="keyword">if</span>(shm_id == <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">        perror(<span class="string">&quot; shmget error \n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">p_map = (people*)shmat(shm_id, <span class="literal">NULL</span>, O);</span><br><span class="line">    <span class="comment">/*将共享内存附加到进程中，允许进程访问</span></span><br><span class="line"><span class="comment">    第二个参数用来指定共享段所连接到的地址，为了便于在不同硬件间移植，一般设为 NULL，即不指定共享段所连接到的地址，让系统自己选择合适的地址。</span></span><br><span class="line"><span class="comment">    第三个参数 0 指定以读写方式访问共享段。</span></span><br><span class="line"><span class="comment">    函数返回实际共享段连接到的地址。</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">  temp = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">      temp += <span class="number">1</span>;  <span class="comment">//字符加一为 &#x27;b&#x27;</span></span><br><span class="line">      <span class="built_in">memcpy</span>((*(p_map + i)).name, &amp;temp, <span class="number">1</span>); <span class="comment">//*(p_map).name &#x27;b&#x27;,age1 name2,age2 </span></span><br><span class="line">      <span class="comment">//从第二个参数指定的位置拷贝一个字节到第一个参数指定的位置中</span></span><br><span class="line">      (*(p_map + i)).age = <span class="number">20</span> + i;   <span class="comment">// &#x27;b&#x27;,20 </span></span><br><span class="line">    &#125;</span><br><span class="line">  system(<span class="string">&quot;ipcs -m&quot;</span>); <span class="comment">//ipcs 命令往标准输出写入一些关于活动进程间通信设施的信息，-m表示为共享内存</span></span><br><span class="line"><span class="keyword">if</span>(shmdt(p_map) == <span class="number">-1</span>) <span class="comment">//与 shmat 函数相反，用来断开与共享内存附加点的地址，禁止本进程访问此片共享内存，参数为连接共享内存的起始地址。</span></span><br><span class="line">    &#123;</span><br><span class="line">      perror(<span class="string">&quot;detach error&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  system(<span class="string">&quot;ipcs -m&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//shm2</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">System V共享内存区是放在内核当中的,因此在内核重新引导之前,对数据的修改是一直保持的，这也是我们的实验能够实现的原因,因为在第二个进程起动时，第一个进程已经运行结束了．</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/ipc.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/shm.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.n&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="comment">// 完成从共享内存区的读出</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    <span class="type">char</span> name[<span class="number">4</span>];</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">&#125;people;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> arge, <span class="type">char</span> *argvll)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> shm_id, i;</span><br><span class="line">    <span class="type">key_t</span> key;</span><br><span class="line">    people *p_map;</span><br><span class="line">    <span class="type">char</span> *path = <span class="string">&quot;./shm1.c&quot;</span>;</span><br><span class="line">key = ftok(path, <span class="number">0</span>); <span class="comment">//得到一个一样的 key</span></span><br><span class="line"><span class="keyword">if</span>(key == <span class="number">-1</span>)&#123;</span><br><span class="line">      perror(<span class="string">&quot;ftok error \n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">shm_id = shmget(key, <span class="number">4096</span>, IPC_CREAT);  <span class="comment">// 得到一样的id</span></span><br><span class="line"><span class="keyword">if</span>(shm_id == <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">        perror(<span class="string">&quot; shmget error \n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">p_map = (people*)shmat(shm_id, <span class="literal">NULL</span>, O);</span><br><span class="line">   <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;name:%s\t&quot;</span>,(*(p_map + i)).name);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;age:%d\n&quot;</span>,(*(p_map + i)).age);</span><br><span class="line">    &#125;</span><br><span class="line">  system(<span class="string">&quot;ipcs -m&quot;</span>); <span class="comment">//ipcs 命令往标准输出写入一些关于活动进程间通信设施的信息，-m表示为共享内存</span></span><br><span class="line"><span class="keyword">if</span>(shmdt(p_map) == <span class="number">-1</span>) <span class="comment">//与 shmat 函数相反，用来断开与共享内存附加点的地址，禁止本进程访问此片共享内存，参数为连接共享内存的起始地址。</span></span><br><span class="line">    &#123;</span><br><span class="line">      perror(<span class="string">&quot;detach error \n&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  system(<span class="string">&quot;ipcs -m&quot;</span>);</span><br><span class="line">    <span class="built_in">exit</span>(EXIT_SUCCESS);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;操作系统（02327）实践环节是操作系统专业课的上级测试部分，考核目标是具有熟练使用 Linux 系统常用命令的能力以及初步掌握进程的创建、控制及进程间通信程序的编写方法。运行环境是通过 putty 远程登录工具远程连接 Linux 服务器，在练习时我仍旧使用系统默认终端（zsh）连接&lt;a href=&quot;/Ubuntu远程开发配置&quot;&gt;云服务器&lt;/a&gt;使用。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="计算机科学与技术" scheme="http://blog.zhuangzhihao.top/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E4%B8%8E%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="Linux" scheme="http://blog.zhuangzhihao.top/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>React 即时通信 ChatUI 滑动抽屉</title>
    <link href="http://blog.zhuangzhihao.top/ChatUI%E6%BB%91%E5%8A%A8%E6%8A%BD%E5%B1%89/"/>
    <id>http://blog.zhuangzhihao.top/ChatUI%E6%BB%91%E5%8A%A8%E6%8A%BD%E5%B1%89/</id>
    <published>2022-10-21T16:00:00.000Z</published>
    <updated>2022-11-25T11:12:28.364Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>React 即时通信 UI 实战第七章。React 即时通信 UI 实战为<a href="https://www.bilibili.com/video/BV1PK4y1b7bY?p=2&amp;spm_id_from=pageDriver&amp;vd_source=0965c74096f788f105780e5d5d0e9ebf">峰华前端工程师</a>推出的 React 实战课程，以聊天（即时通信）为原型，构建了一整套的 UI 组件库，课程重点在于 UI 组件的分析和实现，力求打造自用组件库。本章包括滑动抽屉中的个人资料、个人信息、社交信息、分割线等组件。</p></blockquote><span id="more"></span><h3 id="一、社交信息组件开发"><a href="#一、社交信息组件开发" class="headerlink" title="一、社交信息组件开发"></a>一、社交信息组件开发</h3><p>社交信息不需要 <code>stories</code> 和 <code>styles</code> 编辑文件，手动在 <code>src/components/Icon</code> 目录下新建 <code>SocialIcon</code> 文件夹，并在其中新建 <code>index.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Button</span> <span class="keyword">from</span> <span class="string">&quot;components/Button&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FontAwesomeIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/react-fontawesome&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">SocialIcon</span>(<span class="params">&#123; icon, bgColor, href, ...rest &#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">Button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">size</span>=<span class="string">&quot;30px&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">bgColor</span>=<span class="string">&#123;bgColor&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> href &amp;&amp; window.open(href, &quot;_blank&quot;)&#125;</span></span><br><span class="line"><span class="language-xml">            &#123;...rest&#125;</span></span><br><span class="line"><span class="language-xml">        &gt;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;icon&#125;</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">fontSize:</span> &quot;<span class="attr">16px</span>&quot; &#125;&#125; /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">SocialIcon</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">    <span class="attr">icon</span>: <span class="title class_">PropTypes</span>.<span class="property">elementType</span>,</span><br><span class="line">    <span class="attr">bgColor</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">    <span class="attr">href</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">SocialIcon</span>;</span><br></pre></td></tr></table></figure><p>在 <code>src/components/Icon/index.js</code> 中添加：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">SocialIcon</span> <span class="keyword">from</span> <span class="string">&quot;./SocialIcon&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Icon</span>.<span class="property">Social</span> = <span class="title class_">SocialIcon</span>;</span><br></pre></td></tr></table></figure><h3 id="二、分割线组件开发"><a href="#二、分割线组件开发" class="headerlink" title="二、分割线组件开发"></a>二、分割线组件开发</h3><p>使用 Hygen 创建一个分割线组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new Seperator</span><br></pre></td></tr></table></figure><p>再在 <code>style.js</code> 中修改样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledSeperator</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  width: 100%;</span></span><br><span class="line"><span class="string">  height: 1px;</span></span><br><span class="line"><span class="string">  border-bottom: 1px solid <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.gray4&#125;</span>;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledSeperator</span>;</span><br></pre></td></tr></table></figure><p>最后编辑 <code>seperator.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Seperator</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/Seperator&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Seperator</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">padding:</span> &quot;<span class="attr">24px</span>&quot; &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Seperator</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="三、组装滑动抽屉页面组件"><a href="#三、组装滑动抽屉页面组件" class="headerlink" title="三、组装滑动抽屉页面组件"></a>三、组装滑动抽屉页面组件</h3><p>使用 Hygen 创建一个 Profile 组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new Profile</span><br></pre></td></tr></table></figure><p>在 <code>index.js</code> 文件中编辑标题栏组件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledProfile</span>, &#123;</span><br><span class="line">  <span class="title class_">SocialLinks</span>,</span><br><span class="line">  <span class="title class_">ContactSection</span>,</span><br><span class="line">  <span class="title class_">Album</span>,</span><br><span class="line">  <span class="title class_">Photo</span>,</span><br><span class="line">  <span class="title class_">AlbumSection</span>,</span><br><span class="line">  <span class="title class_">AlbumTitle</span>,</span><br><span class="line">  <span class="title class_">CloseIcon</span>,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;styled-components/macro&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> face <span class="keyword">from</span> <span class="string">&quot;assets/images/face-male-3.jpg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Avatar</span> <span class="keyword">from</span> <span class="string">&quot;components/Avatar&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Paragraph</span> <span class="keyword">from</span> <span class="string">&quot;components/Paragraph&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Emoji</span> <span class="keyword">from</span> <span class="string">&quot;components/Emoji&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  faWeibo,</span><br><span class="line">  faGithub,</span><br><span class="line">  faLinkedin,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-brands-svg-icons&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Seperator</span> <span class="keyword">from</span> <span class="string">&quot;components/Seperator&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Text</span> <span class="keyword">from</span> <span class="string">&quot;components/Text&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> photo1 <span class="keyword">from</span> <span class="string">&quot;assets/images/photo1.jpg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> photo2 <span class="keyword">from</span> <span class="string">&quot;assets/images/photo2.jpg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> photo3 <span class="keyword">from</span> <span class="string">&quot;assets/images/photo3.jpg&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">Cross</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/cross.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Button</span> <span class="keyword">from</span> <span class="string">&quot;components/Button&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FontAwesomeIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/react-fontawesome&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; faPen &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-solid-svg-icons&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Profile</span>(<span class="params">&#123;</span></span><br><span class="line"><span class="params">  showEditBtn,</span></span><br><span class="line"><span class="params">  showCloseIcon = <span class="literal">true</span>,</span></span><br><span class="line"><span class="params">  onCloseClick,</span></span><br><span class="line"><span class="params">  onEdit,</span></span><br><span class="line"><span class="params">  status,</span></span><br><span class="line"><span class="params">  children,</span></span><br><span class="line"><span class="params">  ...rest</span></span><br><span class="line"><span class="params">&#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledProfile</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;showCloseIcon &amp;&amp; <span class="tag">&lt;<span class="name">CloseIcon</span> <span class="attr">icon</span>=<span class="string">&#123;Cross&#125;</span> <span class="attr">onClick</span>=<span class="string">&#123;onCloseClick&#125;</span> /&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Avatar</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">css</span>=<span class="string">&#123;</span>`</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">margin:</span> <span class="attr">26px</span> <span class="attr">0</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">grid-area:</span> <span class="attr">1</span> / <span class="attr">1</span> / <span class="attr">3</span> / <span class="attr">2</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        `&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">src</span>=<span class="string">&#123;face&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">size</span>=<span class="string">&quot;160px&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">status</span>=<span class="string">&#123;status&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">statusIconSize</span>=<span class="string">&quot;25px&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;showEditBtn &amp;&amp; (</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">size</span>=<span class="string">&quot;52px&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">onClick</span>=<span class="string">&#123;onEdit&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">css</span>=<span class="string">&#123;</span>`</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">grid-area:</span> <span class="attr">1</span> / <span class="attr">1</span> / <span class="attr">3</span> / <span class="attr">2</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">align-self:</span> <span class="attr">end</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">margin-left:</span> <span class="attr">100px</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">z-index:</span> <span class="attr">10</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          `&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">FontAwesomeIcon</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">css</span>=<span class="string">&#123;</span>`</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">font-size:</span> <span class="attr">24px</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            `&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">icon</span>=<span class="string">&#123;faPen&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      )&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Paragraph</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">size</span>=<span class="string">&quot;xlarge&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">css</span>=<span class="string">&#123;</span>`</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">margin-bottom:</span> <span class="attr">12px</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        `&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span></span></span><br><span class="line"><span class="language-xml">        慕容天宇</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Paragraph</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">size</span>=<span class="string">&quot;medium&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">type</span>=<span class="string">&quot;secondary&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">css</span>=<span class="string">&#123;</span>`</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">margin-bottom:</span> <span class="attr">18px</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        `&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span></span></span><br><span class="line"><span class="language-xml">        北京市 朝阳区</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Paragraph</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">css</span>=<span class="string">&#123;</span>`</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">margin-bottom:</span> <span class="attr">26px</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        `&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span></span></span><br><span class="line"><span class="language-xml">        帮助客户构建网站，并协助在社交网站上进行推广&#123;&quot; &quot;&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Emoji</span> <span class="attr">label</span>=<span class="string">&quot;fire&quot;</span>&gt;</span>🔥<span class="tag">&lt;/<span class="name">Emoji</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">SocialLinks</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Icon.Social</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">icon</span>=<span class="string">&#123;faWeibo&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">bgColor</span>=<span class="string">&quot;#F06767&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">href</span>=<span class="string">&quot;http://www.weibo.com&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Icon.Social</span> <span class="attr">icon</span>=<span class="string">&#123;faGithub&#125;</span> <span class="attr">bgColor</span>=<span class="string">&quot;black&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Icon.Social</span> <span class="attr">icon</span>=<span class="string">&#123;faLinkedin&#125;</span> <span class="attr">bgColor</span>=<span class="string">&quot;#2483C0&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">SocialLinks</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Seperator</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">css</span>=<span class="string">&#123;</span>`</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">margin:</span> <span class="attr">30px</span> <span class="attr">0</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        `&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ContactSection</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Description</span> <span class="attr">label</span>=<span class="string">&quot;联系电话&quot;</span>&gt;</span>+86 18688888888<span class="tag">&lt;/<span class="name">Description</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Description</span> <span class="attr">label</span>=<span class="string">&quot;电子邮件&quot;</span>&gt;</span>admin@fh.com<span class="tag">&lt;/<span class="name">Description</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Description</span> <span class="attr">label</span>=<span class="string">&quot;个人网站&quot;</span>&gt;</span>https://zxuqian.cn<span class="tag">&lt;/<span class="name">Description</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">ContactSection</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Seperator</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">css</span>=<span class="string">&#123;</span>`</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">margin:</span> <span class="attr">30px</span> <span class="attr">0</span>;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        `&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">AlbumSection</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">AlbumTitle</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Text</span> <span class="attr">type</span>=<span class="string">&quot;secondary&quot;</span>&gt;</span>相册（31）<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">a</span>&gt;</span>查看全部<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">AlbumTitle</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Album</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Photo</span> <span class="attr">src</span>=<span class="string">&#123;photo1&#125;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Photo</span> <span class="attr">src</span>=<span class="string">&#123;photo2&#125;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Photo</span> <span class="attr">src</span>=<span class="string">&#123;photo3&#125;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Album</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">AlbumSection</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledProfile</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Description</span>(<span class="params">&#123; label, children &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Text</span> <span class="attr">type</span>=<span class="string">&quot;secondary&quot;</span>&gt;</span>&#123;label&#125;：<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Text</span>&gt;</span>&#123;children&#125;<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Profile</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Profile</span>;</span><br></pre></td></tr></table></figure><p>再在 <code>style.js</code> 中修改样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> arrowRight <span class="keyword">from</span> <span class="string">&quot;assets/icon/arrowRight.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">SocialLinks</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  &amp; &gt; * &#123;</span></span><br><span class="line"><span class="string">    margin: 0 9px;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">ContactSection</span> = styled.<span class="property">section</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: grid;</span></span><br><span class="line"><span class="string">  row-gap: 18px;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">AlbumSection</span> = styled.<span class="property">section</span><span class="string">``</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">AlbumTitle</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  justify-self: stretch;</span></span><br><span class="line"><span class="string">  display: flex;</span></span><br><span class="line"><span class="string">  justify-content: space-between;</span></span><br><span class="line"><span class="string">  align-items: center;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  &amp; &gt; a &#123;</span></span><br><span class="line"><span class="string">    text-decoration: none;</span></span><br><span class="line"><span class="string">    font-size: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.normal&#125;</span>;</span></span><br><span class="line"><span class="string">    color: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.primaryColor&#125;</span>;</span></span><br><span class="line"><span class="string">    &amp;::after &#123;</span></span><br><span class="line"><span class="string">      display: inline-block;</span></span><br><span class="line"><span class="string">      content: url(<span class="subst">$&#123;arrowRight&#125;</span>);</span></span><br><span class="line"><span class="string">      margin-left: 2px;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Album</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  margin-top: 14px;</span></span><br><span class="line"><span class="string">  justify-self: start;</span></span><br><span class="line"><span class="string">  width: 100%;</span></span><br><span class="line"><span class="string">  display: grid;</span></span><br><span class="line"><span class="string">  grid-template-columns: repeat(3, 1fr);</span></span><br><span class="line"><span class="string">  gap: 10px;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Photo</span> = styled.<span class="property">img</span><span class="string">`</span></span><br><span class="line"><span class="string">  width: 76px;</span></span><br><span class="line"><span class="string">  height: 76px;</span></span><br><span class="line"><span class="string">  object-fit: cover;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">CloseIcon</span> = <span class="title function_">styled</span>(<span class="title class_">Icon</span>).<span class="title function_">attrs</span>(&#123; <span class="attr">opacity</span>: <span class="number">0.3</span> &#125;)<span class="string">`</span></span><br><span class="line"><span class="string">  position: absolute;</span></span><br><span class="line"><span class="string">  right: 30px;</span></span><br><span class="line"><span class="string">  top: 30px;</span></span><br><span class="line"><span class="string">  cursor: pointer;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledProfile</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: grid;</span></span><br><span class="line"><span class="string">  align-content: start;</span></span><br><span class="line"><span class="string">  justify-content: center;</span></span><br><span class="line"><span class="string">  justify-items: center;</span></span><br><span class="line"><span class="string">  position: relative;</span></span><br><span class="line"><span class="string">  padding: 30px;</span></span><br><span class="line"><span class="string">  height: 100vh;</span></span><br><span class="line"><span class="string">  margin-top: 2vh;</span></span><br><span class="line"><span class="string">  overflow-y: auto;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledProfile</span>;</span><br><span class="line"><span class="keyword">export</span> &#123;</span><br><span class="line">    <span class="title class_">SocialLinks</span>,</span><br><span class="line">    <span class="title class_">ContactSection</span>,</span><br><span class="line">    <span class="title class_">Album</span>,</span><br><span class="line">    <span class="title class_">AlbumSection</span>,</span><br><span class="line">    <span class="title class_">AlbumTitle</span>,</span><br><span class="line">    <span class="title class_">Photo</span>,</span><br><span class="line">    <span class="title class_">CloseIcon</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>最后编辑 <code>profile.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Profile</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;页面组件/Profile&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Profile</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Profile</span> <span class="attr">status</span>=<span class="string">&quot;online&quot;</span> /&gt;</span></span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;React 即时通信 UI 实战第七章。React 即时通信 UI 实战为&lt;a href=&quot;https://www.bilibili.com/video/BV1PK4y1b7bY?p=2&amp;amp;spm_id_from=pageDriver&amp;amp;vd_source=0965c74096f788f105780e5d5d0e9ebf&quot;&gt;峰华前端工程师&lt;/a&gt;推出的 React 实战课程，以聊天（即时通信）为原型，构建了一整套的 UI 组件库，课程重点在于 UI 组件的分析和实现，力求打造自用组件库。本章包括滑动抽屉中的个人资料、个人信息、社交信息、分割线等组件。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Web前端" scheme="http://blog.zhuangzhihao.top/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="React" scheme="http://blog.zhuangzhihao.top/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>React 即时通信 ChatUI 内容区</title>
    <link href="http://blog.zhuangzhihao.top/ChatUI%E5%86%85%E5%AE%B9%E5%8C%BA/"/>
    <id>http://blog.zhuangzhihao.top/ChatUI%E5%86%85%E5%AE%B9%E5%8C%BA/</id>
    <published>2022-10-14T16:00:00.000Z</published>
    <updated>2022-10-15T11:04:42.163Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>React 即时通信 UI 实战第六章。React 即时通信 UI 实战为<a href="https://www.bilibili.com/video/BV1PK4y1b7bY?p=2&amp;spm_id_from=pageDriver&amp;vd_source=0965c74096f788f105780e5d5d0e9ebf">峰华前端工程师</a>推出的 React 实战课程，以聊天（即时通信）为原型，构建了一整套的 UI 组件库，课程重点在于 UI 组件的分析和实现，力求打造自用组件库。本章包括内容区中的标题栏、会话气泡、会话窗口、语音消息等组件。</p></blockquote><span id="more"></span><h3 id="一、标题栏组件开发"><a href="#一、标题栏组件开发" class="headerlink" title="一、标题栏组件开发"></a>一、标题栏组件开发</h3><p>使用 Hygen 创建一个标题栏组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new TitleBar</span><br></pre></td></tr></table></figure><p>在 <code>index.js</code> 文件中编辑标题栏组件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledTitleBar</span>, &#123; <span class="title class_">Actions</span>, <span class="title class_">Title</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Avatar</span> <span class="keyword">from</span> <span class="string">&quot;components/Avatar&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Paragraph</span> <span class="keyword">from</span> <span class="string">&quot;components/Paragraph&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Text</span> <span class="keyword">from</span> <span class="string">&quot;components/Text&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> face <span class="keyword">from</span> <span class="string">&quot;assets/images/face-male-3.jpg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">Call</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/call.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">Camera</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/camera.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">Options</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/options.svg&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">TitleBar</span>(<span class="params">&#123; children, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledTitleBar</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Avatar</span> <span class="attr">status</span>=<span class="string">&quot;offline&quot;</span> <span class="attr">src</span>=<span class="string">&#123;face&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Paragraph</span> <span class="attr">size</span>=<span class="string">&quot;large&quot;</span>&gt;</span>慕容天宇<span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Paragraph</span> <span class="attr">type</span>=<span class="string">&quot;secondary&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Text</span>&gt;</span>离线<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Text</span>&gt;</span>· 最后阅读：3小时前<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Actions</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Icon</span> <span class="attr">opacity</span>=<span class="string">&#123;0.3&#125;</span> <span class="attr">icon</span>=<span class="string">&#123;Call&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Icon</span> <span class="attr">opacity</span>=<span class="string">&#123;0.3&#125;</span> <span class="attr">icon</span>=<span class="string">&#123;Camera&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Icon</span> <span class="attr">opacity</span>=<span class="string">&#123;0.3&#125;</span> <span class="attr">icon</span>=<span class="string">&#123;Options&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Actions</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledTitleBar</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">TitleBar</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">TitleBar</span>;</span><br></pre></td></tr></table></figure><p>再在 <code>style.js</code> 中修改样式，使用 Grid 布局：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">StyledIcon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon/style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Title</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">    display: grid;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Actions</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">    display: flex;</span></span><br><span class="line"><span class="string">    justify-content: space-between;</span></span><br><span class="line"><span class="string">    align-items: center;</span></span><br><span class="line"><span class="string">    <span class="subst">$&#123;StyledIcon&#125;</span> &#123;</span></span><br><span class="line"><span class="string">        cursor: pointer;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledTitleBar</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">    display: grid;</span></span><br><span class="line"><span class="string">    grid-template-columns: 62px 1fr 112px;</span></span><br><span class="line"><span class="string">    padding: 30px;</span></span><br><span class="line"><span class="string">    max-height: 110px;</span></span><br><span class="line"><span class="string">    border-bottom: 1px solid <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.gray4&#125;</span>;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledTitleBar</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">Actions</span>, <span class="title class_">Title</span> &#125;;</span><br></pre></td></tr></table></figure><p>最后编辑 <code>titleBar.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">TitleBar</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/TitleBar&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">TitleBar</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">TitleBar</span> /&gt;</span></span>;</span><br></pre></td></tr></table></figure><h3 id="二、会话气泡组件开发"><a href="#二、会话气泡组件开发" class="headerlink" title="二、会话气泡组件开发"></a>二、会话气泡组件开发</h3><p>会话气泡用于突出显示聊天的内容，使用 Hygen 创建一个标题栏组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new ChatBubble</span><br></pre></td></tr></table></figure><p>在 <code>index.js</code> 文件中编辑会话气泡组件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledChatBubble</span>, &#123; <span class="title class_">Bubble</span>, <span class="title class_">BubbleTip</span>, <span class="title class_">Time</span>, <span class="title class_">MessageText</span>, &#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">BubbleTipIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/bubbleTip.svg&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">ChatBubble</span>(<span class="params">&#123; children, type, time, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledChatBubble</span> <span class="attr">type</span>=<span class="string">&#123;type&#125;</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Bubble</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">BubbleTip</span> <span class="attr">icon</span>=<span class="string">&#123;BubbleTipIcon&#125;</span> <span class="attr">width</span>=<span class="string">&#123;40&#125;</span> <span class="attr">height</span>=<span class="string">&#123;28&#125;</span> <span class="attr">color</span>=<span class="string">&quot;white&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">MessageText</span>&gt;</span>&#123;children&#125;<span class="tag">&lt;/<span class="name">MessageText</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Bubble</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Time</span>&gt;</span>&#123;time&#125;<span class="tag">&lt;/<span class="name">Time</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledChatBubble</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">ChatBubble</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">  <span class="attr">type</span>: <span class="title class_">PropTypes</span>.<span class="title function_">oneOf</span>([<span class="string">&quot;mine&quot;</span>]),</span><br><span class="line">  <span class="attr">time</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">ChatBubble</span>;</span><br></pre></td></tr></table></figure><p>再在 <code>style.js</code> 中修改样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled, &#123; css &#125; <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Paragraph</span> <span class="keyword">from</span> <span class="string">&quot;components/Paragraph&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Text</span> <span class="keyword">from</span> <span class="string">&quot;components/Text&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Time</span> = <span class="title function_">styled</span>(<span class="title class_">Paragraph</span>).<span class="title function_">attrs</span>(&#123; <span class="attr">type</span>: <span class="string">&quot;secondary&quot;</span>, <span class="attr">size</span>: <span class="string">&quot;small&quot;</span> &#125;)<span class="string">`</span></span><br><span class="line"><span class="string">    margin: 6px;</span></span><br><span class="line"><span class="string">    margin-left: 24px;</span></span><br><span class="line"><span class="string">    word-spacing: 1rem;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">BubbleTip</span> = <span class="title function_">styled</span>(<span class="title class_">Icon</span>)<span class="string">`</span></span><br><span class="line"><span class="string">    position: absolute;</span></span><br><span class="line"><span class="string">    bottom: -15%;</span></span><br><span class="line"><span class="string">    left: 0;</span></span><br><span class="line"><span class="string">    z-index: 5;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Bubble</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">    padding: 15px 22px;</span></span><br><span class="line"><span class="string">    box-shadow: 0px 8px 24px rgba(0, 0, 0, 0.1);</span></span><br><span class="line"><span class="string">    border-radius: 100px;</span></span><br><span class="line"><span class="string">    position: relative;</span></span><br><span class="line"><span class="string">    z-index: 10;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">MessageText</span> = <span class="title function_">styled</span>(<span class="title class_">Text</span>)<span class="string">``</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> typeVariants = &#123;</span><br><span class="line">    <span class="attr">mine</span>: css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">      </span><span class="subst">$&#123;Bubble&#125;</span><span class="language-css"> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: </span><span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.primaryColor&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">  </span></span><br><span class="line"><span class="language-css">      </span><span class="subst">$&#123;BubbleTip&#125;</span><span class="language-css"> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">180deg</span>);</span></span><br><span class="line"><span class="language-css">        <span class="attribute">left</span>: unset;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">  </span></span><br><span class="line"><span class="language-css">        path &#123;</span></span><br><span class="line"><span class="language-css">          fill: </span><span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.primaryColor&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">  </span></span><br><span class="line"><span class="language-css">      </span><span class="subst">$&#123;Time&#125;</span><span class="language-css"> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-align</span>: right;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin-left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin-right</span>: <span class="number">24px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">  </span></span><br><span class="line"><span class="language-css">      </span><span class="subst">$&#123;MessageText&#125;</span><span class="language-css"> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    `</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledChatBubble</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">    display: flex;</span></span><br><span class="line"><span class="string">    flex-direction: column;</span></span><br><span class="line"><span class="string">    <span class="subst">$&#123;(&#123; type &#125;) =&gt; type &amp;&amp; typeVariants[type]&#125;</span></span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledChatBubble</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">Bubble</span>, <span class="title class_">BubbleTip</span>, <span class="title class_">Time</span>, <span class="title class_">MessageText</span> &#125;;</span><br></pre></td></tr></table></figure><p>最后编辑 <code>chatBubble.stories.js</code> 文件，使用 decorators 设置 stories 中默认边距：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ChatBubble</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/ChatBubble&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">ChatBubble</span>,</span><br><span class="line">  <span class="attr">decorators</span>: [<span class="function">(<span class="params">storyFn</span>) =&gt;</span> <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">padding:</span> &quot;<span class="attr">24px</span>&quot; &#125;&#125;&gt;</span>&#123;storyFn()&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>]</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">FromOthers</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">ChatBubble</span> <span class="attr">time</span>=<span class="string">&quot;昨天 下午14：26&quot;</span>&gt;</span>这是一条其它人发送的聊天消息<span class="tag">&lt;/<span class="name">ChatBubble</span>&gt;</span></span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Mine</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">ChatBubble</span> <span class="attr">type</span>=<span class="string">&quot;mine&quot;</span> <span class="attr">time</span>=<span class="string">&quot;昨天 下午16：30&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    这是一条我自己发送的聊天消息</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">ChatBubble</span>&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="三、语音消息组件开发"><a href="#三、语音消息组件开发" class="headerlink" title="三、语音消息组件开发"></a>三、语音消息组件开发</h3><p>使用 Hygen 创建一个语音消息组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new VoiceMessage</span><br></pre></td></tr></table></figure><p>在 <code>index.js</code> 文件中编辑语音消息组件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledVoiceMessage</span> <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">Play</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/play.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">Wave</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/wave.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useTheme &#125; <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Button</span> <span class="keyword">from</span> <span class="string">&quot;components/Button&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Text</span> <span class="keyword">from</span> <span class="string">&quot;components/Text&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">VoiceMessage</span>(<span class="params">&#123; children, time, type, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> theme = <span class="title function_">useTheme</span>();</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledVoiceMessage</span> <span class="attr">type</span>=<span class="string">&#123;type&#125;</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Button</span> <span class="attr">size</span>=<span class="string">&quot;40px&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Icon</span> <span class="attr">icon</span>=<span class="string">&#123;Play&#125;</span> <span class="attr">color</span>=<span class="string">&quot;white&quot;</span> <span class="attr">width</span>=<span class="string">&quot;14&quot;</span> <span class="attr">height</span>=<span class="string">&quot;16&quot;</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">transform:</span> &quot;<span class="attr">translateX</span>(<span class="attr">1px</span>)&quot; &#125;&#125; /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Icon</span> <span class="attr">icon</span>=<span class="string">&#123;Wave&#125;</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">color</span>=<span class="string">&#123;theme.primaryColor&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Text</span> <span class="attr">bold</span>&gt;</span>&#123;time&#125;<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledVoiceMessage</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">VoiceMessage</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">  <span class="attr">type</span>: <span class="title class_">PropTypes</span>.<span class="title function_">oneOf</span>([<span class="string">&quot;mine&quot;</span>]),</span><br><span class="line">  <span class="attr">time</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">VoiceMessage</span>;</span><br></pre></td></tr></table></figure><p>再在 <code>style.js</code> 中修改样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled, &#123; css &#125; <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledButton</span> <span class="keyword">from</span> <span class="string">&quot;components/Button/style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledIcon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon/style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledText</span> <span class="keyword">from</span> <span class="string">&quot;components/Text/style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> typeVariants = &#123;</span><br><span class="line">    <span class="attr">mine</span>: css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="subst">$&#123;StyledButton&#125;</span><span class="language-css"> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background-color</span>: white;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">      </span><span class="subst">$&#123;StyledIcon&#125;</span><span class="language-css"> path &#123;</span></span><br><span class="line"><span class="language-css">        fill: </span><span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.primaryColor&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    &amp; &gt; </span><span class="subst">$&#123;StyledIcon&#125;</span><span class="language-css"> path &#123;</span></span><br><span class="line"><span class="language-css">      fill: white;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    &amp; &gt; </span><span class="subst">$&#123;StyledText&#125;</span><span class="language-css"> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  `</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledVoiceMessage</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: flex;</span></span><br><span class="line"><span class="string">  align-items: center;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  &amp; &gt; *:first-child &#123;</span></span><br><span class="line"><span class="string">    flex-shrink: 0;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  &amp; &gt; *:not(:first-child) &#123;</span></span><br><span class="line"><span class="string">    margin-left: 16px;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;(&#123; type &#125;) =&gt; type &amp;&amp; typeVariants[type]&#125;</span></span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledVoiceMessage</span>;</span><br></pre></td></tr></table></figure><p>编辑 <code>voiceMessage.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">VoiceMessage</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/VoiceMessage&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">VoiceMessage</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">VoiceMessage</span> <span class="attr">time</span>=<span class="string">&quot;01:25&quot;</span> /&gt;</span></span>;</span><br></pre></td></tr></table></figure><p>最后将语音条添加到会话气泡中，编辑 <code>chatBubble.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">VoiceMessage</span> <span class="keyword">from</span> <span class="string">&quot;components/VoiceMessage&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ChatBubble</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/ChatBubble&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">ChatBubble</span>,</span><br><span class="line">  <span class="attr">decorators</span>: [<span class="function">(<span class="params">storyFn</span>) =&gt;</span> <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">padding:</span> &quot;<span class="attr">24px</span>&quot; &#125;&#125;&gt;</span>&#123;storyFn()&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>]</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">FromOthers</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">ChatBubble</span> <span class="attr">time</span>=<span class="string">&quot;昨天 下午14：26&quot;</span>&gt;</span>这是一条其它人发送的聊天消息<span class="tag">&lt;/<span class="name">ChatBubble</span>&gt;</span></span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Mine</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">ChatBubble</span> <span class="attr">type</span>=<span class="string">&quot;mine&quot;</span> <span class="attr">time</span>=<span class="string">&quot;昨天 下午16：30&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    这是一条我自己发送的聊天消息</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">ChatBubble</span>&gt;</span></span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">VoiceMessageType</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">ChatBubble</span> <span class="attr">time</span>=<span class="string">&quot;昨天 下午18：30&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">VoiceMessage</span> <span class="attr">time</span>=<span class="string">&quot;01:24&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">ChatBubble</span>&gt;</span></span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">VoiceMessageTypeMine</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">ChatBubble</span> <span class="attr">type</span>=<span class="string">&quot;mine&quot;</span> <span class="attr">time</span>=<span class="string">&quot;昨天 下午18：30&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">VoiceMessage</span> <span class="attr">type</span>=<span class="string">&quot;mine&quot;</span> <span class="attr">time</span>=<span class="string">&quot;01:24&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">ChatBubble</span>&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="四、Emoji-组件开发"><a href="#四、Emoji-组件开发" class="headerlink" title="四、Emoji 组件开发"></a>四、Emoji 组件开发</h3><p>Emoji 组件用来显示表情，可以直接使用操作系统自带表情，再用 React 封装，根据可访问原则，Emoji 应用 <code>span</code> 标签包装，并设置 <code>role</code> 和 <code>aria-label</code> 属性：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">role</span>=<span class="string">&quot;img&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;smirk&quot;</span>&gt;</span>😜<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用 Hygen 创建一个 Emoji 组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new Emoji</span><br></pre></td></tr></table></figure><p>在 <code>index.js</code> 文件中编辑标题栏组件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledEmoji</span> <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Emoji</span>(<span class="params">&#123; children, label, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledEmoji</span> <span class="attr">role</span>=<span class="string">&quot;img&quot;</span> <span class="attr">aria-label</span>=<span class="string">&#123;label&#125;</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledEmoji</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Emoji</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">  <span class="attr">label</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Emoji</span>;</span><br></pre></td></tr></table></figure><p>再在 <code>style.js</code> 中修改样式，使用 span 渲染：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledEmoji</span> = styled.<span class="property">span</span><span class="string">``</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledEmoji</span>;</span><br></pre></td></tr></table></figure><p>编辑 <code>emoji.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Emoji</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/Emoji&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Emoji</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* eslint-disable jsx-a11y/accessible-emoji */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Emoji</span> <span class="attr">label</span>=<span class="string">&quot;smile&quot;</span>&gt;</span>😄<span class="tag">&lt;/<span class="name">Emoji</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Emoji</span> <span class="attr">label</span>=<span class="string">&quot;todo&quot;</span>&gt;</span>✅<span class="tag">&lt;/<span class="name">Emoji</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Emoji</span> <span class="attr">label</span>=<span class="string">&quot;clock&quot;</span>&gt;</span>🕔<span class="tag">&lt;/<span class="name">Emoji</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>最后编辑 <code>chatBubble.stories.js</code> 文件，给 Mine 输入添加笑脸 Emoji：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Emoji</span> <span class="keyword">from</span> <span class="string">&quot;components/Emoji&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* eslint-disable jsx-a11y/accessible-emoji */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Mine</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">ChatBubble</span> <span class="attr">type</span>=<span class="string">&quot;mine&quot;</span> <span class="attr">time</span>=<span class="string">&quot;昨天 下午16：30&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    这是一条我自己发送的聊天消息<span class="tag">&lt;<span class="name">Emoji</span> <span class="attr">label</span>=<span class="string">&quot;smile&quot;</span>&gt;</span>😄<span class="tag">&lt;/<span class="name">Emoji</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">ChatBubble</span>&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="五、Popover-组件开发"><a href="#五、Popover-组件开发" class="headerlink" title="五、Popover 组件开发"></a>五、Popover 组件开发</h3><p>弹出层组件 Popover 用于显示额外的弹出层，使用 Hygen 创建一个弹出层组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new Popover</span><br></pre></td></tr></table></figure><p>在 <code>index.js</code> 文件中编辑标题栏组件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useState &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledPopover</span>, &#123; <span class="title class_">Content</span>, <span class="title class_">Triangle</span>, <span class="title class_">Target</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Popover</span>(<span class="params">&#123; children, content, offset = &#123;&#125;, onVisible, onHide, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> [visible, setVisible] = <span class="title function_">useState</span>(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleClick</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (visible) &#123;</span><br><span class="line">      <span class="title function_">setVisible</span>(<span class="literal">false</span>);</span><br><span class="line">      onHide &amp;&amp; <span class="title function_">onHide</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="title function_">setVisible</span>(<span class="literal">true</span>);</span><br><span class="line">      onVisible &amp;&amp; <span class="title function_">onVisible</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledPopover</span> <span class="attr">onClick</span>=<span class="string">&#123;handleClick&#125;</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Content</span> <span class="attr">visible</span>=<span class="string">&#123;visible&#125;</span> <span class="attr">offset</span>=<span class="string">&#123;offset&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;content&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Content</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Triangle</span> <span class="attr">visible</span>=<span class="string">&#123;visible&#125;</span> <span class="attr">offset</span>=<span class="string">&#123;offset&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Target</span>&gt;</span>&#123;children&#125;<span class="tag">&lt;/<span class="name">Target</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledPopover</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Popover</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">  <span class="attr">content</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">  <span class="attr">offset</span>: <span class="title class_">PropTypes</span>.<span class="title function_">shape</span>(&#123; <span class="attr">x</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>, <span class="attr">y</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span> &#125;),</span><br><span class="line">  <span class="attr">onVisible</span>: <span class="title class_">PropTypes</span>.<span class="property">func</span>,</span><br><span class="line">  <span class="attr">onHide</span>: <span class="title class_">PropTypes</span>.<span class="property">func</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Popover</span>;</span><br></pre></td></tr></table></figure><p>再在 <code>style.js</code> 中修改样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Content</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  background: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.background&#125;</span>;</span></span><br><span class="line"><span class="string">  border-radius: 21px;</span></span><br><span class="line"><span class="string">  box-shadow: 0px 8px 40px rgba(0, 0, 0, 0.12);</span></span><br><span class="line"><span class="string">  padding: 12px 30px;</span></span><br><span class="line"><span class="string">  position: absolute;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  bottom: calc(100% + 12px);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;(&#123; offset &#125;) =&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">    offset &amp;&amp; <span class="string">`transform: translate(<span class="subst">$&#123;offset.x || <span class="number">0</span>&#125;</span>, <span class="subst">$&#123;offset.y || <span class="number">0</span>&#125;</span>)`</span>&#125;</span>;</span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;(&#123; visible &#125;) =&gt; !visible &amp;&amp; <span class="string">`display: none`</span>&#125;</span>;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Triangle</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  position: absolute;</span></span><br><span class="line"><span class="string">  width: 0;</span></span><br><span class="line"><span class="string">  height: 0;</span></span><br><span class="line"><span class="string">  border-style: solid;</span></span><br><span class="line"><span class="string">  border-width: 6px 6px 0 6px;</span></span><br><span class="line"><span class="string">  border-color: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.background&#125;</span> transparent transparent</span></span><br><span class="line"><span class="string">    transparent;</span></span><br><span class="line"><span class="string">  left: calc(50% - 6px);</span></span><br><span class="line"><span class="string">  bottom: calc(100% + 12px - 5px);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;(&#123; offset &#125;) =&gt; offset &amp;&amp; <span class="string">`transform: translateY(<span class="subst">$&#123;offset.y || <span class="number">0</span>&#125;</span>);`</span>&#125;</span></span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;(&#123; visible &#125;) =&gt; !visible &amp;&amp; <span class="string">`display: none`</span>&#125;</span>;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Target</span> = styled.<span class="property">div</span><span class="string">``</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledPopover</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: flex;</span></span><br><span class="line"><span class="string">  justify-content: center;</span></span><br><span class="line"><span class="string">  position: relative;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledPopover</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">Content</span>, <span class="title class_">Target</span>, <span class="title class_">Triangle</span> &#125;;</span><br></pre></td></tr></table></figure><p>最后编辑 <code>popover.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Popover</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Button</span> <span class="keyword">from</span> <span class="string">&quot;components/Button&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/Popover&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Popover</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">style</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">display:</span> &quot;<span class="attr">flex</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">justifyContent:</span> &quot;<span class="attr">center</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">alignItems:</span> &quot;<span class="attr">center</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">height:</span> &quot;<span class="attr">50vh</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  &gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Popover</span> <span class="attr">content</span>=<span class="string">&quot;Hello!&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Button</span> <span class="attr">shape</span>=<span class="string">&quot;rect&quot;</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Popover</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">WithOffset</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">style</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">display:</span> &quot;<span class="attr">flex</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">justifyContent:</span> &quot;<span class="attr">center</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">alignItems:</span> &quot;<span class="attr">center</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">height:</span> &quot;<span class="attr">50vh</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  &gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Popover</span> <span class="attr">offset</span>=<span class="string">&#123;&#123;</span> <span class="attr">x:</span> &quot;<span class="attr">-25</span>%&quot; &#125;&#125; <span class="attr">content</span>=<span class="string">&#123;</span>&quot;<span class="attr">Hello</span>!&quot;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Button</span> <span class="attr">shape</span>=<span class="string">&quot;rect&quot;</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Popover</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="六、底部操作组件开发"><a href="#六、底部操作组件开发" class="headerlink" title="六、底部操作组件开发"></a>六、底部操作组件开发</h3><p>使用 Hygen 创建一个底部操作组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new Footer</span><br></pre></td></tr></table></figure><p>在 <code>index.js</code> 文件中编辑标题栏组件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useState &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledFooter</span>, &#123; <span class="title class_">IconContainer</span>, <span class="title class_">StyledPopoverContent</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">ClipIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/clip.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">SmileIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/smile.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">MicrophoneIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/microphone.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">PlaneIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/plane.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">OptionsIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/options.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Input</span> <span class="keyword">from</span> <span class="string">&quot;components/Input&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Button</span> <span class="keyword">from</span> <span class="string">&quot;components/Button&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Emoji</span> <span class="keyword">from</span> <span class="string">&quot;components/Emoji&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Popover</span> <span class="keyword">from</span> <span class="string">&quot;components/Popover&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useTheme &#125; <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Footer</span>(<span class="params">&#123; animeProps, style, children, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> [emojiIconActive, setEmojiIconActive] = <span class="title function_">useState</span>(<span class="literal">false</span>);</span><br><span class="line">  <span class="keyword">const</span> theme = <span class="title function_">useTheme</span>();</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledFooter</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">...style</span>, <span class="attr">...animeProps</span> &#125;&#125; &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">placeholder</span>=<span class="string">&quot;输入想和对方说的话&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">prefix</span>=<span class="string">&#123;</span>&lt;<span class="attr">Icon</span> <span class="attr">icon</span>=<span class="string">&#123;ClipIcon&#125;</span> /&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">        suffix=&#123;</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">IconContainer</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Popover</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">content</span>=<span class="string">&#123;</span>&lt;<span class="attr">PopoverContent</span> /&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">              offset=&#123;&#123; x: &quot;-25%&quot; &#125;&#125;</span></span><br><span class="line"><span class="language-xml">              onVisible=&#123;() =&gt; setEmojiIconActive(true)&#125;</span></span><br><span class="line"><span class="language-xml">              onHide=&#123;() =&gt; setEmojiIconActive(false)&#125;</span></span><br><span class="line"><span class="language-xml">            &gt;</span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Icon</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">icon</span>=<span class="string">&#123;SmileIcon&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">color</span>=<span class="string">&#123;emojiIconActive</span> ? <span class="attr">undefined</span> <span class="attr">:</span> <span class="attr">theme.gray3</span>&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">Popover</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Icon</span> <span class="attr">icon</span>=<span class="string">&#123;MicrophoneIcon&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Button</span> <span class="attr">size</span>=<span class="string">&quot;52px&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              <span class="tag">&lt;<span class="name">Icon</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">icon</span>=<span class="string">&#123;PlaneIcon&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">color</span>=<span class="string">&quot;white&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">                <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">transform:</span> &quot;<span class="attr">translateX</span>(<span class="attr">-2px</span>)&quot; &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">IconContainer</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#125;</span></span><br><span class="line"><span class="language-xml">      /&gt;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledFooter</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* eslint-disable jsx-a11y/accessible-emoji */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">PopoverContent</span>(<span class="params">props</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledPopoverContent</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Emoji</span> <span class="attr">label</span>=<span class="string">&quot;smile&quot;</span>&gt;</span>😊<span class="tag">&lt;/<span class="name">Emoji</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Emoji</span> <span class="attr">label</span>=<span class="string">&quot;grinning&quot;</span>&gt;</span>😆<span class="tag">&lt;/<span class="name">Emoji</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Emoji</span> <span class="attr">label</span>=<span class="string">&quot;thumbup&quot;</span>&gt;</span>👍<span class="tag">&lt;/<span class="name">Emoji</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Emoji</span> <span class="attr">label</span>=<span class="string">&quot;indexfingerup&quot;</span>&gt;</span>☝️<span class="tag">&lt;/<span class="name">Emoji</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Emoji</span> <span class="attr">label</span>=<span class="string">&quot;ok&quot;</span>&gt;</span>👌<span class="tag">&lt;/<span class="name">Emoji</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Emoji</span> <span class="attr">label</span>=<span class="string">&quot;handsputtogether&quot;</span>&gt;</span>🙏<span class="tag">&lt;/<span class="name">Emoji</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Emoji</span> <span class="attr">label</span>=<span class="string">&quot;smilewithsunglasses&quot;</span>&gt;</span>😎<span class="tag">&lt;/<span class="name">Emoji</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Emoji</span> <span class="attr">label</span>=<span class="string">&quot;flexedbicep&quot;</span>&gt;</span>💪<span class="tag">&lt;/<span class="name">Emoji</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Icon</span> <span class="attr">icon</span>=<span class="string">&#123;OptionsIcon&#125;</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">marginLeft:</span> &quot;<span class="attr">24px</span>&quot; &#125;&#125; /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledPopoverContent</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Footer</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Footer</span>;</span><br></pre></td></tr></table></figure><p>再在 <code>style.js</code> 中修改样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">IconContainer</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: flex;</span></span><br><span class="line"><span class="string">  align-items: center;</span></span><br><span class="line"><span class="string">  margin-right: -30px;</span></span><br><span class="line"><span class="string">  &amp; &gt; * &#123;</span></span><br><span class="line"><span class="string">    margin-left: 16px;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledPopoverContent</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: flex;</span></span><br><span class="line"><span class="string">  &amp; &gt; * &#123;</span></span><br><span class="line"><span class="string">    margin: 0 8px;</span></span><br><span class="line"><span class="string">    font-size: 16px;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledFooter</span> = styled.<span class="property">footer</span><span class="string">`</span></span><br><span class="line"><span class="string">  padding: 12px 30px;</span></span><br><span class="line"><span class="string">  width: 100%;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledFooter</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">IconContainer</span>, <span class="title class_">StyledPopoverContent</span> &#125;;</span><br></pre></td></tr></table></figure><p>最后编辑 <code>footer.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Footer</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;页面组件/Footer&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Footer</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">marginTop:</span> <span class="attr">80</span> &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Footer</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="七、会话窗口组件开发"><a href="#七、会话窗口组件开发" class="headerlink" title="七、会话窗口组件开发"></a>七、会话窗口组件开发</h3><p>最后，将以上编写的所有组件组装起来，使用 Hygen 创建一个会话窗口组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new Conversation</span><br></pre></td></tr></table></figure><p>在 <code>index.js</code> 文件中编辑标题栏组件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledConversation</span>, &#123; <span class="title class_">Conversations</span>, <span class="title class_">MyChatBubble</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">TitleBar</span> <span class="keyword">from</span> <span class="string">&quot;components/TitleBar&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ChatBubble</span> <span class="keyword">from</span> <span class="string">&quot;components/ChatBubble&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">VoiceMessage</span> <span class="keyword">from</span> <span class="string">&quot;components/VoiceMessage&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Emoji</span> <span class="keyword">from</span> <span class="string">&quot;components/Emoji&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Footer</span> <span class="keyword">from</span> <span class="string">&quot;components/Footer&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Conversation</span>(<span class="params">&#123; children, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledConversation</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">TitleBar</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Conversations</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ChatBubble</span> <span class="attr">time</span>=<span class="string">&quot;昨天 下午14：26&quot;</span>&gt;</span>Hi 小宇，忙什么呢？<span class="tag">&lt;/<span class="name">ChatBubble</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">MyChatBubble</span> <span class="attr">time</span>=<span class="string">&quot;昨天 下午16：30&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          Hello 啊！最近就是一直在加班改 bug，然后 怼产品，怼 UI，各种怼！</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">MyChatBubble</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">ChatBubble</span> <span class="attr">time</span>=<span class="string">&quot;昨天 下午18：30&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">VoiceMessage</span> <span class="attr">time</span>=<span class="string">&quot;01:24&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">ChatBubble</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">MyChatBubble</span> <span class="attr">time</span>=<span class="string">&quot;昨天 下午16：30&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          明天约一把王者荣耀，不连赢5把不罢休 🤘</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Emoji</span> <span class="attr">label</span>=<span class="string">&quot;smile&quot;</span>&gt;</span>🤘<span class="tag">&lt;/<span class="name">Emoji</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">MyChatBubble</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Conversations</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Footer</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledConversation</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Conversation</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Conversation</span>;</span><br></pre></td></tr></table></figure><p>再在 <code>style.js</code> 中修改样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">ChatBubble</span> <span class="keyword">from</span> <span class="string">&quot;components/ChatBubble&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Conversations</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  padding: 10px 15px;</span></span><br><span class="line"><span class="string">  display: flex;</span></span><br><span class="line"><span class="string">  flex-direction: column;</span></span><br><span class="line"><span class="string">  align-items: flex-start;</span></span><br><span class="line"><span class="string">  width: 100%;</span></span><br><span class="line"><span class="string">  overflow-y: auto;</span></span><br><span class="line"><span class="string">  flex: 1;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  &amp; &gt; * &#123;</span></span><br><span class="line"><span class="string">    margin: 10px 0;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">MyChatBubble</span> = <span class="title function_">styled</span>(<span class="title class_">ChatBubble</span>).<span class="title function_">attrs</span>(&#123; <span class="attr">type</span>: <span class="string">&quot;mine&quot;</span> &#125;)<span class="string">`</span></span><br><span class="line"><span class="string">  align-self: flex-end;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledConversation</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: flex;</span></span><br><span class="line"><span class="string">  flex-direction: column;</span></span><br><span class="line"><span class="string">  height: 100vh;</span></span><br><span class="line"><span class="string">  border: 1px solid <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.gray4&#125;</span>;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  &amp; &gt; *:last-child &#123;</span></span><br><span class="line"><span class="string">    align-self: end;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledConversation</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">Conversations</span>, <span class="title class_">MyChatBubble</span> &#125;;</span><br></pre></td></tr></table></figure><p>最后编辑 <code>popover.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Conversation</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;页面组件/Conversation&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Conversation</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Conversation</span> /&gt;</span></span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;React 即时通信 UI 实战第六章。React 即时通信 UI 实战为&lt;a href=&quot;https://www.bilibili.com/video/BV1PK4y1b7bY?p=2&amp;amp;spm_id_from=pageDriver&amp;amp;vd_source=0965c74096f788f105780e5d5d0e9ebf&quot;&gt;峰华前端工程师&lt;/a&gt;推出的 React 实战课程，以聊天（即时通信）为原型，构建了一整套的 UI 组件库，课程重点在于 UI 组件的分析和实现，力求打造自用组件库。本章包括内容区中的标题栏、会话气泡、会话窗口、语音消息等组件。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Web前端" scheme="http://blog.zhuangzhihao.top/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="React" scheme="http://blog.zhuangzhihao.top/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>React 即时通信 ChatUI 侧边栏</title>
    <link href="http://blog.zhuangzhihao.top/ChatUI%E4%BE%A7%E8%BE%B9%E6%A0%8F/"/>
    <id>http://blog.zhuangzhihao.top/ChatUI%E4%BE%A7%E8%BE%B9%E6%A0%8F/</id>
    <published>2022-10-04T16:00:00.000Z</published>
    <updated>2022-12-01T13:24:15.958Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>React 即时通信 UI 实战第五章。React 即时通信 UI 实战为<a href="https://www.bilibili.com/video/BV1PK4y1b7bY?p=2&amp;spm_id_from=pageDriver&amp;vd_source=0965c74096f788f105780e5d5d0e9ebf">峰华前端工程师</a>推出的 React 实战课程，以聊天（即时通信）为原型，构建了一整套的 UI 组件库，课程重点在于 UI 组件的分析和实现，力求打造自用组件库。本章包括侧边栏中的搜索框、排版、下拉选项、消息卡片等组件。</p></blockquote><span id="more"></span><h3 id="一、搜索框开发"><a href="#一、搜索框开发" class="headerlink" title="一、搜索框开发"></a>一、搜索框开发</h3><p>搜索框是一种特殊的 Input 组件，所以先使用 Hygen 创建一个基础 Input 组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new Input</span><br></pre></td></tr></table></figure><p>在 <code>index.js</code> 文件中编辑基础 Input 组件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledInput</span>, &#123; <span class="title class_">InputContainer</span>, <span class="title class_">Prefix</span>, <span class="title class_">Suffix</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Input</span>(<span class="params">&#123; placeholder = <span class="string">&quot;请输入内容&quot;</span>, prefix, suffix, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">InputContainer</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;prefix &amp;&amp; <span class="tag">&lt;<span class="name">Prefix</span>&gt;</span>&#123;prefix&#125;<span class="tag">&lt;/<span class="name">Prefix</span>&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">StyledInput</span> <span class="attr">placeholder</span>=<span class="string">&#123;placeholder&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;suffix &amp;&amp; <span class="tag">&lt;<span class="name">Suffix</span>&gt;</span>&#123;suffix&#125;<span class="tag">&lt;/<span class="name">Suffix</span>&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">InputContainer</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Input</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">placeholder</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">  <span class="attr">prefix</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">  <span class="attr">suffix</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Input</span>;</span><br></pre></td></tr></table></figure><p>再在 <code>style.js</code> 中修改样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledInput</span> = styled.<span class="property">input</span><span class="string">`</span></span><br><span class="line"><span class="string">    width: 100%;</span></span><br><span class="line"><span class="string">    height: 48px;</span></span><br><span class="line"><span class="string">    border: none;</span></span><br><span class="line"><span class="string">    background: none;</span></span><br><span class="line"><span class="string">    color: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.grayDark&#125;</span>;</span></span><br><span class="line"><span class="string">    font-size: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.medium&#125;</span>;</span></span><br><span class="line"><span class="string">    display: block;</span></span><br><span class="line"><span class="string">    &amp;::placeholder &#123;</span></span><br><span class="line"><span class="string">        color: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.gray3&#125;</span>;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Prefix</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">    margin-right: 16px;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Suffix</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">    margin-left: 16px;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">InputContainer</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">    display: flex;</span></span><br><span class="line"><span class="string">    align-items: center;</span></span><br><span class="line"><span class="string">    background: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.gray2&#125;</span>;</span></span><br><span class="line"><span class="string">    border-radius: 24px;</span></span><br><span class="line"><span class="string">    padding: 0 30px;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledInput</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">Prefix</span>, <span class="title class_">Suffix</span>, <span class="title class_">InputContainer</span> &#125;;</span><br></pre></td></tr></table></figure><p>再在 <code>index.js</code> 中继续添加搜索框组件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">SearchIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/search.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useTheme &#125; <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Search</span>(<span class="params">&#123; placeholder = <span class="string">&quot;请输入搜索内容...&quot;</span>, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> theme = <span class="title function_">useTheme</span>();</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Input</span> <span class="attr">placeholder</span>=<span class="string">&#123;placeholder&#125;</span> <span class="attr">prefix</span>=<span class="string">&#123;</span> &lt;<span class="attr">Icon</span> <span class="attr">icon</span>=<span class="string">&#123;SearchIcon&#125;</span> <span class="attr">color</span>=<span class="string">&#123;theme.gray3&#125;</span> <span class="attr">width</span>=<span class="string">&#123;18&#125;</span> <span class="attr">height</span>=<span class="string">&#123;18&#125;</span> /&gt;</span> &#125; &#123;...rest&#125; /&gt;</span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Input</span>.<span class="property">Search</span> = <span class="title class_">Search</span>;</span><br></pre></td></tr></table></figure><p>最后编辑 <code>input.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Input</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">ClipIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/clip.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">SmileIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/smile.svg&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/Input&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Input</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Input</span> /&gt;</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Search</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Input.Search</span> /&gt;</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">WithAffix</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">Input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">prefix</span>=<span class="string">&#123;</span>&lt;<span class="attr">Icon</span> <span class="attr">icon</span>=<span class="string">&#123;ClipIcon&#125;</span> <span class="attr">color</span>=<span class="string">&quot;#cccccc&quot;</span> /&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">    suffix=&#123;<span class="tag">&lt;<span class="name">Icon</span> <span class="attr">icon</span>=<span class="string">&#123;SmileIcon&#125;</span> <span class="attr">color</span>=<span class="string">&quot;#cccccc&quot;</span> /&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">  /&gt;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>点击搜索框会有浏览器自带的 border 边框，在全局 index.css 中添加样式去除：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span>, <span class="selector-tag">button</span>, select &#123;</span><br><span class="line">    <span class="attribute">outline</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二、排版组件"><a href="#二、排版组件" class="headerlink" title="二、排版组件"></a>二、排版组件</h3><p>排版组件用于表示行内文本、段落、标题，首先编写行内文本组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new Text</span><br></pre></td></tr></table></figure><p>编辑 <code>index.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledText</span> <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Text</span>(<span class="params">&#123; children, type = <span class="string">&quot;primary&quot;</span>, size = <span class="string">&quot;normal&quot;</span>, bold, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledText</span> <span class="attr">type</span>=<span class="string">&#123;type&#125;</span> <span class="attr">size</span>=<span class="string">&#123;size&#125;</span> <span class="attr">bold</span>=<span class="string">&#123;bold&#125;</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledText</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Text</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">  <span class="attr">type</span>: <span class="title class_">PropTypes</span>.<span class="title function_">oneOf</span>([<span class="string">&quot;primary&quot;</span>, <span class="string">&quot;secondary&quot;</span>, <span class="string">&quot;danger&quot;</span>]),</span><br><span class="line">  <span class="attr">size</span>: <span class="title class_">PropTypes</span>.<span class="title function_">oneOf</span>([ <span class="string">&quot;xxsmall&quot;</span>, <span class="string">&quot;xsmall&quot;</span>, <span class="string">&quot;small&quot;</span>, <span class="string">&quot;normal&quot;</span>, <span class="string">&quot;medium&quot;</span>, <span class="string">&quot;large&quot;</span>, <span class="string">&quot;xlarge&quot;</span>, <span class="string">&quot;xxlarge&quot;</span>, ]),</span><br><span class="line">  <span class="attr">bold</span>: <span class="title class_">PropTypes</span>.<span class="property">bool</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Text</span>;</span><br></pre></td></tr></table></figure><p>在 <code>style.js</code> 中编写样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled, &#123; css &#125; <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> typeVariants = &#123;</span><br><span class="line">  <span class="attr">primary</span>: css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: </span><span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.grayDark&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">  `</span>,</span><br><span class="line">  <span class="attr">secondary</span>: css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: </span><span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.grayDark&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">opacity</span>: <span class="number">0.3</span>;</span></span><br><span class="line"><span class="language-css">  `</span>,</span><br><span class="line">  <span class="attr">danger</span>: css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: </span><span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.red&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">  `</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> sizeVariants = &#123;</span><br><span class="line">  <span class="attr">normal</span>: css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.normal&#125;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  `</span>,</span><br><span class="line">  <span class="attr">medium</span>: css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.medium&#125;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  `</span>,</span><br><span class="line">  <span class="attr">large</span>: css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.large&#125;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  `</span>,</span><br><span class="line">  <span class="attr">xlarge</span>: css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.xlarge&#125;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  `</span>,</span><br><span class="line">  <span class="attr">xxlarge</span>: css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.xxlarge&#125;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  `</span>,</span><br><span class="line">  <span class="attr">small</span>: css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.small&#125;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  `</span>,</span><br><span class="line">  <span class="attr">xsmall</span>: css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.xsmall&#125;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  `</span>,</span><br><span class="line">  <span class="attr">xxsmall</span>: css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.xxsmall&#125;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  `</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledText</span> = styled.<span class="property">span</span><span class="string">`</span></span><br><span class="line"><span class="string">  font-size: <span class="subst">$&#123;(&#123; size &#125;) =&gt; sizeVariants[size] || sizeVariants.normal&#125;</span>;</span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;(&#123; type &#125;) =&gt; typeVariants[type]&#125;</span>;</span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;(&#123; bold &#125;) =&gt; bold &amp;&amp; <span class="string">`font-weight: 500`</span>&#125;</span>;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledText</span>;</span><br></pre></td></tr></table></figure><p>最后编辑 story.js 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Text</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;排版/Text&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Text</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Text</span>&gt;</span>默认<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Secondary</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Text</span> <span class="attr">type</span>=<span class="string">&quot;secondary&quot;</span>&gt;</span>次要文本<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Medium</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Text</span> <span class="attr">size</span>=<span class="string">&quot;medium&quot;</span>&gt;</span>medium 大小文本<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">LargeAndBold</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">Text</span> <span class="attr">size</span>=<span class="string">&quot;large&quot;</span> <span class="attr">bold</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    large 大小文本，加粗</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>紧接着编写 Paragraph 段落组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new Paragraph</span><br></pre></td></tr></table></figure><p>编辑段落 index.js 组件格式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledParagraph</span> <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Paragraph</span>(<span class="params">&#123; children, ellipsis, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledParagraph</span> <span class="attr">as</span>=<span class="string">&quot;p&quot;</span> <span class="attr">ellipsis</span>=<span class="string">&#123;ellipsis&#125;</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledParagraph</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Paragraph</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">  <span class="attr">ellipsis</span>: <span class="title class_">PropTypes</span>.<span class="property">bool</span>,</span><br><span class="line">  <span class="attr">type</span>: <span class="title class_">PropTypes</span>.<span class="title function_">oneOf</span>([<span class="string">&quot;primary&quot;</span>, <span class="string">&quot;secondary&quot;</span>, <span class="string">&quot;danger&quot;</span>]),</span><br><span class="line">  <span class="attr">size</span>: <span class="title class_">PropTypes</span>.<span class="title function_">oneOf</span>([ <span class="string">&quot;xxsmall&quot;</span>, <span class="string">&quot;xsmall&quot;</span>, <span class="string">&quot;small&quot;</span>, <span class="string">&quot;normal&quot;</span>, <span class="string">&quot;medium&quot;</span>, <span class="string">&quot;large&quot;</span>, <span class="string">&quot;xlarge&quot;</span>, <span class="string">&quot;xxlarge&quot;</span>, ]),</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Paragraph</span>;</span><br></pre></td></tr></table></figure><p>在 <code>style.js</code> 文件中编写样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">StyledText</span> <span class="keyword">from</span> <span class="string">&quot;components/Text/style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> styled, &#123; css &#125; <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledParagraph</span> = <span class="title function_">styled</span>(<span class="title class_">StyledText</span>)<span class="string">`</span></span><br><span class="line"><span class="string">    <span class="subst">$&#123;(&#123; ellipsis &#125;) =&gt; ellipsis &amp;&amp;</span></span></span><br><span class="line"><span class="subst"><span class="string">        css`<span class="language-css"></span></span></span></span><br><span class="line"><span class="language-css"><span class="subst"><span class="string">      <span class="attribute">text-overflow</span>: ellipsis;</span></span></span></span><br><span class="line"><span class="language-css"><span class="subst"><span class="string">      <span class="attribute">white-space</span>: nowrap;</span></span></span></span><br><span class="line"><span class="language-css"><span class="subst"><span class="string">      <span class="attribute">overflow</span>: hidden;</span></span></span></span><br><span class="line"><span class="language-css"><span class="subst"><span class="string">    `</span>&#125;</span></span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledParagraph</span>;</span><br></pre></td></tr></table></figure><p>接下来在 <code>paragraph.stories.js</code> 中编写 Paragraph 的 stories：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Paragraph</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;排版/Paragraph&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Paragraph</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Paragraph</span>&gt;</span>这是一个段落<span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Paragraph</span>&gt;</span>这是一个段落<span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/&gt;</span></span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Ellipsis</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">Paragraph</span> <span class="attr">ellipsis</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    这是一个很长的段落这是一个很长的段落这是一个很长的段落这是一个很长的段落这是一个很长的段落这是一个很长的段落这是一个很长的段落这是一个很长的段落这是一个很长的段落这是一个很长的段落这是一个很长的段落</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">Paragraph</span>&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>段落之间存在空行，在全局 index.css 中添加全局样式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后再创建一个 Headings 组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new Heading</span><br></pre></td></tr></table></figure><p>在此目录下的 <code>index.js</code> 中让 Headings 接收一个 <code>level</code> 属性，表示 h1 ~ h6 标签：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledHeading</span> <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Heading</span>(<span class="params">&#123; children, level, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledHeading</span> <span class="attr">as</span>=<span class="string">&#123;</span>`<span class="attr">h</span>$&#123;<span class="attr">level</span>&#125;`&#125; &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledHeading</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Heading</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">  <span class="attr">level</span>: <span class="title class_">PropTypes</span>.<span class="title function_">oneOf</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]),</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Heading</span>;</span><br></pre></td></tr></table></figure><p>文本标签使用默认样式即可，直接编写 <code>heading.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Heading</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;排版/Heading&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Heading</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">H1</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Heading</span> <span class="attr">level</span>=<span class="string">&#123;1&#125;</span>&gt;</span>这是标题<span class="tag">&lt;/<span class="name">Heading</span>&gt;</span></span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">H2</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Heading</span> <span class="attr">level</span>=<span class="string">&#123;2&#125;</span>&gt;</span>这是标题<span class="tag">&lt;/<span class="name">Heading</span>&gt;</span></span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">H3</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Heading</span> <span class="attr">level</span>=<span class="string">&#123;3&#125;</span>&gt;</span>这是标题<span class="tag">&lt;/<span class="name">Heading</span>&gt;</span></span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">H4</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Heading</span> <span class="attr">level</span>=<span class="string">&#123;4&#125;</span>&gt;</span>这是标题<span class="tag">&lt;/<span class="name">Heading</span>&gt;</span></span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">H5</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Heading</span> <span class="attr">level</span>=<span class="string">&#123;5&#125;</span>&gt;</span>这是标题<span class="tag">&lt;/<span class="name">Heading</span>&gt;</span></span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">H6</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Heading</span> <span class="attr">level</span>=<span class="string">&#123;6&#125;</span>&gt;</span>这是标题<span class="tag">&lt;/<span class="name">Heading</span>&gt;</span></span>;</span><br></pre></td></tr></table></figure><h3 id="三、过滤下拉菜单组件"><a href="#三、过滤下拉菜单组件" class="headerlink" title="三、过滤下拉菜单组件"></a>三、过滤下拉菜单组件</h3><p>侧边栏中的过滤选项以下拉列表组件形式存在，创建下拉列表组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hygen component new Select</span><br><span class="line">hygen component new Option</span><br></pre></td></tr></table></figure><p>由于 Option 组件只是对 HTML 标签 option 简单封装，所以删除 <code>option.stories.js</code> 文件，将 <code>components/Option/style.js</code> 文件编辑为：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledOption</span> = styled.<span class="property">option</span><span class="string">``</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledOption</span>;</span><br></pre></td></tr></table></figure><p>在 <code>components/Select/style.js</code> 中编写组件样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">CaretDown</span> <span class="keyword">from</span> <span class="string">&quot;assets/icon/caret_down.svg&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledSelect</span> = styled.<span class="property">select</span><span class="string">`</span></span><br><span class="line"><span class="string">  appearance: none;</span></span><br><span class="line"><span class="string">  background-image: url(<span class="subst">$&#123;CaretDown&#125;</span>);</span></span><br><span class="line"><span class="string">  background-repeat: no-repeat;</span></span><br><span class="line"><span class="string">  background-position: right center;</span></span><br><span class="line"><span class="string">  background-color: transparent;</span></span><br><span class="line"><span class="string">  border: none;</span></span><br><span class="line"><span class="string">  padding-right: 14px;</span></span><br><span class="line"><span class="string">  font-size: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.normal&#125;</span>;</span></span><br><span class="line"><span class="string">  color: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.grayDark&#125;</span>;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  ::-ms-expand &#123;</span></span><br><span class="line"><span class="string">    display: none;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledSelect</span>;</span><br></pre></td></tr></table></figure><p>在 <code>components/Select/select.stories.js</code> 中编写组件 stories：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Select</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Option</span> <span class="keyword">from</span> <span class="string">&quot;components/Option&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/Input/Select&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Select</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">Select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Option</span>&gt;</span>最新消息优先<span class="tag">&lt;/<span class="name">Option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Option</span>&gt;</span>在线好友优先<span class="tag">&lt;/<span class="name">Option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">Select</span>&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="四、动作按钮组件"><a href="#四、动作按钮组件" class="headerlink" title="四、动作按钮组件"></a>四、动作按钮组件</h3><p>在 Material Design 设计规范中，谷歌提出了悬浮响应按钮（Floating action button）控件的基本准则规范，分为圆形和矩形按钮两种。先删除全局中的 <code>Button.js</code> 以及 <code>App.js</code> 中的示例，使用 Hygen 创建一个新的 Button 组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new Button</span><br></pre></td></tr></table></figure><p>在 <code>index.js</code> 中编写组件结构：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledButton</span> <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Button</span>(<span class="params">&#123; children, type = <span class="string">&quot;primary&quot;</span>, shape = <span class="string">&quot;circle&quot;</span>, size = <span class="string">&quot;30px&quot;</span>, bgColor, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledButton</span> <span class="attr">type</span>=<span class="string">&#123;type&#125;</span> <span class="attr">shape</span>=<span class="string">&#123;shape&#125;</span> <span class="attr">size</span>=<span class="string">&#123;size&#125;</span> <span class="attr">bgColor</span>=<span class="string">&#123;bgColor&#125;</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledButton</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Button</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">  <span class="attr">type</span>: <span class="title class_">PropTypes</span>.<span class="title function_">oneOf</span>([<span class="string">&quot;primary&quot;</span>]),</span><br><span class="line">  <span class="attr">shape</span>: <span class="title class_">PropTypes</span>.<span class="title function_">oneOf</span>([<span class="string">&quot;circle&quot;</span>, <span class="string">&quot;rect&quot;</span>]),</span><br><span class="line">  <span class="attr">size</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Button</span>;</span><br></pre></td></tr></table></figure><p>在 style.js 文件中编写样式，注意按钮一般为行内元素：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled, &#123; css &#125; <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> shapeVariants = &#123;</span><br><span class="line">  <span class="attr">circle</span>: css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: </span><span class="subst">$&#123;(&#123; size &#125;) =&gt; size&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: </span><span class="subst">$&#123;(&#123; size &#125;) =&gt; size&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">display</span>: inline-flex;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="language-css">  `</span>,</span><br><span class="line">  <span class="attr">rect</span>: css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">12px</span> <span class="number">18px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span></span><br><span class="line"><span class="language-css">  `</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> typeVariants = &#123;</span><br><span class="line">  <span class="attr">primary</span>: css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: </span><span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.primaryColor&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: white;</span></span><br><span class="line"><span class="language-css">  `</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledButton</span> = styled.<span class="property">button</span><span class="string">`</span></span><br><span class="line"><span class="string">  border: none;</span></span><br><span class="line"><span class="string">  outline: none;</span></span><br><span class="line"><span class="string">  cursor: pointer;</span></span><br><span class="line"><span class="string">  box-shadow: 0px 6px 12px rgba(0, 0, 0, 0.1);</span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;(&#123; shape &#125;) =&gt; shapeVariants[shape]&#125;</span></span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;(&#123; type &#125;) =&gt; typeVariants[type]&#125;</span></span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;(&#123; bgColor &#125;) =&gt; <span class="string">`background-color: <span class="subst">$&#123;bgColor&#125;</span>`</span>&#125;</span>;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  transform: scale(1);</span></span><br><span class="line"><span class="string">  transition: 0.4s;</span></span><br><span class="line"><span class="string">  &amp;:hover &#123;</span></span><br><span class="line"><span class="string">    transform: scale(1.1);</span></span><br><span class="line"><span class="string">    box-shadow: 0px 6px 16px rgba(0, 0, 0, 0.12);</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledButton</span>;</span><br></pre></td></tr></table></figure><p>在 <code>button.stories.js</code> 中编写 story，分别为圆角矩形和圆形按钮：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Button</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">Plus</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/plus.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/Button&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Button</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">RectButton</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Button</span> <span class="attr">shape</span>=<span class="string">&quot;rect&quot;</span>&gt;</span>默认按钮<span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">CircleButton</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Icon</span> <span class="attr">icon</span>=<span class="string">&#123;Plus&#125;</span> <span class="attr">width</span>=<span class="string">&#123;12&#125;</span> <span class="attr">height</span>=<span class="string">&#123;12&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="五、过滤选项组件"><a href="#五、过滤选项组件" class="headerlink" title="五、过滤选项组件"></a>五、过滤选项组件</h3><p>过滤选项组件分为下拉菜单组件和动作按钮组件，即前两部分叠加。创建一个 Filter 组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new Filter</span><br></pre></td></tr></table></figure><p>在 <code>index.js</code> 中将 Filters 和 Action 作为 Filter 组件的子组件导出：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledFilter</span>, &#123; <span class="title class_">Filters</span>, <span class="title class_">Action</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Text</span> <span class="keyword">from</span> <span class="string">&quot;components/Text&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Filter</span>(<span class="params">&#123; children, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">StyledFilter</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span>&#123;children&#125;<span class="tag">&lt;/<span class="name">StyledFilter</span>&gt;</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Filter</span>.<span class="property">Filters</span> = <span class="function">(<span class="params">&#123; children, label, ...rest &#125;</span>) =&gt;</span> (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">Filters</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Text</span> <span class="attr">type</span>=<span class="string">&quot;secondary&quot;</span>&gt;</span>&#123;label&#125;：<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">Filters</span>&gt;</span></span></span><br><span class="line">);</span><br><span class="line"><span class="title class_">Filter</span>.<span class="property">Action</span> = <span class="function">(<span class="params">&#123; children, label, ...rest &#125;</span>) =&gt;</span> (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">Action</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Text</span> <span class="attr">type</span>=<span class="string">&quot;secondary&quot;</span>&gt;</span>&#123;label&#125;<span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">Action</span>&gt;</span></span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="title class_">Filter</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Filter</span>;</span><br></pre></td></tr></table></figure><p>在 <code>style.js</code> 中编写样式，使用 Grid 布局：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledText</span> <span class="keyword">from</span> <span class="string">&quot;components/Text/style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Filters</span> = styled.<span class="property">div</span><span class="string">``</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Action</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  justify-self: end;</span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;StyledText&#125;</span> &#123;</span></span><br><span class="line"><span class="string">    padding-right: 1rem;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledFilter</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: grid;</span></span><br><span class="line"><span class="string">  grid-template-columns: 2fr 1fr;</span></span><br><span class="line"><span class="string">  align-items: center;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledFilter</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">Filters</span>, <span class="title class_">Action</span> &#125;;</span><br></pre></td></tr></table></figure><p>最后编写 stories 示例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Filter</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Select</span> <span class="keyword">from</span> <span class="string">&quot;components/Select&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Option</span> <span class="keyword">from</span> <span class="string">&quot;components/Option&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Button</span> <span class="keyword">from</span> <span class="string">&quot;components/Button&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">Plus</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/plus.svg&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/Filter&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Filter</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">Filter</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Filter.Filters</span> <span class="attr">label</span>=<span class="string">&quot;列表排序&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Option</span>&gt;</span>最新消息优先<span class="tag">&lt;/<span class="name">Option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Option</span>&gt;</span>在线好友优先<span class="tag">&lt;/<span class="name">Option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Filter.Filters</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">Filter.Action</span> <span class="attr">label</span>=<span class="string">&quot;创建会话&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Icon</span> <span class="attr">icon</span>=<span class="string">&#123;Plus&#125;</span> <span class="attr">width</span>=<span class="string">&#123;12&#125;</span> <span class="attr">height</span>=<span class="string">&#123;12&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Filter.Action</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">Filter</span>&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="六、消息卡片组件"><a href="#六、消息卡片组件" class="headerlink" title="六、消息卡片组件"></a>六、消息卡片组件</h3><p>创建消息卡片组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new MessageCard</span><br></pre></td></tr></table></figure><p>打开全局 <code>utils/mixins.js</code> 添加编写通用卡片样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">card</span> = (<span class="params">radius = <span class="string">&quot;6px&quot;</span>, padding = <span class="string">&quot;20px 30px&quot;</span></span>) =&gt; css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: </span><span class="subst">$&#123;padding&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background</span>: </span><span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.background&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">18px</span> <span class="number">40px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.04</span>);</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border-radius</span>: </span><span class="subst">$&#123;radius&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">`</span>;</span><br></pre></td></tr></table></figure><p>编写 <code>MessageCard/index.js</code> 文件，其中包含激活状态和已回复状态：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledMessageCard</span>, &#123;</span><br><span class="line">  <span class="title class_">Name</span>,</span><br><span class="line">  <span class="title class_">Status</span>,</span><br><span class="line">  <span class="title class_">Time</span>,</span><br><span class="line">  <span class="title class_">Message</span>,</span><br><span class="line">  <span class="title class_">MessageText</span>,</span><br><span class="line">  <span class="title class_">UnreadBadge</span>,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Avatar</span> <span class="keyword">from</span> <span class="string">&quot;components/Avatar&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useTheme &#125; <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">Replied</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/replied.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">MessageCard</span>(<span class="params">&#123;</span></span><br><span class="line"><span class="params">  avatarSrc,</span></span><br><span class="line"><span class="params">  avatarStatus,</span></span><br><span class="line"><span class="params">  statusText,</span></span><br><span class="line"><span class="params">  name,</span></span><br><span class="line"><span class="params">  time,</span></span><br><span class="line"><span class="params">  message,</span></span><br><span class="line"><span class="params">  unreadCount,</span></span><br><span class="line"><span class="params">  active,</span></span><br><span class="line"><span class="params">  replied,</span></span><br><span class="line"><span class="params">  children,</span></span><br><span class="line"><span class="params">  ...rest</span></span><br><span class="line"><span class="params">&#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> theme = <span class="title function_">useTheme</span>();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledMessageCard</span> <span class="attr">active</span>=<span class="string">&#123;active&#125;</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Avatar</span> <span class="attr">status</span>=<span class="string">&#123;avatarStatus&#125;</span> <span class="attr">src</span>=<span class="string">&#123;avatarSrc&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Name</span>&gt;</span>&#123;name&#125;<span class="tag">&lt;/<span class="name">Name</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Status</span>&gt;</span>&#123;statusText&#125;<span class="tag">&lt;/<span class="name">Status</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Time</span>&gt;</span>&#123;time&#125;<span class="tag">&lt;/<span class="name">Time</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Message</span> <span class="attr">replied</span>=<span class="string">&#123;replied&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;replied &amp;&amp; (</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Icon</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">width</span>=<span class="string">&#123;16&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">height</span>=<span class="string">&#123;14&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">icon</span>=<span class="string">&#123;Replied&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">color</span>=<span class="string">&#123;active</span> ? <span class="attr">theme.inactiveColorDark</span> <span class="attr">:</span> <span class="attr">theme.inactiveColor</span>&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">opacity</span>=<span class="string">&#123;active</span> ? <span class="attr">0.4</span> <span class="attr">:</span> <span class="attr">1</span>&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">style</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">justifyContent:</span> &quot;<span class="attr">start</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          /&gt;</span></span></span><br><span class="line"><span class="language-xml">        )&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">MessageText</span>&gt;</span>&#123;message&#125;<span class="tag">&lt;/<span class="name">MessageText</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">UnreadBadge</span> <span class="attr">count</span>=<span class="string">&#123;unreadCount&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Message</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledMessageCard</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">MessageCard</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">avatarSrc</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>.<span class="property">isRequired</span>,</span><br><span class="line">  <span class="attr">avatarStatus</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">  <span class="attr">statusText</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">  <span class="attr">name</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">  <span class="attr">time</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">  <span class="attr">message</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">  <span class="attr">unreadCount</span>: <span class="title class_">PropTypes</span>.<span class="property">number</span>,</span><br><span class="line">  <span class="attr">active</span>: <span class="title class_">PropTypes</span>.<span class="property">bool</span>,</span><br><span class="line">  <span class="attr">replied</span>: <span class="title class_">PropTypes</span>.<span class="property">bool</span>,</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">MessageCard</span>;</span><br></pre></td></tr></table></figure><p>编写样式 <code>style.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled, &#123; css &#125; <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Text</span> <span class="keyword">from</span> <span class="string">&quot;components/Text&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Paragraph</span> <span class="keyword">from</span> <span class="string">&quot;components/Paragraph&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Badge</span> <span class="keyword">from</span> <span class="string">&quot;components/Badge&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; card, activeBar &#125; <span class="keyword">from</span> <span class="string">&quot;utils/mixins&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledAvatar</span> <span class="keyword">from</span> <span class="string">&quot;components/Avatar/style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Name</span> = <span class="title function_">styled</span>(<span class="title class_">Text</span>).<span class="title function_">attrs</span>(&#123; <span class="attr">size</span>: <span class="string">&quot;large&quot;</span> &#125;)<span class="string">`</span></span><br><span class="line"><span class="string">  grid-area: name;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Time</span> = <span class="title function_">styled</span>(<span class="title class_">Text</span>).<span class="title function_">attrs</span>(&#123; <span class="attr">size</span>: <span class="string">&quot;medium&quot;</span>, <span class="attr">type</span>: <span class="string">&quot;secondary&quot;</span> &#125;)<span class="string">`</span></span><br><span class="line"><span class="string">  grid-area: time;</span></span><br><span class="line"><span class="string">  justify-self: end;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Status</span> = <span class="title function_">styled</span>(<span class="title class_">Text</span>).<span class="title function_">attrs</span>(&#123; <span class="attr">type</span>: <span class="string">&quot;secondary&quot;</span> &#125;)<span class="string">`</span></span><br><span class="line"><span class="string">  grid-area: status;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Message</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  grid-area: message;</span></span><br><span class="line"><span class="string">  display: grid;</span></span><br><span class="line"><span class="string">  grid-template-columns: 1fr 30px;</span></span><br><span class="line"><span class="string">  align-items: center;</span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;(&#123; replied &#125;) =&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">        replied &amp;&amp;</span></span></span><br><span class="line"><span class="subst"><span class="string">        css`<span class="language-css"></span></span></span></span><br><span class="line"><span class="language-css"><span class="subst"><span class="string">      <span class="attribute">grid-template-columns</span>: <span class="number">24px</span> <span class="number">1</span>fr <span class="number">30px</span>;</span></span></span></span><br><span class="line"><span class="language-css"><span class="subst"><span class="string">    `</span>&#125;</span></span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">MessageText</span> = <span class="title function_">styled</span>(<span class="title class_">Paragraph</span>).<span class="title function_">attrs</span>(&#123; <span class="attr">ellipsis</span>: <span class="literal">true</span> &#125;)<span class="string">``</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">UnreadBadge</span> = <span class="title function_">styled</span>(<span class="title class_">Badge</span>)<span class="string">`</span></span><br><span class="line"><span class="string">  justify-self: end;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledMessageCard</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;card()&#125;</span>;</span></span><br><span class="line"><span class="string">  display: grid;</span></span><br><span class="line"><span class="string">  grid-template-areas:</span></span><br><span class="line"><span class="string">    &quot;avatar name time&quot;</span></span><br><span class="line"><span class="string">    &quot;avatar status status&quot;</span></span><br><span class="line"><span class="string">    &quot;message message message&quot;;</span></span><br><span class="line"><span class="string">  grid-template-columns: 64px 1fr 1fr;</span></span><br><span class="line"><span class="string">  row-gap: 16px;</span></span><br><span class="line"><span class="string">  background: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.background&#125;</span>;</span></span><br><span class="line"><span class="string">  transition: 0.4s;</span></span><br><span class="line"><span class="string">  &amp;:hover &#123;</span></span><br><span class="line"><span class="string">    box-shadow: 0px 20px 50px rgba(0, 0, 0, 0.1);</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;StyledAvatar&#125;</span> &#123;</span></span><br><span class="line"><span class="string">    grid-area: avatar;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;(&#123; active &#125;) =&gt;</span></span></span><br><span class="line"><span class="subst"><span class="string">        active &amp;&amp;</span></span></span><br><span class="line"><span class="subst"><span class="string">        css`<span class="language-css"></span></span></span></span><br><span class="line"><span class="language-css"><span class="subst"><span class="string">      <span class="attribute">background</span>: </span><span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.darkPurple&#125;</span><span class="language-css">;</span></span></span></span><br><span class="line"><span class="language-css"><span class="subst"><span class="string">      </span><span class="subst">$&#123;Name&#125;</span><span class="language-css">, </span><span class="subst">$&#123;Status&#125;</span><span class="language-css">, </span><span class="subst">$&#123;Time&#125;</span><span class="language-css">, </span><span class="subst">$&#123;MessageText&#125;</span><span class="language-css"> &#123;</span></span></span></span><br><span class="line"><span class="language-css"><span class="subst"><span class="string">        <span class="attribute">color</span>: white;</span></span></span></span><br><span class="line"><span class="language-css"><span class="subst"><span class="string">      &#125;</span></span></span></span><br><span class="line"><span class="language-css"><span class="subst"><span class="string">      </span><span class="subst">$&#123;Status&#125;</span><span class="language-css">, </span><span class="subst">$&#123;Time&#125;</span><span class="language-css"> &#123;</span></span></span></span><br><span class="line"><span class="language-css"><span class="subst"><span class="string">        <span class="attribute">opacity</span>: <span class="number">0.4</span>;</span></span></span></span><br><span class="line"><span class="language-css"><span class="subst"><span class="string">      &#125;</span></span></span></span><br><span class="line"><span class="language-css"><span class="subst"><span class="string">      </span><span class="subst">$&#123;activeBar(&#123; barWidth: <span class="string">&quot;4px&quot;</span>, shadowWidth: <span class="string">&quot;14px&quot;</span> &#125;)&#125;</span><span class="language-css"></span></span></span></span><br><span class="line"><span class="language-css"><span class="subst"><span class="string"></span></span></span></span><br><span class="line"><span class="language-css"><span class="subst"><span class="string">      <span class="comment">/* 隐藏指示条露在外边的部分 */</span></span></span></span></span><br><span class="line"><span class="language-css"><span class="subst"><span class="string">      <span class="attribute">overflow</span>: hidden;`</span>&#125;</span></span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledMessageCard</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">Name</span>, <span class="title class_">Time</span>, <span class="title class_">Status</span>, <span class="title class_">Message</span>, <span class="title class_">MessageText</span>, <span class="title class_">UnreadBadge</span> &#125;;</span><br></pre></td></tr></table></figure><p>最后在 <code>messageCard.stories.js</code> 中将四种状态的卡片分别编辑 stories：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">MessageCard</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> face1 <span class="keyword">from</span> <span class="string">&quot;assets/images/face-male-1.jpg&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/MessageCard&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">MessageCard</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">MessageCard</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">avatarSrc</span>=<span class="string">&#123;face1&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">name</span>=<span class="string">&quot;李铭浩&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">avatarStatus</span>=<span class="string">&quot;online&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">statusText</span>=<span class="string">&quot;在线&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">time</span>=<span class="string">&quot;3 小时之前&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">message</span>=<span class="string">&quot;即使爬到最高的山上，一次也只能脚踏实地地&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">unreadCount</span>=<span class="string">&#123;2&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  /&gt;</span></span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Active</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">MessageCard</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">avatarSrc</span>=<span class="string">&#123;face1&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">name</span>=<span class="string">&quot;李铭浩&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">avatarStatus</span>=<span class="string">&quot;online&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">statusText</span>=<span class="string">&quot;在线&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">time</span>=<span class="string">&quot;3 小时之前&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">message</span>=<span class="string">&quot;即使爬到最高的山上，一次也只能脚踏实地地&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">unreadCount</span>=<span class="string">&#123;2&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">active</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  /&gt;</span></span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Replied</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">MessageCard</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">avatarSrc</span>=<span class="string">&#123;face1&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">name</span>=<span class="string">&quot;李铭浩&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">avatarStatus</span>=<span class="string">&quot;online&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">statusText</span>=<span class="string">&quot;在线&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">time</span>=<span class="string">&quot;3 小时之前&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">message</span>=<span class="string">&quot;即使爬到最高的山上，一次也只能脚踏实地地&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">unreadCount</span>=<span class="string">&#123;2&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">active</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">replied</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  /&gt;</span></span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">RepliedInactive</span> = (<span class="params"></span>) =&gt; (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">MessageCard</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">avatarSrc</span>=<span class="string">&#123;face1&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">name</span>=<span class="string">&quot;李铭浩&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">avatarStatus</span>=<span class="string">&quot;online&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">statusText</span>=<span class="string">&quot;在线&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">time</span>=<span class="string">&quot;3 小时之前&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">message</span>=<span class="string">&quot;即使爬到最高的山上，一次也只能脚踏实地地&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">unreadCount</span>=<span class="string">&#123;2&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    <span class="attr">replied</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">  /&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="七、消息列表组件"><a href="#七、消息列表组件" class="headerlink" title="七、消息列表组件"></a>七、消息列表组件</h3><p>将以上所有组件组装起来就是消息列表（侧边栏）组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new MessageList</span><br></pre></td></tr></table></figure><p>在 index.js 中编辑组件结构：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledMessageList</span>, &#123; <span class="title class_">ChatList</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">Plus</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/plus.svg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Filter</span> <span class="keyword">from</span> <span class="string">&quot;components/Filter&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Select</span> <span class="keyword">from</span> <span class="string">&quot;components/Select&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Option</span> <span class="keyword">from</span> <span class="string">&quot;components/Option&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Button</span> <span class="keyword">from</span> <span class="string">&quot;components/Button&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;components/Icon&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Input</span> <span class="keyword">from</span> <span class="string">&quot;components/Input&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">MessageCard</span> <span class="keyword">from</span> <span class="string">&quot;components/MessageCard&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> face1 <span class="keyword">from</span> <span class="string">&quot;assets/images/face-male-1.jpg&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">MessageList</span>(<span class="params">&#123; children, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledMessageList</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Input.Search</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ChatFilter</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">ChatList</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        &#123;[1, 2, 3, 4, 5, 6].map((_, index) =&gt; (</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">MessageCard</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">key</span>=<span class="string">&#123;index&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">active</span>=<span class="string">&#123;index</span> === <span class="string">3&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">replied</span>=<span class="string">&#123;index</span> % <span class="attr">3</span> === <span class="string">0&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">avatarSrc</span>=<span class="string">&#123;face1&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">name</span>=<span class="string">&quot;李铭浩&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">avatarStatus</span>=<span class="string">&quot;online&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">statusText</span>=<span class="string">&quot;在线&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">time</span>=<span class="string">&quot;3 小时之前&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">message</span>=<span class="string">&quot;即使爬到最高的山上，一次也只能脚踏实地地&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">unreadCount</span>=<span class="string">&#123;2&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          /&gt;</span></span></span><br><span class="line"><span class="language-xml">        ))&#125;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">ChatList</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledMessageList</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">ChatFilter</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Filter</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">padding:</span> &quot;<span class="attr">20px</span> <span class="attr">0</span>&quot; &#125;&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Filter.Filters</span> <span class="attr">label</span>=<span class="string">&quot;列表排序&quot;</span> &gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Option</span>&gt;</span>最新消息优先<span class="tag">&lt;/<span class="name">Option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Option</span>&gt;</span>在线好友优先<span class="tag">&lt;/<span class="name">Option</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Select</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      &lt;/Filter.Filters &gt;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Filter.Action</span> <span class="attr">label</span>=<span class="string">&quot;创建会话&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">Icon</span> <span class="attr">icon</span>=<span class="string">&#123;Plus&#125;</span> <span class="attr">width</span>=<span class="string">&#123;12&#125;</span> <span class="attr">height</span>=<span class="string">&#123;12&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Filter.Action</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Filter</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  );</span></span><br><span class="line"><span class="language-xml">&#125;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">MessageList.propTypes = &#123;</span></span><br><span class="line"><span class="language-xml">  children: PropTypes.any,</span></span><br><span class="line"><span class="language-xml">&#125;;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">export default MessageList;</span></span><br></pre></td></tr></table></figure><p>并在 <code>style.js</code> 中编写样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledMessageCard</span> <span class="keyword">from</span> <span class="string">&quot;components/MessageCard/style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">ChatList</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;StyledMessageCard&#125;</span> &#123;</span></span><br><span class="line"><span class="string">    margin-bottom: 20px;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledMessageList</span> = styled.<span class="property">div</span><span class="string">``</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledMessageList</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">ChatList</span> &#125;;</span><br></pre></td></tr></table></figure><p>最后在 <code>messageList.stories.js</code> 中导出：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">MessageList</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;页面组件/MessageList&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">MessageList</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">MessageList</span> /&gt;</span></span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;React 即时通信 UI 实战第五章。React 即时通信 UI 实战为&lt;a href=&quot;https://www.bilibili.com/video/BV1PK4y1b7bY?p=2&amp;amp;spm_id_from=pageDriver&amp;amp;vd_source=0965c74096f788f105780e5d5d0e9ebf&quot;&gt;峰华前端工程师&lt;/a&gt;推出的 React 实战课程，以聊天（即时通信）为原型，构建了一整套的 UI 组件库，课程重点在于 UI 组件的分析和实现，力求打造自用组件库。本章包括侧边栏中的搜索框、排版、下拉选项、消息卡片等组件。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Web前端" scheme="http://blog.zhuangzhihao.top/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="React" scheme="http://blog.zhuangzhihao.top/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>React 即时通信 ChatUI 侧导航</title>
    <link href="http://blog.zhuangzhihao.top/ChatUI%E4%BE%A7%E5%AF%BC%E8%88%AA/"/>
    <id>http://blog.zhuangzhihao.top/ChatUI%E4%BE%A7%E5%AF%BC%E8%88%AA/</id>
    <published>2022-09-28T16:00:00.000Z</published>
    <updated>2022-09-30T09:53:51.434Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>React 即时通信 UI 实战第四章。React 即时通信 UI 实战为<a href="https://www.bilibili.com/video/BV1PK4y1b7bY?p=2&amp;spm_id_from=pageDriver&amp;vd_source=0965c74096f788f105780e5d5d0e9ebf">峰华前端工程师</a>推出的 React 实战课程，以聊天（即时通信）为原型，构建了一整套的 UI 组件库，课程重点在于 UI 组件的分析和实现，力求打造自用组件库。本章包括侧导航中的头像、菜单项等组件。</p></blockquote><span id="more"></span><h3 id="一、头像组件开发"><a href="#一、头像组件开发" class="headerlink" title="一、头像组件开发"></a>一、头像组件开发</h3><p>在 <code>src</code> 目录下新建 <code>components/Avatar</code> 两级文件夹，用于存放组件的定义。文件夹中一般有 <code>index.js</code>（组件主体代码）、<code>style.js</code>（Styled-components 样式组件代码）、<code>组件名.stories.js</code>（组件 stories）、<code>hook.js</code>（自定义的 hooks）文件。</p><p>在 <code>index.js</code> 文件中快捷输入 <code>rfcp + tab</code>（reactFunctionalComponentWithPropTypes）导入依赖、创建一个函数式组件、引入propTypes：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&#x27;prop-types&#x27;</span></span><br><span class="line"><span class="keyword">import</span> face1 <span class="keyword">from</span> <span class="string">&quot;../../assets/images/face-male-1.jpg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledAvatar</span>, &#123; <span class="title class_">StatusIcon</span>, <span class="title class_">AvatarClip</span>, <span class="title class_">AvatarImage</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Avatar</span>(<span class="params">&#123; src, size = <span class="string">&quot;48px&quot;</span>, status, statusIconSize = <span class="string">&quot;8px&quot;</span>, ...rest &#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">StyledAvatar</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">            &#123;status &amp;&amp; <span class="tag">&lt;<span class="name">StatusIcon</span> <span class="attr">status</span>=<span class="string">&#123;status&#125;</span> <span class="attr">size</span>=<span class="string">&#123;statusIconSize&#125;</span>&gt;</span><span class="tag">&lt;/<span class="name">StatusIcon</span>&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">AvatarClip</span> <span class="attr">size</span>=<span class="string">&#123;size&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">AvatarImage</span> <span class="attr">src</span>=<span class="string">&#123;src&#125;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">AvatarClip</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">StyledAvatar</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Avatar</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">    <span class="attr">src</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>.<span class="property">isRequired</span>,</span><br><span class="line">    <span class="attr">size</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">    <span class="attr">status</span>: <span class="title class_">PropTypes</span>.<span class="title function_">oneOf</span>([<span class="string">&quot;online&quot;</span>, <span class="string">&quot;offline&quot;</span>]),</span><br><span class="line">    <span class="attr">statusIconSize</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Avatar</span>;</span><br></pre></td></tr></table></figure><p>在 <code>Avatar</code> 目录下新建 <code>avatar.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Avatar</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> face1 <span class="keyword">from</span> <span class="string">&quot;../../assets/images/face-male-1.jpg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> face2 <span class="keyword">from</span> <span class="string">&quot;../../assets/images/face-male-2.jpg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> face3 <span class="keyword">from</span> <span class="string">&quot;../../assets/images/face-male-3.jpg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> face4 <span class="keyword">from</span> <span class="string">&quot;../../assets/images/face-male-4.jpg&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;../../story.css&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="attr">title</span>: <span class="string">&quot;UI 组件/Avatar&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">Avatar</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">Avatar</span> <span class="attr">src</span>=<span class="string">&#123;face1&#125;</span> /&gt;</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Sizes</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;row-elements&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Avatar</span> <span class="attr">src</span>=<span class="string">&#123;face1&#125;</span> <span class="attr">size</span>=<span class="string">&quot;48px&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Avatar</span> <span class="attr">src</span>=<span class="string">&#123;face2&#125;</span> <span class="attr">size</span>=<span class="string">&quot;56px&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Avatar</span> <span class="attr">src</span>=<span class="string">&#123;face3&#125;</span> <span class="attr">size</span>=<span class="string">&quot;64px&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Avatar</span> <span class="attr">src</span>=<span class="string">&#123;face4&#125;</span> <span class="attr">size</span>=<span class="string">&quot;72px&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">WithStatus</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">&quot;row-elements&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Avatar</span> <span class="attr">src</span>=<span class="string">&#123;face1&#125;</span> <span class="attr">status</span>=<span class="string">&quot;online&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Avatar</span> <span class="attr">src</span>=<span class="string">&#123;face2&#125;</span> <span class="attr">status</span>=<span class="string">&quot;offline&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">Avatar</span> <span class="attr">src</span>=<span class="string">&#123;face4&#125;</span> <span class="attr">status</span>=<span class="string">&quot;offline&quot;</span> <span class="attr">size</span>=<span class="string">&quot;72px&quot;</span> <span class="attr">statusIconSize</span>=<span class="string">&quot;12px&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在 <code>Avatar</code> 目录下新建 <code>style.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled, &#123; css &#125; <span class="keyword">from</span> <span class="string">&#x27;styled-components&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">circleMixinFunc</span> = (<span class="params">color, size = <span class="string">&quot;8px&quot;</span></span>) =&gt; css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: </span><span class="subst">$&#123;size&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: </span><span class="subst">$&#123;size&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: </span><span class="subst">$&#123;color&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledAvatar</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">    position: relative;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StatusIcon</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">    position: absolute;</span></span><br><span class="line"><span class="string">    left: 2px;</span></span><br><span class="line"><span class="string">    top: 4px;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &amp;::before &#123;</span></span><br><span class="line"><span class="string">        <span class="subst">$&#123;(&#123; size &#125;) =&gt; circleMixinFunc(<span class="string">&quot;white&quot;</span>, size)&#125;</span></span></span><br><span class="line"><span class="string">        transform: scale(2);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &amp;::after &#123;</span></span><br><span class="line"><span class="string">        <span class="subst">$&#123;(&#123; theme, status, size &#125;) =&gt; &#123;</span></span></span><br><span class="line"><span class="subst"><span class="string">        <span class="keyword">if</span> (status === <span class="string">&quot;online&quot;</span>) &#123;</span></span></span><br><span class="line"><span class="subst"><span class="string">            <span class="keyword">return</span> circleMixinFunc(theme.green, size);</span></span></span><br><span class="line"><span class="subst"><span class="string">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (status === <span class="string">&quot;offline&quot;</span>) &#123;</span></span></span><br><span class="line"><span class="subst"><span class="string">            <span class="keyword">return</span> circleMixinFunc(theme.gray, size);</span></span></span><br><span class="line"><span class="subst"><span class="string">        &#125;</span></span></span><br><span class="line"><span class="subst"><span class="string">    &#125;&#125;</span></span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">AvatarClip</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">    width: <span class="subst">$&#123;(&#123; size &#125;) =&gt; size&#125;</span>;</span></span><br><span class="line"><span class="string">    height: <span class="subst">$&#123;(&#123; size &#125;) =&gt; size&#125;</span>;</span></span><br><span class="line"><span class="string">    border-radius: 50%;</span></span><br><span class="line"><span class="string">    overflow: hidden;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">AvatarImage</span> = styled.<span class="property">img</span><span class="string">`</span></span><br><span class="line"><span class="string">    width: 100%;</span></span><br><span class="line"><span class="string">    height: 100%;</span></span><br><span class="line"><span class="string">    object-fit: cover;</span></span><br><span class="line"><span class="string">    object-position: center;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledAvatar</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">StatusIcon</span>, <span class="title class_">AvatarClip</span>, <span class="title class_">AvatarImage</span> &#125;;</span><br></pre></td></tr></table></figure><h3 id="二、jsconfig-json-文件"><a href="#二、jsconfig-json-文件" class="headerlink" title="二、jsconfig.json 文件"></a>二、jsconfig.json 文件</h3><p>在 ChatUI 项目根目录下创建 <code>jsconfig.json</code> 项目配置文件：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;compilerOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;baseUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;src&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;include&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;src&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;exclude&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;node_modules&quot;</span><span class="punctuation">,</span> <span class="string">&quot;**/node_modules/*&quot;</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>此时，在 <code>avatar.stories.js</code> 文件中导入可用相对路径导入：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> face1 <span class="keyword">from</span> <span class="string">&quot;assets/images/face-male-1.jpg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> face2 <span class="keyword">from</span> <span class="string">&quot;assets/images/face-male-2.jpg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> face3 <span class="keyword">from</span> <span class="string">&quot;assets/images/face-male-3.jpg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> face4 <span class="keyword">from</span> <span class="string">&quot;assets/images/face-male-4.jpg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;story.css&quot;</span></span><br></pre></td></tr></table></figure><h3 id="三、Hygen-模版生成器配置"><a href="#三、Hygen-模版生成器配置" class="headerlink" title="三、Hygen 模版生成器配置"></a>三、Hygen 模版生成器配置</h3><p>安装和初始化 Hygen：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm i -g hygen</span><br><span class="line">hygen init self   <span class="comment">#在项目目录下初始化</span></span><br></pre></td></tr></table></figure><p>生成新 component 模版：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen generator new component</span><br></pre></td></tr></table></figure><p>配置模版文件，将 <code>_templates/component/new</code> 文件夹下的 <code>hello.ejs.t</code> 文件重命名为 <code>index.ejs.t</code>，并修改模版内容：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="attr">to</span>: src/components/&lt;%= name %&gt;/index.<span class="property">js</span></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Styled</span>&lt;%= name %&gt; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> &lt;%= name %&gt;(&#123;children,...rest&#125;) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;<span class="title class_">Styled</span>&lt;%= name %&gt; &#123;...rest&#125;&gt;</span><br><span class="line">      &#123;children&#125;</span><br><span class="line">    &lt;/<span class="title class_">Styled</span>&lt;%= name %&gt;&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;%= name %&gt;.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &lt;%= name %&gt;;</span><br></pre></td></tr></table></figure><p>同目录下新建 style.ejs.t 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="attr">to</span>: src/components/&lt;%= name %&gt;/style.<span class="property">js</span></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Styled</span>&lt;%= name %&gt; = styled.<span class="property">div</span><span class="string">``</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Styled</span>&lt;%= name %&gt;;</span><br></pre></td></tr></table></figure><p>和 stories.ejs.t 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="attr">to</span>: src/components/&lt;%= name %&gt;/&lt;%= h.<span class="property">changeCase</span>.<span class="title function_">lcFirst</span>(name) %&gt;.<span class="property">stories</span>.<span class="property">js</span></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &lt;%= name %&gt; <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;&lt;%= name %&gt;&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: &lt;%= name %&gt;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; &lt;&lt;%= name %&gt;&gt;默认&lt;/&lt;%= name %&gt;&gt;;</span><br></pre></td></tr></table></figure><p>为下一部分组件生成模版：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hygen component new Icon</span><br><span class="line"><span class="comment"># Loaded templates: _templates</span></span><br><span class="line"><span class="comment">#       added: src/components/Icon/index.js</span></span><br><span class="line"><span class="comment">#       added: src/components/Icon/icon.stories.js</span></span><br><span class="line"><span class="comment">#       added: src/components/Icon/style.js</span></span><br></pre></td></tr></table></figure><h3 id="四、Icon-组件开发"><a href="#四、Icon-组件开发" class="headerlink" title="四、Icon 组件开发"></a>四、Icon 组件开发</h3><p>在 <code>index.js</code> 文件中编写组件的结构代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledIcon</span> <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Icon</span>(<span class="params">&#123; icon: IconComponent, width = <span class="number">24</span>, height = <span class="number">24</span>, color, opacity, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledIcon</span> <span class="attr">color</span>=<span class="string">&#123;color&#125;</span> <span class="attr">opacity</span>=<span class="string">&#123;opacity&#125;</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;IconComponent &amp;&amp; <span class="tag">&lt;<span class="name">IconComponent</span> <span class="attr">width</span>=<span class="string">&#123;width&#125;</span> <span class="attr">height</span>=<span class="string">&#123;height&#125;</span> /&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledIcon</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Icon</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">icon</span>: <span class="title class_">PropTypes</span>.<span class="property">element</span>,</span><br><span class="line">  <span class="attr">width</span>: <span class="title class_">PropTypes</span>.<span class="title function_">oneOfType</span>([<span class="title class_">PropTypes</span>.<span class="property">number</span>, <span class="title class_">PropTypes</span>.<span class="property">string</span>]),</span><br><span class="line">  <span class="attr">height</span>: <span class="title class_">PropTypes</span>.<span class="title function_">oneOfType</span>([<span class="title class_">PropTypes</span>.<span class="property">number</span>, <span class="title class_">PropTypes</span>.<span class="property">string</span>]),</span><br><span class="line">  <span class="attr">color</span>: <span class="title class_">PropTypes</span>.<span class="property">string</span>,</span><br><span class="line">  <span class="attr">opacity</span>: <span class="title class_">PropTypes</span>.<span class="property">number</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Icon</span>;</span><br></pre></td></tr></table></figure><p>修改 <code>icon.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReactComponent</span> <span class="keyword">as</span> <span class="title class_">SmileIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;assets/icon/smile.svg&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/Icon&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Icon</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Icon</span> <span class="attr">icon</span>=<span class="string">&#123;SmileIcon&#125;</span> /&gt;</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">CustomColor</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">Icon</span> <span class="attr">icon</span>=<span class="string">&#123;SmileIcon&#125;</span> <span class="attr">color</span>=<span class="string">&quot;#cccccc&quot;</span> /&gt;</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">CustomSize</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">Icon</span> <span class="attr">icon</span>=<span class="string">&#123;SmileIcon&#125;</span> <span class="attr">width</span>=<span class="string">&#123;48&#125;</span> <span class="attr">height</span>=<span class="string">&#123;48&#125;</span> <span class="attr">color</span>=<span class="string">&quot;#cccccc&quot;</span> /&gt;</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>以及同目录下 <code>style.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledIcon</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: inline-flex;</span></span><br><span class="line"><span class="string">  align-items: center;</span></span><br><span class="line"><span class="string">  justify-content: center;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  svg,</span></span><br><span class="line"><span class="string">  svg * &#123;</span></span><br><span class="line"><span class="string">    <span class="subst">$&#123;(&#123; color &#125;) =&gt; (color ? <span class="string">`fill: <span class="subst">$&#123;color&#125;</span>`</span> : <span class="string">&quot;&quot;</span>)&#125;</span>;</span></span><br><span class="line"><span class="string">    <span class="subst">$&#123;(&#123; opacity &#125;) =&gt; (opacity ? <span class="string">`opacity: <span class="subst">$&#123;opacity&#125;</span>`</span> : <span class="string">&quot;&quot;</span>)&#125;</span></span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledIcon</span>;</span><br></pre></td></tr></table></figure><p>安装 FontAwesome 图标库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yarn add @fortawesome/react-fontawesome</span><br><span class="line">yarn add @fortawesome/fontawesome-svg-core</span><br><span class="line">yarn add @fortawesome/free-brands-svg-icons</span><br><span class="line">yarn add @fortawesome/free-regular-svg-icons</span><br><span class="line">yarn add @fortawesome/free-solid-svg-icons</span><br></pre></td></tr></table></figure><p>在 <code>icon.stories.js</code> 文件中添加 <code>FontAwesome</code> 测试范例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  faCommentDots,</span><br><span class="line">  faFolder,</span><br><span class="line">  faStickyNote,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-solid-svg-icons&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FontAwesomeIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/react-fontawesome&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">FontAwesome</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faCommentDots&#125;</span> /&gt;</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">FontAwesomeColor</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faCommentDots&#125;</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">color:</span> &quot;#<span class="attr">cccccc</span>&quot; &#125;&#125; /&gt;</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">FontAwesomeSizes</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faFolder&#125;</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">fontSize:</span> &quot;<span class="attr">24px</span>&quot; &#125;&#125; /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faStickyNote&#125;</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">fontSize:</span> &quot;<span class="attr">36px</span>&quot; &#125;&#125; /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faCommentDots&#125;</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">fontSize:</span> &quot;<span class="attr">48px</span>&quot; &#125;&#125; /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="五、徽章组件"><a href="#五、徽章组件" class="headerlink" title="五、徽章组件"></a>五、徽章组件</h3><p>徽章（Badge）组件，即 Icon 组件上的小红点，用来实现提示用户有未读消息的功能，一种组件的不同形态称为变体（Variant），照例使用 Hygen 生成一个名为 Badge 的 component 组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new Badge</span><br></pre></td></tr></table></figure><p>在 <code>index.js</code> 中修改组件结构：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledBadge</span>, &#123; <span class="title class_">Count</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Badge</span>(<span class="params">&#123; children, show = <span class="literal">false</span>, count = <span class="number">0</span>, showZero = <span class="literal">false</span>, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledBadge</span> <span class="attr">variant</span>=<span class="string">&#123;children</span> ? &quot;<span class="attr">dot</span>&quot; <span class="attr">:</span> &quot;<span class="attr">default</span>&quot;&#125; <span class="attr">show</span>=<span class="string">&#123;show&#125;</span> <span class="attr">count</span>=<span class="string">&#123;count&#125;</span> <span class="attr">showZero</span>=<span class="string">&#123;showZero&#125;</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;children || <span class="tag">&lt;<span class="name">Count</span>&gt;</span>&#123;count&#125;<span class="tag">&lt;/<span class="name">Count</span>&gt;</span>&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledBadge</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Badge</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">show</span>: <span class="title class_">PropTypes</span>.<span class="property">bool</span>,</span><br><span class="line">  <span class="attr">count</span>: <span class="title class_">PropTypes</span>.<span class="property">number</span>,</span><br><span class="line">  <span class="attr">showZero</span>: <span class="title class_">PropTypes</span>.<span class="property">bool</span>,</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Badge</span>;</span><br></pre></td></tr></table></figure><p>可以把圆形样式设为通用的样式 Mixin 复用，在 <code>src</code> 下新建 <code>utils</code> 文件夹，再在二级目录下新建 <code>mixins.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; css &#125; <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">circle</span> = (<span class="params">color, size = <span class="string">&quot;8px&quot;</span></span>) =&gt; css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: </span><span class="subst">$&#123;size&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: </span><span class="subst">$&#123;size&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: </span><span class="subst">$&#123;color&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">`</span>;</span><br></pre></td></tr></table></figure><p>修改 <code>src/components/Avatar/style.js</code> 文件中的 <code>circleMixinFunc</code> 函数：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; circle &#125; <span class="keyword">from</span> <span class="string">&#x27;utils/mixins&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">circleMixinFunc</span> = (<span class="params">color, size = <span class="string">&quot;8px&quot;</span></span>) =&gt; css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">    </span><span class="subst">$&#123;circle(color, size)&#125;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">`</span>;</span><br></pre></td></tr></table></figure><p>再在 <code>Badge/style.js</code> 中编写徽章组件样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled, &#123; css &#125; <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; circle &#125; <span class="keyword">from</span> <span class="string">&quot;utils/mixins&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> variants = &#123;</span><br><span class="line">  <span class="attr">dot</span>: css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css">    &amp;<span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: </span><span class="subst">$&#123;(&#123; show &#125;) =&gt; (show ? <span class="string">&quot;block&quot;</span> : <span class="string">&quot;none&quot;</span>)&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-css">      </span><span class="subst">$&#123;(&#123; theme &#125;) =&gt; circle(theme.red, <span class="string">&quot;6px&quot;</span>)&#125;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  `</span>,</span><br><span class="line">  <span class="attr">default</span>: css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="subst">$&#123;(&#123; theme &#125;) =&gt; circle(theme.red, <span class="string">&quot;26px&quot;</span>)&#125;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">18px</span> <span class="number">40px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.04</span>),</span></span><br><span class="line"><span class="language-css">      <span class="number">0px</span> <span class="number">6px</span> <span class="number">12px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.08</span>);</span></span><br><span class="line"><span class="language-css">    </span><span class="subst">$&#123;(&#123; showZero, count &#125;) =&gt; !showZero &amp;&amp; count === <span class="number">0</span> &amp;&amp; <span class="string">`visibility: hidden`</span>&#125;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  `</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">Count</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  font-size: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.normal&#125;</span>;</span></span><br><span class="line"><span class="string">  color: white;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledBadge</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: inline-block;</span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;(&#123; variant &#125;) =&gt; variants[variant]&#125;</span></span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledBadge</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">Count</span> &#125;;</span><br></pre></td></tr></table></figure><p>在全局目录下的 style.css 文件中添加：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">62.5%</span>;    <span class="comment">/* 使得 1rem = 10px */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>并在全局目录下的 <code>style.css</code> 文件中导入：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@import</span> url(<span class="string">&quot;./index.css&quot;</span>);</span><br></pre></td></tr></table></figure><p>最后更改 <code>badge.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Badge</span> <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FontAwesomeIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/react-fontawesome&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; faCommentDots &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-solid-svg-icons&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;UI 组件/Badge&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Badge</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">Badge</span> <span class="attr">count</span>=<span class="string">&#123;5&#125;</span> /&gt;</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">DotVariant</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Badge</span> <span class="attr">show</span> <span class="attr">variant</span>=<span class="string">&quot;dot&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">FontAwesomeIcon</span> <span class="attr">icon</span>=<span class="string">&#123;faCommentDots&#125;</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">fontSize:</span> &quot;<span class="attr">24px</span>&quot; &#125;&#125; /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">Badge</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="六、菜单项组件"><a href="#六、菜单项组件" class="headerlink" title="六、菜单项组件"></a>六、菜单项组件</h3><p>新建侧导航组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hygen component new NavBar</span><br></pre></td></tr></table></figure><p>在 <code>index.js</code> 文件中编写组件结构：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledNavBar</span>, &#123; <span class="title class_">StyledMenuItem</span>, <span class="title class_">MenuIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Badge</span> <span class="keyword">from</span> <span class="string">&quot;components/Badge&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">NavBar</span>(<span class="params">&#123; children, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledNavBar</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledNavBar</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">MenuItem</span>(<span class="params">&#123; icon, active, showBadge, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledMenuItem</span> <span class="attr">active</span>=<span class="string">&#123;active&#125;</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Badge</span> <span class="attr">show</span>=<span class="string">&#123;showBadge&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">MenuIcon</span> <span class="attr">active</span>=<span class="string">&#123;active&#125;</span> <span class="attr">icon</span>=<span class="string">&#123;icon&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Badge</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledMenuItem</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">NavBar</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">  <span class="attr">children</span>: <span class="title class_">PropTypes</span>.<span class="property">any</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">NavBar</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">MenuItem</span> &#125;;</span><br></pre></td></tr></table></figure><p>以及 <code>navBar.stories.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">NavBar</span>, &#123; <span class="title class_">MenuItem</span> &#125; <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; faCommentDots &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-solid-svg-icons&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;页面组件/NavBar&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">NavBar</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">NavBar</span>&gt;</span>默认<span class="tag">&lt;/<span class="name">NavBar</span>&gt;</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Menu</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">MenuItem</span> <span class="attr">showBadge</span> <span class="attr">active</span> <span class="attr">icon</span>=<span class="string">&#123;faCommentDots&#125;</span> /&gt;</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>高亮显示条需要定义为 <code>Mixin</code>，打开 <code>utils/mixins.js</code> 文件添加 <code>activeBar</code> 样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">activeBar</span> = (<span class="params">&#123; barWidth = <span class="string">&quot;8px&quot;</span>, shadowWidth = <span class="string">&quot;20px&quot;</span> &#125; = &#123;&#125;</span>) =&gt;</span><br><span class="line">  css`<span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">    &amp;<span class="selector-pseudo">::before</span>, &amp;<span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">transition</span>: <span class="number">0.4s</span> <span class="built_in">cubic-bezier</span>(<span class="number">0.16</span>, <span class="number">1</span>, <span class="number">0.3</span>, <span class="number">1</span>);</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    &amp;<span class="selector-pseudo">::before</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: </span><span class="subst">$&#123;barWidth&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(</span></span><br><span class="line"><span class="language-css">        <span class="number">180deg</span>,</span></span><br><span class="line"><span class="language-css">        <span class="built_in">rgba</span>(<span class="number">142</span>, <span class="number">197</span>, <span class="number">242</span>, <span class="number">1</span>) <span class="number">0%</span>,</span></span><br><span class="line"><span class="language-css">        <span class="built_in">rgba</span>(<span class="number">79</span>, <span class="number">157</span>, <span class="number">222</span>, <span class="number">1</span>) <span class="number">100%</span></span></span><br><span class="line"><span class="language-css">      );</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    &amp;<span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: </span><span class="subst">$&#123;shadowWidth&#125;</span><span class="language-css">;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(</span></span><br><span class="line"><span class="language-css">        <span class="number">270deg</span>,</span></span><br><span class="line"><span class="language-css">        <span class="built_in">rgba</span>(<span class="number">41</span>, <span class="number">47</span>, <span class="number">76</span>, <span class="number">1</span>) <span class="number">0%</span>,</span></span><br><span class="line"><span class="language-css">        <span class="built_in">rgba</span>(<span class="number">142</span>, <span class="number">197</span>, <span class="number">242</span>, <span class="number">1</span>) <span class="number">100%</span></span></span><br><span class="line"><span class="language-css">      );</span></span><br><span class="line"><span class="language-css">      <span class="attribute">opacity</span>: <span class="number">0.6</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  `</span>;</span><br></pre></td></tr></table></figure><p>修改组件样式 <code>style.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FontAwesomeIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/react-fontawesome&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; activeBar &#125; <span class="keyword">from</span> <span class="string">&quot;utils/mixins&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledMenuItem</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">    &amp; &gt; a &#123;</span></span><br><span class="line"><span class="string">        width: 100%;</span></span><br><span class="line"><span class="string">        height: 74px;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        display: flex;</span></span><br><span class="line"><span class="string">        align-items: center;</span></span><br><span class="line"><span class="string">        justify-content: center;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        <span class="subst">$&#123;activeBar()&#125;</span>;</span></span><br><span class="line"><span class="string">        <span class="subst">$&#123;(&#123; active &#125;) =&gt; (active ? <span class="string">&quot;&quot;</span> : <span class="string">`&amp;::before, &amp;::after &#123;height: 0&#125;`</span>)&#125;</span>;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">MenuIcon</span> = <span class="title function_">styled</span>(<span class="title class_">FontAwesomeIcon</span>)<span class="string">`</span></span><br><span class="line"><span class="string">    color: white;</span></span><br><span class="line"><span class="string">    font-size: 24px;</span></span><br><span class="line"><span class="string">    opacity: <span class="subst">$&#123;(&#123; active &#125;) =&gt; (active ? <span class="number">1</span> : <span class="number">0.3</span>)&#125;</span>;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledNavBar</span> = styled.<span class="property">nav</span><span class="string">``</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledNavBar</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">MenuIcon</span>, <span class="title class_">StyledMenuItem</span> &#125;;</span><br></pre></td></tr></table></figure><p>使用 <code>Styled-component macros</code>，在 <code>.storybook</code> 目录下新建 <code>.babelrc</code> 文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;plugins&quot;: [&quot;macros&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>并修改 <code>navBar.stories.js</code> 文件为：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">NavBar</span>, &#123; <span class="title class_">MenuItem</span> &#125; <span class="keyword">from</span> <span class="string">&quot;.&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; faCommentDots &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-solid-svg-icons&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;styled-components/macro&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;页面组件/NavBar&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">NavBar</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Default</span> = (<span class="params"></span>) =&gt; <span class="language-xml"><span class="tag">&lt;<span class="name">NavBar</span> /&gt;</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">Menu</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      <span class="attr">css</span>=<span class="string">&#123;</span>`</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">background-color:</span> $&#123;(&#123; <span class="attr">theme</span> &#125;) =&gt;</span> theme.darkPurple&#125;;</span></span><br><span class="line"><span class="language-xml">        width: 100px;</span></span><br><span class="line"><span class="language-xml">      `&#125;</span></span><br><span class="line"><span class="language-xml">    &gt;</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">MenuItem</span> <span class="attr">showBadge</span> <span class="attr">active</span> <span class="attr">icon</span>=<span class="string">&#123;faCommentDots&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="七、侧导航组件"><a href="#七、侧导航组件" class="headerlink" title="七、侧导航组件"></a>七、侧导航组件</h3><p>侧导航组件包括头像和菜单项，使用 CSS Grid 布局，修改 <code>components/NavBar</code> 下的 <code>index.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">PropTypes</span> <span class="keyword">from</span> <span class="string">&quot;prop-types&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">StyledNavBar</span>, &#123; <span class="title class_">StyledMenuItem</span>, <span class="title class_">MenuIcon</span>, <span class="title class_">MenuItems</span> &#125; <span class="keyword">from</span> <span class="string">&quot;./style&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Badge</span> <span class="keyword">from</span> <span class="string">&quot;components/Badge&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Avatar</span> <span class="keyword">from</span> <span class="string">&quot;components/Avatar&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> profileImage <span class="keyword">from</span> <span class="string">&quot;assets/images/face-male-1.jpg&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; faCommentDots, faUsers, faFolder, faStickyNote, faEllipsisH, faCog, &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/free-solid-svg-icons&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">NavBar</span>(<span class="params">&#123; ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledNavBar</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Avatar</span> <span class="attr">src</span>=<span class="string">&#123;profileImage&#125;</span> <span class="attr">status</span>=<span class="string">&quot;online&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">MenuItems</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">MenuItem</span> <span class="attr">showBadge</span> <span class="attr">active</span> <span class="attr">icon</span>=<span class="string">&#123;faCommentDots&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">MenuItem</span> <span class="attr">icon</span>=<span class="string">&#123;faUsers&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">MenuItem</span> <span class="attr">icon</span>=<span class="string">&#123;faFolder&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">MenuItem</span> <span class="attr">icon</span>=<span class="string">&#123;faStickyNote&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">MenuItem</span> <span class="attr">icon</span>=<span class="string">&#123;faEllipsisH&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">MenuItem</span> <span class="attr">icon</span>=<span class="string">&#123;faCog&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">MenuItems</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledNavBar</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">MenuItem</span>(<span class="params">&#123; icon, active, showBadge, ...rest &#125;</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">StyledMenuItem</span> <span class="attr">active</span>=<span class="string">&#123;active&#125;</span> &#123;<span class="attr">...rest</span>&#125;&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Badge</span> <span class="attr">show</span>=<span class="string">&#123;showBadge&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">MenuIcon</span> <span class="attr">active</span>=<span class="string">&#123;active&#125;</span> <span class="attr">icon</span>=<span class="string">&#123;icon&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">Badge</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">StyledMenuItem</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">NavBar</span>.<span class="property">propTypes</span> = &#123;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">NavBar</span>;</span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">MenuItem</span> &#125;;</span><br></pre></td></tr></table></figure><p>再在同目录下 <code>style.js</code> 中编写样式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FontAwesomeIcon</span> &#125; <span class="keyword">from</span> <span class="string">&quot;@fortawesome/react-fontawesome&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; activeBar &#125; <span class="keyword">from</span> <span class="string">&quot;utils/mixins&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledMenuItem</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">    &amp; &gt; a &#123;</span></span><br><span class="line"><span class="string">        width: 100%;</span></span><br><span class="line"><span class="string">        height: 74px;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        display: flex;</span></span><br><span class="line"><span class="string">        align-items: center;</span></span><br><span class="line"><span class="string">        justify-content: center;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        <span class="subst">$&#123;activeBar()&#125;</span>;</span></span><br><span class="line"><span class="string">        <span class="subst">$&#123;(&#123; active &#125;) =&gt; (active ? <span class="string">&quot;&quot;</span> : <span class="string">`&amp;::before, &amp;::after &#123;height: 0&#125;`</span>)&#125;</span>;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">MenuIcon</span> = <span class="title function_">styled</span>(<span class="title class_">FontAwesomeIcon</span>)<span class="string">`</span></span><br><span class="line"><span class="string">    color: white;</span></span><br><span class="line"><span class="string">    font-size: 24px;</span></span><br><span class="line"><span class="string">    opacity: <span class="subst">$&#123;(&#123; active &#125;) =&gt; (active ? <span class="number">1</span> : <span class="number">0.3</span>)&#125;</span>;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledNavBar</span> = styled.<span class="property">nav</span><span class="string">`</span></span><br><span class="line"><span class="string">    display: grid;</span></span><br><span class="line"><span class="string">    grid-template-rows: 1fr 4fr;</span></span><br><span class="line"><span class="string">    width: 100px;</span></span><br><span class="line"><span class="string">    height: 100vh;</span></span><br><span class="line"><span class="string">    background-color: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.darkPurple&#125;</span>;</span></span><br><span class="line"><span class="string">    padding: 30px 0;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">MenuItems</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">  display: grid;</span></span><br><span class="line"><span class="string">  grid-template-rows: repeat(5, minmax(auto, 88px)) 1fr;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">StyledNavBar</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123; <span class="title class_">MenuIcon</span>, <span class="title class_">StyledMenuItem</span>, <span class="title class_">MenuItems</span> &#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;React 即时通信 UI 实战第四章。React 即时通信 UI 实战为&lt;a href=&quot;https://www.bilibili.com/video/BV1PK4y1b7bY?p=2&amp;amp;spm_id_from=pageDriver&amp;amp;vd_source=0965c74096f788f105780e5d5d0e9ebf&quot;&gt;峰华前端工程师&lt;/a&gt;推出的 React 实战课程，以聊天（即时通信）为原型，构建了一整套的 UI 组件库，课程重点在于 UI 组件的分析和实现，力求打造自用组件库。本章包括侧导航中的头像、菜单项等组件。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Web前端" scheme="http://blog.zhuangzhihao.top/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="React" scheme="http://blog.zhuangzhihao.top/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>创建 React 即时通信 ChatUI 工程</title>
    <link href="http://blog.zhuangzhihao.top/%E5%88%9B%E5%BB%BAChatUI%E5%B7%A5%E7%A8%8B/"/>
    <id>http://blog.zhuangzhihao.top/%E5%88%9B%E5%BB%BAChatUI%E5%B7%A5%E7%A8%8B/</id>
    <published>2022-09-20T16:00:00.000Z</published>
    <updated>2022-09-30T09:27:39.450Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>React 即时通信 UI 实战第二章。React 即时通信 UI 实战为<a href="https://www.bilibili.com/video/BV1PK4y1b7bY?p=2&amp;spm_id_from=pageDriver&amp;vd_source=0965c74096f788f105780e5d5d0e9ebf">峰华前端工程师</a>推出的 React 实战课程，以聊天（即时通信）为原型，构建了一整套的 UI 组件库，课程重点在于 UI 组件的分析和实现，力求打造自用组件库。本章包括创建 React 工程，快速回顾 React 开发要点以及环境配置。</p></blockquote><span id="more"></span><h3 id="一、创建-React-工程"><a href="#一、创建-React-工程" class="headerlink" title="一、创建 React 工程"></a>一、创建 React 工程</h3><p>安装 Yarn：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -o- -L https://yarnpkg.com/install.sh | bash</span><br><span class="line"><span class="comment"># yarn -v</span></span><br></pre></td></tr></table></figure><p>使用 <a href="https://create-react-app.dev/">Create React App</a> 工具，让你仅通过一行命令，即可构建现代化的 Web 应用。例如我们需要创建名为 chat-ui 的项目，运行如下命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yarn create react-app chat-ui</span><br><span class="line"><span class="comment"># 或者使用 npx create-react-app chat-ui</span></span><br></pre></td></tr></table></figure><p><code>src</code> 目录下存放所有 React 源代码。<code>src/index.js</code> 是程序的入口文件。</p><h3 id="二、React-快速回顾"><a href="#二、React-快速回顾" class="headerlink" title="二、React 快速回顾"></a>二、React 快速回顾</h3><p><a href="https://reactjs.org/">React</a> 是一个声明式，高效且灵活的用于构建用户界面 UI 的 JavaScript 库。使用 React 可以将一些简短、独立的代码片段组合成复杂的 UI 界面，这些代码片段被称作“组件”，而组件是通过状态来更新的。</p><h4 id="创建一个组件"><a href="#创建一个组件" class="headerlink" title="创建一个组件"></a>创建一个组件</h4><p>创建一个 <code>Button.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Button</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">Button</span>;</span><br></pre></td></tr></table></figure><p>在 <code>App.js</code> 中导入、返回：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./App.css&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Button</span> <span class="keyword">from</span> <span class="string">&#x27;./Button.js&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">Button</span> /&gt;</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">App</span>;</span><br></pre></td></tr></table></figure><h4 id="JSX-与-HTML"><a href="#JSX-与-HTML" class="headerlink" title="JSX 与 HTML"></a>JSX 与 HTML</h4><p>JSX 中所有属性变为驼峰命名法，例如 <code>onClick</code>、<code>className</code>、<code>style=&#123;&#123;backgroundColor: "red"&#125;&#125;</code>。</p><p>在 JSX 语法中，你可以在大括号内放置任何有效的 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#Expressions">JavaScript 表达式</a>。例如，<code>2 + 2</code>，<code>user.firstName</code> 或 <code>formatName(user)</code> 都是有效的 JavaScript 表达式，例如调用 JavaScript 函数 <code>formatName(user)</code> 的结果，并将结果嵌入到 <code>&lt;h1&gt;</code> 元素中：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">formatName</span>(<span class="params">user</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> user.<span class="property">firstName</span> + <span class="string">&#x27; &#x27;</span> + user.<span class="property">lastName</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> user = &#123;</span><br><span class="line">  <span class="attr">firstName</span>: <span class="string">&#x27;Harper&#x27;</span>,</span><br><span class="line">  <span class="attr">lastName</span>: <span class="string">&#x27;Perez&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> element = (</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    Hello, &#123;formatName(user)&#125;!  <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="title class_">ReactDOM</span>.<span class="title function_">render</span>(</span><br><span class="line">  element,</span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>注意：在 React 18 中，<code>render</code> 函数已被 <code>createRoot</code> 函数所取代。具体请参阅 <a href="https://zh-hans.reactjs.org/docs/react-dom-client.html#createroot">createRoot</a> 以了解更多。</p><h4 id="属性-Props"><a href="#属性-Props" class="headerlink" title="属性 Props"></a>属性 Props</h4><p>React 组件可以通过属性来实现复用。每个组件函数都接收一个 Props 对象：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Button</span>(<span class="params">props</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">button</span>&gt;</span>&#123;props.label&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span>   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也可以通过 ES6 将 label 解构出来：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Button</span>(<span class="params">&#123; label, children &#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">button</span>&gt;</span>&#123;label&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 <code>App.js</code> 中导入、返回：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Button</span> <span class="attr">label</span>=<span class="string">&quot;按钮&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Button</span> <span class="attr">label</span>=<span class="string">&quot;点我&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="事件处理"><a href="#事件处理" class="headerlink" title="事件处理"></a>事件处理</h4><p>给组件注册事件监听：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Button</span>(<span class="params">&#123; onClick, label, children &#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">onClick</span>=<span class="string">&#123;onClick&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">button</span>&gt;</span>&#123;label&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在父级菜单设置传入事件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleButton1Click</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;点击按钮1事件&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleButton2Click</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;点击按钮2事件&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Button</span> <span class="attr">label</span>=<span class="string">&quot;按钮&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;handleButton1Click&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Button</span> <span class="attr">label</span>=<span class="string">&quot;点我&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;handleButton2Click&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="状态-State"><a href="#状态-State" class="headerlink" title="状态 State"></a>状态 State</h4><p>props 是静态的，在组件渲染后修改 props 的值并不会引起组件的更新。如果想点击后改变字体颜色，需要定义 State 属性：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useState &#125; <span class="keyword">from</span> <span class="string">&#x27;react&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./App.css&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Button</span> <span class="keyword">from</span> <span class="string">&#x27;./Button.js&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> [color, setColor] = <span class="title function_">useState</span>(<span class="string">&quot;#ff0000&quot;</span>);    <span class="comment">// 解构赋值</span></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleButton1Click</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">setColor</span>(<span class="string">&quot;#00ff00&quot;</span>);</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;点击按钮1事件&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">handleButton2Click</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;点击按钮2事件&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Button</span> <span class="attr">label</span>=<span class="string">&quot;按钮&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;handleButton1Click&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">color</span> &#125;&#125;&gt;</span>这是一段文字<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Button</span> <span class="attr">label</span>=<span class="string">&quot;点我&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;handleButton2Click&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="自定义-Hooks"><a href="#自定义-Hooks" class="headerlink" title="自定义 Hooks"></a>自定义 Hooks</h4><p>Hooks 是 React 的一项新功能提案，可让您在不编写类的情况下使用 state 状态 和其他 React 功能。</p><p>React 推荐 Hooks 均以 use 开头，新建一个 useColorSwitch.js 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useState &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">useColorSwtich</span>(<span class="params">color1 = <span class="string">&quot;#ff0000&quot;</span>, color2 = <span class="string">&quot;#00ff00&quot;</span></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> [color, setColor] = <span class="title function_">useState</span>(color1);</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">handleButtonClick</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">        <span class="title function_">setColor</span>(color2);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> [color, handleButtonClick];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> useColorSwtich;</span><br></pre></td></tr></table></figure><p>修改 App.js 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./App.css&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Button</span> <span class="keyword">from</span> <span class="string">&#x27;./Button.js&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> useColorSwtich <span class="keyword">from</span> <span class="string">&#x27;./useColorSwitch&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> [color, handleButton1Click] = <span class="title function_">useColorSwtich</span>();</span><br><span class="line">  <span class="keyword">const</span> [color2, handleButton2Click] = <span class="title function_">useColorSwtich</span>(<span class="string">&quot;#0000ff&quot;</span>, <span class="string">&quot;#ff00ff&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Button</span> <span class="attr">onClick</span>=<span class="string">&#123;handleButton1Click&#125;</span> <span class="attr">label</span>=<span class="string">&quot;按钮&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">color</span> &#125;&#125;&gt;</span>这是第一段文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Button</span> <span class="attr">onClick</span>=<span class="string">&#123;handleButton2Click&#125;</span> <span class="attr">label</span>=<span class="string">&quot;点我&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">color:</span> <span class="attr">color2</span> &#125;&#125;&gt;</span>这是第二段文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三、Styled-components-简介与配置"><a href="#三、Styled-components-简介与配置" class="headerlink" title="三、Styled-components 简介与配置"></a>三、Styled-components 简介与配置</h3><p><a href="https://styled-components.com/">Styled-components</a> 是目前 React 样式方案中最受关注的一种，它既具备了 css-in-js 的模块化与参数化优点，又完全使用 CSS 的书写习惯，不会引起额外的学习成本。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add styled-components  <span class="comment"># 安装</span></span><br></pre></td></tr></table></figure><h4 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h4><p><code>src</code> 下新建 <code>theme.js</code> 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="attr">primaryColor</span>: <span class="string">&#x27;#4F9DDE&#x27;</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 index.js 文件中修改：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ThemeProvider</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;styled-components&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> theme <span class="keyword">from</span> <span class="string">&#x27;./theme&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> root = <span class="title class_">ReactDOM</span>.<span class="title function_">createRoot</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;root&#x27;</span>));</span><br><span class="line">root.<span class="title function_">render</span>(</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">React.StrictMode</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">ThemeProvider</span> <span class="attr">theme</span>=<span class="string">&#123;theme&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">App</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">ThemeProvider</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">React.StrictMode</span>&gt;</span></span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>在 Button.js 文件中使用 <code>tagged template literals</code> 给模板字符串传递参数：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> styled <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">StyledButton</span> = styled.<span class="property">div</span><span class="string">`</span></span><br><span class="line"><span class="string">    width: <span class="subst">$&#123;(&#123; width &#125;) =&gt; width || <span class="string">&quot;80px&quot;</span>&#125;</span>;</span></span><br><span class="line"><span class="string">    background-color: <span class="subst">$&#123;(&#123; theme &#125;) =&gt; theme.primaryColor&#125;</span>;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Button</span>(<span class="params">&#123; width, onClick, label, children &#125;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="language-xml"><span class="tag">&lt;<span class="name">StyledButton</span> <span class="attr">width</span>=<span class="string">&#123;width&#125;</span> <span class="attr">onClick</span>=<span class="string">&#123;onClick&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">button</span>&gt;</span>&#123;label&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            &#123;children&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">StyledButton</span>&gt;</span></span></span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>给 Button1 传入 width 属性：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> [color, handleButton1Click] = <span class="title function_">useColorSwtich</span>();</span><br><span class="line">  <span class="keyword">const</span> [color2, handleButton2Click] = <span class="title function_">useColorSwtich</span>(<span class="string">&quot;#0000ff&quot;</span>, <span class="string">&quot;#ff00ff&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Button</span> <span class="attr">width</span>=<span class="string">&quot;120px&quot;</span> <span class="attr">onClick</span>=<span class="string">&#123;handleButton1Click&#125;</span> <span class="attr">label</span>=<span class="string">&quot;按钮&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">color</span> &#125;&#125;&gt;</span>这是一段文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Button</span> <span class="attr">onClick</span>=<span class="string">&#123;handleButton2Click&#125;</span> <span class="attr">label</span>=<span class="string">&quot;点我&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">color:</span> <span class="attr">color2</span> &#125;&#125;&gt;</span>这是第二段文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="四、Storybook-简介与配置"><a href="#四、Storybook-简介与配置" class="headerlink" title="四、Storybook 简介与配置"></a>四、Storybook 简介与配置</h3><p>Storybook 是一个 UI 组件开发管理的工具，以文档形式组织和展示组件，我们可以通过 story 独立创建组件，并且每个组件都有一个独立开发调试环境。Storybook 是运行在主应用程序之外，不依赖于项目，因此我们不必担心开发环境、依赖等问题导致不能开发组件。</p><p>在项目根目录下运行命令进行安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx -p @storybook/cli sb init  <span class="comment"># Add Storybook</span></span><br></pre></td></tr></table></figure><p>使用 <code>yarn</code> 命令启动：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn run storybook</span><br></pre></td></tr></table></figure><p>修改 <code>.storybook</code> 目录下的 Preview.js 文件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span> <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; addDecorator, addParameters &#125; <span class="keyword">from</span> <span class="string">&quot;@storybook/react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ThemeProvider</span> &#125; <span class="keyword">from</span> <span class="string">&quot;styled-components&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> theme <span class="keyword">from</span> <span class="string">&quot;../src/theme&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;story.css&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> decorators = [</span><br><span class="line">  <span class="function">(<span class="params">Story</span>) =&gt;</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">ThemeProvider</span> <span class="attr">theme</span>=<span class="string">&#123;theme&#125;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Story</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">ThemeProvider</span>&gt;</span></span></span><br><span class="line">  ),</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> parameters = &#123;</span><br><span class="line">  <span class="attr">options</span>: &#123;</span><br><span class="line">    <span class="attr">showRoots</span>: <span class="literal">true</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;React 即时通信 UI 实战第二章。React 即时通信 UI 实战为&lt;a href=&quot;https://www.bilibili.com/video/BV1PK4y1b7bY?p=2&amp;amp;spm_id_from=pageDriver&amp;amp;vd_source=0965c74096f788f105780e5d5d0e9ebf&quot;&gt;峰华前端工程师&lt;/a&gt;推出的 React 实战课程，以聊天（即时通信）为原型，构建了一整套的 UI 组件库，课程重点在于 UI 组件的分析和实现，力求打造自用组件库。本章包括创建 React 工程，快速回顾 React 开发要点以及环境配置。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Web前端" scheme="http://blog.zhuangzhihao.top/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="React" scheme="http://blog.zhuangzhihao.top/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>前端开发库 Sass</title>
    <link href="http://blog.zhuangzhihao.top/Sass/"/>
    <id>http://blog.zhuangzhihao.top/Sass/</id>
    <published>2022-08-10T16:00:00.000Z</published>
    <updated>2022-08-14T02:53:54.648Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>freeCodeCamp 前端开发库第三章。Sass，英文全称为 “Syntactically Awesome StyleSheets”，是对 CSS 的扩展。它添加了一些基础 CSS 中不具有的新特性。Sass 简化了 CSS，这让维护项目中的样式表变得更容易。在这个 Sass 课程中，学习如何将数据存储在变量中、嵌套 CSS、创建可重用的样式、为样式添加逻辑和循环等等。</p></blockquote><span id="more"></span><h3 id="一、用-Sass-变量存储数据"><a href="#一、用-Sass-变量存储数据" class="headerlink" title="一、用 Sass 变量存储数据"></a>一、用 Sass 变量存储数据</h3><p>Sass 不同于 CSS 的一个特点是它允许使用变量。 可以在 Sass 中声明变量，并为它赋值，就像在 JavaScript 中一样。 在 Sass 中，变量以 <code>$</code> 开头的，后跟变量名：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$main-fonts</span>: Arial, sans-serif;</span><br><span class="line"><span class="variable">$headings-color</span>: green;</span><br></pre></td></tr></table></figure><p>并使用变量：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="variable">$main-fonts</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="variable">$headings-color</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当需要把多个元素设置成相同颜色时，变量就会很有用。 一旦需要更改颜色，只需要改变这个变量的值就好。</p><h3 id="二、用-Sass-嵌套-CSS"><a href="#二、用-Sass-嵌套-CSS" class="headerlink" title="二、用 Sass 嵌套 CSS"></a>二、用 Sass 嵌套 CSS</h3><p>Sass 允许 CSS 规则的嵌套，这在组织样式表的时候会很有用，对于一个大型项目，CSS 规则会很复杂，这时引入嵌套功能（即在对应的父元素中写子元素的样式）可以有效地简化代码：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">nav</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: red;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">li</span> &#123;</span><br><span class="line">      <span class="attribute">display</span>: inline-block;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三、-指令"><a href="#三、-指令" class="headerlink" title="三、@ 指令"></a>三、@ 指令</h3><h4 id="用-Mixins-创建可重用-CSS"><a href="#用-Mixins-创建可重用-CSS" class="headerlink" title="用 Mixins 创建可重用 CSS"></a>用 Mixins 创建可重用 CSS</h4><p>在 Sass 中，mixin 是一组 CSS 声明，可以在整个样式表中重复使用。CSS 的新功能需要一段时间适配后，所有浏览器后才能完全使用。 随着浏览器的不断升级，使用这些 CSS 规则时可能需要添加浏览器前缀。 考虑 <code>box-shadow</code>：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  -webkit-<span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">4px</span> <span class="number">#fff</span>;</span><br><span class="line">  -moz-<span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">4px</span> <span class="number">#fff</span>;</span><br><span class="line">  -ms-<span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">4px</span> <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">4px</span> <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对于所有具有 <code>box-shadow</code> 属性的元素重写此规则，或者更改每个值以测试不同的效果，需要花费大量的精力。 Mixins 就像 CSS 的函数。 以下是一个例子：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@mixin</span> box-shadow(<span class="variable">$x</span>, <span class="variable">$y</span>, <span class="variable">$blur</span>, <span class="variable">$c</span>)&#123; </span><br><span class="line">  -webkit-<span class="attribute">box-shadow</span>: <span class="variable">$x</span> <span class="variable">$y</span> <span class="variable">$blur</span> <span class="variable">$c</span>;</span><br><span class="line">  -moz-<span class="attribute">box-shadow</span>: <span class="variable">$x</span> <span class="variable">$y</span> <span class="variable">$blur</span> <span class="variable">$c</span>;</span><br><span class="line">  -ms-<span class="attribute">box-shadow</span>: <span class="variable">$x</span> <span class="variable">$y</span> <span class="variable">$blur</span> <span class="variable">$c</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="variable">$x</span> <span class="variable">$y</span> <span class="variable">$blur</span> <span class="variable">$c</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>定义以 <code>@mixin</code> 开头，后跟自定义名称。 参数（<code>$x</code>，<code>$y</code>，<code>$blur</code>，以及上例中的 <code>$c</code> ）是可选的。 现在在需要 <code>box-shadow</code> 规则的地方，只需一行 mixin 调用而无需添加所有的浏览器前缀。 mixin 可以通过 <code>@include</code> 指令调用。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="keyword">@include</span> box-shadow(<span class="number">0px</span>, <span class="number">0px</span>, <span class="number">4px</span>, <span class="number">#fff</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="使用-if-和-else-为样式添加逻辑"><a href="#使用-if-和-else-为样式添加逻辑" class="headerlink" title="使用 @if 和 @else 为样式添加逻辑"></a>使用 @if 和 @else 为样式添加逻辑</h4><p>Sass 中的 <code>@if</code> 指令对于测试特定情况非常有用——它的工作方式与 JavaScript 中的 <code>if</code> 语句类似。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@mixin</span> make-bold(<span class="variable">$bool</span>) &#123;</span><br><span class="line">  <span class="keyword">@if</span> <span class="variable">$bool</span> == true &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>类似 JavaScript，可以在 Sass 中使用 <code>@else if</code> 和 <code>@else</code> 测试更多条件：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@mixin</span> text-effect(<span class="variable">$val</span>) &#123;</span><br><span class="line">  <span class="keyword">@if</span> <span class="variable">$val</span> == danger &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">@else</span> if <span class="variable">$val</span> == alert &#123;</span><br><span class="line">    <span class="attribute">color</span>: yellow;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">@else</span> if <span class="variable">$val</span> == success &#123;</span><br><span class="line">    <span class="attribute">color</span>: green;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">@else</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: black;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="使用-for-创建一个-Sass-循环"><a href="#使用-for-创建一个-Sass-循环" class="headerlink" title="使用 @for 创建一个 Sass 循环"></a>使用 @for 创建一个 Sass 循环</h4><p>可以在 Sass 中使用 <code>@for</code> 循环添加样式，它的用法和 JavaScript 中的 <code>for</code> 循环类似。<code>@for</code> 以两种方式使用：“开始 through 结束” 或 “开始 to 结束”。 主要区别在于“开始 to 结束”不包括结束数字，而“开始 through 结束”包括结束号码。</p><p>这是一个开始 through 结束的示例：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@for</span> <span class="variable">$i</span> from <span class="number">1</span> through <span class="number">12</span> &#123;</span><br><span class="line">  <span class="selector-class">.col-</span>#&#123;<span class="variable">$i</span>&#125; &#123; <span class="attribute">width</span>: <span class="number">100%</span>/<span class="number">12</span> * <span class="variable">$i</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>#&#123;$i&#125;</code> 部分是将变量（<code>i</code>）与文本组合成字符串的语法。 当 Sass 文件转换为 CSS 时，它看起来像这样：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.col-1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">8.33333%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.col-2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">16.66667%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.col-12</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是创建网格布局的有效方法。 现在，有了 12 个可用作 CSS class 的列宽选项。</p><h4 id="使用-each-遍历列表中的项目"><a href="#使用-each-遍历列表中的项目" class="headerlink" title="使用 @each 遍历列表中的项目"></a>使用 @each 遍历列表中的项目</h4><p>Sass 还提供 <code>@each</code> 指令，该指令循环遍历列表或映射中的每个项目。 在每次迭代时，变量将从列表或映射分配给当前值。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@each</span> <span class="variable">$color</span> in blue, red, green &#123;</span><br><span class="line">  .#&#123;<span class="variable">$color</span>&#125;-text &#123;<span class="attribute">color</span>: <span class="variable">$color</span>;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>map 的语法略有不同。 这是一个示例：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$colors</span>: (color1: blue, color2: red, color3: green);</span><br><span class="line"></span><br><span class="line"><span class="keyword">@each</span> <span class="variable">$key</span>, <span class="variable">$color</span> in <span class="variable">$colors</span> &#123;</span><br><span class="line">  .#&#123;<span class="variable">$color</span>&#125;-text &#123;<span class="attribute">color</span>: <span class="variable">$color</span>;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>请注意，需要用 <code>$key</code> 变量来引用 map 中的键。 否则，编译后的 CSS 将包含 <code>color1</code>，<code>color2</code>…… 以上两个代码示例都转换为以下 CSS：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.blue-text</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: blue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.red-text</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.green-text</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="使用-while-循环创建样式"><a href="#使用-while-循环创建样式" class="headerlink" title="使用 @while 循环创建样式"></a>使用 @while 循环创建样式</h4><p>Sass 中的 <code>@while</code> 指令与 JavaScript 中的 <code>while</code> 类似。 只要满足条件，它就会一直创建 CSS 代码。<code>@for</code> 挑战提供了一个创建简单网格系统的示例。 用 <code>@while</code> 也可以实现。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$x</span>: <span class="number">1</span>;</span><br><span class="line"><span class="keyword">@while</span> <span class="variable">$x</span> &lt; <span class="number">13</span> &#123;</span><br><span class="line">  <span class="selector-class">.col-</span>#&#123;<span class="variable">$x</span>&#125; &#123; <span class="attribute">width</span>: <span class="number">100%</span>/<span class="number">12</span> * <span class="variable">$x</span>;&#125;</span><br><span class="line">  <span class="variable">$x</span>: <span class="variable">$x</span> + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先，定义变量 <code>$x</code> 并将其设置为 1。 接下来，使用 <code>@while</code> 指令，<em>while</em> <code>$x</code> 小于 13 时创建网格系统 。 在设置 <code>width</code> 的 CSS 规则后，<code>$x</code> 增加 1 以避免无限循环。</p><h3 id="四、用-Partials-将样式分成小块"><a href="#四、用-Partials-将样式分成小块" class="headerlink" title="四、用 Partials 将样式分成小块"></a>四、用 Partials 将样式分成小块</h3><p>Sass 中的 Partials 是包含 CSS 代码段的单独的文件。 这些片段可以导入其它 Sass 文件使用。 可以把类似代码放到模块中，以保持代码结构规整且易于管理。</p><p>partials 的名称以下划线（<code>_</code>）字符开头，这样 Sass 就知道它是 CSS 的一小部分，而不会将其转换为 CSS 文件。 此外，Sass 文件以 <code>.scss</code> 文件扩展名结尾。 要将 partial 中的代码放入另一个 Sass 文件中，使用 <code>@import</code> 指令。</p><p>例如，如果所有 mixins 都保存在名为 “_mixins.scss” 的 partial 中，并且在 “main.scss” 文件中需要它们，下面是使用方法：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@import</span> <span class="string">&#x27;mixins&#x27;</span></span><br></pre></td></tr></table></figure><p>请注意，<code>import</code> 语句中不需要下划线——Sass 知道它是 partial。 将 partial 导入文件后，可以使用所有变量、mixins 和其它代码。</p><h3 id="五、将一组-CSS-样式扩展到另一个元素"><a href="#五、将一组-CSS-样式扩展到另一个元素" class="headerlink" title="五、将一组 CSS 样式扩展到另一个元素"></a>五、将一组 CSS 样式扩展到另一个元素</h3><p>Sass 有一个名为 <code>extend</code> 的功能，可以很容易地从一个元素中借用 CSS 规则并在另一个元素上重用它们。</p><p>例如，下面的 CSS 规则块设置了 <code>.panel</code> class 的样式。 它有 <code>background-color</code>，<code>height</code> 和 <code>border</code>。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.panel</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: red;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">70px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">2px</span> solid green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在需要另一个名为 <code>.big-panel</code> 的面板。 它具有与 <code>.panel</code> 相同的基本属性，但还需要 <code>width</code> 和 <code>font-size</code>。 可以从 <code>.panel</code> 复制并粘贴初始 CSS 规则，但是当添加更多类型的面板时，代码会变得重复。 <code>extend</code> 指令是一种重用为一个元素编写的规则的简单方法，可以为另一个元素重用并添加更多规则：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.big-panel</span>&#123;</span><br><span class="line">  <span class="keyword">@extend</span> .panel;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">2em</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>除了新样式之外，<code>.big-panel</code> 将具有与 <code>.panel</code> 相同的属性。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;freeCodeCamp 前端开发库第三章。Sass，英文全称为 “Syntactically Awesome StyleSheets”，是对 CSS 的扩展。它添加了一些基础 CSS 中不具有的新特性。Sass 简化了 CSS，这让维护项目中的样式表变得更容易。在这个 Sass 课程中，学习如何将数据存储在变量中、嵌套 CSS、创建可重用的样式、为样式添加逻辑和循环等等。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Web前端" scheme="http://blog.zhuangzhihao.top/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>前端开发库 jQuery</title>
    <link href="http://blog.zhuangzhihao.top/jQuery/"/>
    <id>http://blog.zhuangzhihao.top/jQuery/</id>
    <published>2022-08-05T16:00:00.000Z</published>
    <updated>2022-08-14T02:53:54.649Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>freeCodeCamp 前端开发库第二章。jQuery 曾是开发者们最常用的 JavaScript 库之一。在 jQuery 于 2006 年发布时，各种常用浏览器处理 JavaScript 的方式都略有不同。jQuery 简化了编写客户端 JavaScript 的过程，并确保代码在所有浏览器中以同样的方式运行。在 jQuery 课程中，学习如何使用 jQuery 选择、移除、克隆和修改页面上的不同元素。</p></blockquote><span id="more"></span><h3 id="一、jQuery-选择器"><a href="#一、jQuery-选择器" class="headerlink" title="一、jQuery 选择器"></a>一、jQuery 选择器</h3><p>在使用 jQuery 之前，需要在 HTML 页面后台引入 jQuery 库和 Animate.css 库，而且 <code>script</code> 标签中添加代码 <code>$(document).ready(function() &#123;</code>。 然后在后面（仍在该 <code>script</code> 标签内）用 <code>&#125;);</code> 闭合它：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/animate.css/4.1.1/animate.compat.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>    </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  $(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>所有的 jQuery 函数都以 <code>$</code> 开头，这个符号通常被称为美元符号（dollar sign operator）或 bling。jQuery 通常选取并操作带有选择器（selector）的 HTML 标签，jQuery 的 <code>.addClass()</code> 方法用来给标签添加类：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    $(<span class="string">&quot;button&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;animated bounce&quot;</span>);  <span class="comment">//给 button 元素添加跳跃效果</span></span><br><span class="line">  $(<span class="string">&quot;.text-primary&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;animated shake&quot;</span>);  <span class="comment">//使所有类为 text-primary 的标签抖动</span></span><br><span class="line">  $(<span class="string">&quot;#target6&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;animated fadeOut&quot;</span>);  <span class="comment">//使 id 为 target6 的 button 标签淡出</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>和用 jQuery 的 <code>addClass()</code> 方法给标签添加类一样，也可以利用 jQuery 的 <code>removeClass()</code> 方法移除它们：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;#target2&quot;</span>).<span class="title function_">removeClass</span>(<span class="string">&quot;btn-default&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="二、jQuery-更改元素"><a href="#二、jQuery-更改元素" class="headerlink" title="二、jQuery 更改元素"></a>二、jQuery 更改元素</h3><p>jQuery 有一个 <code>.css()</code> 方法，能改变标签的 CSS：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;#target1&quot;</span>).<span class="title function_">css</span>(<span class="string">&quot;color&quot;</span>, <span class="string">&quot;blue&quot;</span>);  <span class="comment">//把颜色变蓝</span></span><br></pre></td></tr></table></figure><p>还能用 jQuery 改变 HTML 标签的非 CSS 属性， 例如：禁用按钮。当禁用按钮时，它将变成灰色并无法点击。jQuery 有一个 <code>.prop()</code> 方法，可以用其调整标签的属性：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;button&quot;</span>).<span class="title function_">prop</span>(<span class="string">&quot;disabled&quot;</span>, <span class="literal">true</span>);  <span class="comment">//禁用所有的按钮</span></span><br></pre></td></tr></table></figure><p>可以通过 jQuery 改变元素开始和结束标签之间的文本。 甚至改变 HTML 标签。jQuery 有一个 <code>.html()</code> 函数，能用其在标签里添加 HTML 标签和文本， 函数提供的内容将完全替换之前标签的内容：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;h3&quot;</span>).<span class="title function_">html</span>(<span class="string">&quot;&lt;em&gt;jQuery Playground&lt;/em&gt;&quot;</span>);  <span class="comment">//重写并强调标题文本</span></span><br></pre></td></tr></table></figure><p>jQuery 还有一个类似的函数 <code>.text()</code>，可以在不添加标签的前提下改变标签内的文本。 换句话说，这个函数不会评估传递给它的任何 HTML 标记，而是将其视为要替换现有内容的文本：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;#target4&quot;</span>).<span class="title function_">text</span>(<span class="string">&quot;&lt;em&gt;#target4&lt;/em&gt;&quot;</span>)   <span class="comment">//将文本换为&lt;em&gt;#target4&lt;/em&gt;</span></span><br></pre></td></tr></table></figure><p>jQuery 有一个 <code>.remove()</code> 方法，能完全移除 HTML 标签：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;#target4&quot;</span>).<span class="title function_">remove</span>();  <span class="comment">//从页面移除 #target4 元素</span></span><br></pre></td></tr></table></figure><p>jQuery 有一个 <code>appendTo()</code> 方法，可以选取 HTML 标签并将其添加到另一个标签里面：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;#target4&quot;</span>).<span class="title function_">appendTo</span>(<span class="string">&quot;#left-well&quot;</span>);  <span class="comment">//把 target4 从 right well 移到 left well</span></span><br></pre></td></tr></table></figure><p>jQuery 有一个 <code>clone()</code> 方法，可以复制标签：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;#target2&quot;</span>).<span class="title function_">clone</span>().<span class="title function_">appendTo</span>(<span class="string">&quot;#right-well&quot;</span>);  <span class="comment">//把 target2 从 left-well 复制到 right-well</span></span><br></pre></td></tr></table></figure><p>是否注意到这两个 jQuery 函数连在一起了？ 这被称为链式调用（function chaining），是一种用 jQuery 实现效果的简便方法。</p><p>每个 HTML 标签都默认 <code>inherits</code>（继承）其 <code>parent</code>（父标签）的 CSS 属性。jQuery 有一个 <code>parent()</code> 方法，可以访问被选取标签的父标签：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;#left-well&quot;</span>).<span class="title function_">parent</span>().<span class="title function_">css</span>(<span class="string">&quot;background-color&quot;</span>, <span class="string">&quot;blue&quot;</span>);  <span class="comment">//使用 parent() 方法把 left-well 标签的父标签背景色设置成蓝色（blue）</span></span><br></pre></td></tr></table></figure><p>把 HTML 标签放到另一个级别的标签里，这些 HTML 标签被称为该标签的子标签（children element）。jQuery 有一个 <code>children()</code> 方法，可以访问被选取标签的子标签：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;#left-well&quot;</span>).<span class="title function_">children</span>().<span class="title function_">css</span>(<span class="string">&quot;color&quot;</span>, <span class="string">&quot;blue&quot;</span>);  <span class="comment">//用 children() 方法把 left-well 标签的子标签的颜色设置成 blue（蓝色）  </span></span><br></pre></td></tr></table></figure><p>jQuery 可以用 CSS 选择器（CSS Selectors）选取标签。 <code>target:nth-child(n)</code> CSS 选择器可以选取指定 class 或者元素类型的的第 n 个标签：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;.target:nth-child(3)&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;animated bounce&quot;</span>);  <span class="comment">//给每个区域（well）的第 3 个标签设置弹跳（bounce）动画效果</span></span><br></pre></td></tr></table></figure><p>也可以用基于位置的奇 <code>:odd</code> 和偶 <code>:even</code> 选择器选取标签。注意，jQuery 是零索引（zero-indexed）的，这意味着第 1 个标签的位置编号是 0。 这有点混乱和反常——<code>:odd</code> 表示选择第 2 个标签（位置编号 1），第 4 个标签（位置编号 3）……等等，以此类推：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;.target:odd&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;animated shake&quot;</span>);  <span class="comment">//选取所有 target class 元素的奇数元素并设置 shake 效果</span></span><br></pre></td></tr></table></figure><p>jQuery 也能选取 <code>body</code> 标签：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;body&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;animated fadeOut&quot;</span>);  <span class="comment">//这是使整个 body 淡出的代码</span></span><br></pre></td></tr></table></figure><h3 id="三、页面展示"><a href="#三、页面展示" class="headerlink" title="三、页面展示"></a>三、页面展示</h3><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="https://free-code-camp-demo.vercel.app/前端开发库/jQuery游乐场/index.html" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"></iframe></div>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;freeCodeCamp 前端开发库第二章。jQuery 曾是开发者们最常用的 JavaScript 库之一。在 jQuery 于 2006 年发布时，各种常用浏览器处理 JavaScript 的方式都略有不同。jQuery 简化了编写客户端 JavaScript 的过程，并确保代码在所有浏览器中以同样的方式运行。在 jQuery 课程中，学习如何使用 jQuery 选择、移除、克隆和修改页面上的不同元素。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Web前端" scheme="http://blog.zhuangzhihao.top/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="jQuery" scheme="http://blog.zhuangzhihao.top/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>前端开发库 Bootstrap</title>
    <link href="http://blog.zhuangzhihao.top/Bootstrap/"/>
    <id>http://blog.zhuangzhihao.top/Bootstrap/</id>
    <published>2022-08-03T16:00:00.000Z</published>
    <updated>2022-08-14T02:53:54.636Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>freeCodeCamp 前端开发库第一章。Bootstrap 一个是用于设计响应性网页和应用程序的前端框架。它对网页开发采用移动优先的方法，具有预定义的 CSS 样式和 class，以及一些 JavaScript 功能。在 Bootstrap 课程中，学习如何使用 Bootstrap 来构建响应式网页，并使用它的 class 来设置按钮、图像、表格、导航和其他常见元素的样式。</p></blockquote><span id="more"></span><h3 id="一、使用-Bootstrap-Fluid-容器实现响应式设计"><a href="#一、使用-Bootstrap-Fluid-容器实现响应式设计" class="headerlink" title="一、使用 Bootstrap Fluid 容器实现响应式设计"></a>一、使用 Bootstrap Fluid 容器实现响应式设计</h3><p>任何 Web 应用，都可以通过添加如下代码到 HTML 顶部来引入 Bootstrap：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>将所有 HTML（ <code>link</code> 标签和 <code>style</code> 元素除外）嵌套在带有 <code>container-fluid</code> class 的 <code>div</code> 元素里面。</p><p>通过 Bootstrap，我们仅仅只需要为 image 标签上设置 class 属性为 <code>img-responsive</code> ， 就可以让它完美地适应你的页面的宽度了。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container-fluid&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;img-responsive center-block&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.freecodecamp.org/curriculum/cat-photo-app/running-cats.jpg&quot;</span> /&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以使用 Bootstrap 将顶部的元素居中来美化页面。 只需要将 <code>h2</code> 元素的 class 属性设置为 <code>text-center</code> 就可以实现：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;red-text text-center&quot;</span>&gt;</span>your text<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="二、Bootstrap-按钮"><a href="#二、Bootstrap-按钮" class="headerlink" title="二、Bootstrap 按钮"></a>二、Bootstrap 按钮</h3><p>Bootstrap 的 <code>button</code> 元素有着独有的、比默认 HTML 按钮更好的样式风格：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-block btn-default&quot;</span>&gt;</span>Like<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-block btn-primary&quot;</span>&gt;</span>Like<span class="tag">&lt;/<span class="name">button</span>&gt;</span> </span><br><span class="line"><span class="comment">&lt;!--btn-primary class 的颜色是应用的主要颜色。 这样 “突出显示” 是引导用户按部就班进行操作的有效办法。--&gt;</span></span><br></pre></td></tr></table></figure><p>Bootstrap 有着丰富的预定义按钮颜色。 浅蓝色的 <code>btn-info</code> class 通常用在备选操作上，红色 <code>btn-danger</code> class 用来提醒用户此行为具有破坏性：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-block btn-info&quot;</span>&gt;</span>Info<span class="tag">&lt;/<span class="name">button</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-block btn-danger&quot;</span>&gt;</span>Delete<span class="tag">&lt;/<span class="name">button</span>&gt;</span> </span><br></pre></td></tr></table></figure><h3 id="三、使用-Bootstrap-Grid-并排放置元素"><a href="#三、使用-Bootstrap-Grid-并排放置元素" class="headerlink" title="三、使用 Bootstrap Grid 并排放置元素"></a>三、使用 Bootstrap Grid 并排放置元素</h3><p>Bootstrap 具有一套 12 列的响应式栅格系统，可以轻松的将多个元素放入一行并指定它们的相对宽度。 Bootstrap 的大部分 class 属性都可以应用在 <code>div</code> 元素上。</p><p>拿 Bootstrap 的 <code>col-md-*</code> class 来说。 在这里， <code>md</code> 表示 medium （中等的）， 而 <code>*</code> 是一个数字，说明了这个元素占有多少个列宽度。 这个例子就是指定了中等大小屏幕（例如笔记本电脑）下元素所占的列宽度。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-4&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-block btn-primary&quot;</span>&gt;</span>Like<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-4&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-block btn-info&quot;</span>&gt;</span>Info<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-4&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-block btn-danger&quot;</span>&gt;</span>Delete<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--使用 col-xs-* ， 其中 xs 是 extra small 的缩写 (比如窄屏手机屏幕)， * 是填写的数字，代表一行中的元素该占多少列宽。--&gt;</span></span><br></pre></td></tr></table></figure><h3 id="四、使用-Bootstrap-替代自定义样式"><a href="#四、使用-Bootstrap-替代自定义样式" class="headerlink" title="四、使用 Bootstrap 替代自定义样式"></a>四、使用 Bootstrap 替代自定义样式</h3><p>可以使用 span 标签来创建行内元素：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Top 3 things cats <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;text-danger&quot;</span>&gt;</span>hate:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>由于 Bootstrap 使用了响应式栅格系统，可以很方便的把元素放到一行以及指定元素的相对宽度。 大部分的 Bootstrap 的 class 都能用在 <code>div</code> 元素上：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-8&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;text-primary text-center&quot;</span>&gt;</span>CatPhotoApp<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-4&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;img-responsive thick-green-border&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.freecodecamp.org/curriculum/cat-photo-app/relaxing-cat.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;A cute orange cat lying on its back.&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Font Awesome 是一个非常便利的图标库。 我们可以通过 webfont 或矢量图的方式来使用这些图标：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://use.fontawesome.com/releases/v5.8.1/css/all.css&quot;</span> <span class="attr">integrity</span>=<span class="string">&quot;sha384-50oBUHEmvpQ+1lW4y57PTFmhCaXp0ML5d60M1M7uH2+nqUivzIebhndOJK28anvf&quot;</span> <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-block btn-primary&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fas fa-thumbs-up&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>Like<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Bootstrap 的 <code>col-xs-*</code> class 也可以用在 <code>form</code> 元素上，这样就可以在不关心屏幕大小的情况下，将的单选按钮均匀的平铺在页面上：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;https://freecatphotoapp.com/submit-cat-photo&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-6&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;indoor-outdoor&quot;</span>&gt;</span> Indoor<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-6&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;indoor-outdoor&quot;</span>&gt;</span> Outdoor<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>所有文本输入类的元素如 <code>&lt;input&gt;</code>，<code>&lt;textarea&gt;</code> 和 <code>&lt;select&gt;</code> 只要设置 <code>.form-control</code> class 就会占满100%的宽度：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;cat photo URL&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-paper-plane&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>Submit<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Bootstrap 有一个叫作 <code>well</code> 的 class，作用是使界面更具层次感：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-6&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;well&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>并不是所有 class 属性都需要有对应的 CSS 样式。 有时候我们设置 <code>target</code> class 只是为了更方便地在 jQuery 中选中这些元素，使用 jQuery 时，修改 HTML 元素时并不需要直接修改 HTML 代码。：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default target&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>除了可以给元素添加 class 属性，我们还可以给元素设置 <code>id</code> 属性：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;well&quot;</span> <span class="attr">id</span>=<span class="string">&quot;center-well&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="五、页面展示"><a href="#五、页面展示" class="headerlink" title="五、页面展示"></a>五、页面展示</h3><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="https://free-code-camp-demo.vercel.app/前端开发库/Bootstrap猫咪相册/index.html" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"></iframe></div>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;freeCodeCamp 前端开发库第一章。Bootstrap 一个是用于设计响应性网页和应用程序的前端框架。它对网页开发采用移动优先的方法，具有预定义的 CSS 样式和 class，以及一些 JavaScript 功能。在 Bootstrap 课程中，学习如何使用 Bootstrap 来构建响应式网页，并使用它的 class 来设置按钮、图像、表格、导航和其他常见元素的样式。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Web前端" scheme="http://blog.zhuangzhihao.top/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="Bootstrap" scheme="http://blog.zhuangzhihao.top/tags/Bootstrap/"/>
    
  </entry>
  
  <entry>
    <title>二叉排序树</title>
    <link href="http://blog.zhuangzhihao.top/%E4%BA%8C%E5%8F%89%E6%8E%92%E5%BA%8F%E6%A0%91/"/>
    <id>http://blog.zhuangzhihao.top/%E4%BA%8C%E5%8F%89%E6%8E%92%E5%BA%8F%E6%A0%91/</id>
    <published>2022-07-26T16:00:00.000Z</published>
    <updated>2022-08-14T02:53:54.649Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>二叉排序树（也称二叉查找树）或者是一棵空树，或者是具有下列特性的二叉树：1）若左子树非空，则左子树上所有结点的值均小于根结点的值。2）若右子树非空，则右子树上所有结点的值均大于根结点的值。3）左、右子树也分别是一棵二叉排序树。</p></blockquote><span id="more"></span><h3 id="一、二叉排序树的结构"><a href="#一、二叉排序树的结构" class="headerlink" title="一、二叉排序树的结构"></a>一、二叉排序树的结构</h3><blockquote><p><a href="https:/www.cs.usfca.edu/-galles/Visualization/Algorithms.html">网站演示</a></p></blockquote><p>树结点数据结构：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> KeyType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">BSTNode</span>&#123;</span><br><span class="line">KeyType key;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">BSTNode</span> *lchild,*rchild;</span><br><span class="line">&#125;BSTNode,*BiTree;</span><br></pre></td></tr></table></figure><p>二叉排序树的创建，中序遍历，查找，删除：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    BiTree T;</span><br><span class="line">    BiTree parent;<span class="comment">//存储父亲结点的地址值</span></span><br><span class="line">    BiTree search;</span><br><span class="line">    KeyType str[]=&#123;<span class="number">54</span>,<span class="number">20</span>,<span class="number">66</span>,<span class="number">40</span>,<span class="number">28</span>,<span class="number">79</span>,<span class="number">58</span>&#125;;<span class="comment">//将要进入二叉排序树的元素值</span></span><br><span class="line">    <span class="built_in">Creat_BST</span>(T,str,<span class="number">7</span>);</span><br><span class="line">    <span class="built_in">InOrder</span>(T);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    search=<span class="built_in">BST_Search</span>(T,<span class="number">40</span>,parent);</span><br><span class="line">    <span class="keyword">if</span>(search)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;找到对应结点，值=%d\n&quot;</span>,search-&gt;key);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;未找到对应结点\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">DeleteNode</span>(T,<span class="number">66</span>);</span><br><span class="line">    <span class="built_in">InOrder</span>(T);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二、二叉排序树的操作"><a href="#二、二叉排序树的操作" class="headerlink" title="二、二叉排序树的操作"></a>二、二叉排序树的操作</h3><p>创建二叉排序树：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">BST_Insert</span><span class="params">(BiTree &amp;T,KeyType k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="literal">NULL</span>==T)</span><br><span class="line">    &#123;<span class="comment">//为新节点申请空间</span></span><br><span class="line">        T=(BiTree)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(BSTNode));</span><br><span class="line">        T-&gt;key=k;</span><br><span class="line">        T-&gt;lchild=T-&gt;rchild=<span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;<span class="comment">//代表插入成功</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(k==T-&gt;key)</span><br><span class="line">       <span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//发现相同元素，就不插入</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(k&lt;T-&gt;key)</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">BST_Insert</span>(T-&gt;lchild,k);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">BST_Insert</span>(T-&gt;rchild,k);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Creat_BST</span><span class="params">(BiTree &amp;T,KeyType str[],<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    T=<span class="literal">NULL</span>;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">BST_Insert</span>(T,str[i]);</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查找结点：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">BSTNode *<span class="title">BST_Search</span><span class="params">(BiTree T,KeyType key,BiTree &amp;p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    p=<span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">while</span>(T!=<span class="literal">NULL</span>&amp;&amp;key!=T-&gt;key)</span><br><span class="line">    &#123;</span><br><span class="line">        p=T;</span><br><span class="line">        <span class="keyword">if</span>(key&lt;T-&gt;key) T=T-&gt;lchild;<span class="comment">//比当前节点小，就左边找</span></span><br><span class="line">        <span class="keyword">else</span> T=T-&gt;rchild;<span class="comment">//比当前节点大，右边去</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> T;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>删除结点：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">DeleteNode</span><span class="params">(BiTree &amp;root,KeyType x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(root == <span class="literal">NULL</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(root-&gt;key&gt;x)&#123;</span><br><span class="line">        <span class="built_in">DeleteNode</span>(root-&gt;lchild,x);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(root-&gt;key&lt;x)&#123;</span><br><span class="line">        <span class="built_in">DeleteNode</span>(root-&gt;rchild,x);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123; <span class="comment">//查找到了删除节点</span></span><br><span class="line">        <span class="keyword">if</span>(root-&gt;lchild == <span class="literal">NULL</span>)&#123; <span class="comment">//左子树为空</span></span><br><span class="line">           BiTree tempNode = root;</span><br><span class="line">           root = root-&gt;rchild;</span><br><span class="line">           <span class="built_in">free</span>(tempNode);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(root-&gt;rchild == <span class="literal">NULL</span>)&#123; <span class="comment">//右子树为空</span></span><br><span class="line">           BiTree tempNode = root;<span class="comment">//临时指针</span></span><br><span class="line">           root = root-&gt;lchild;</span><br><span class="line">           <span class="built_in">free</span>(tempNode);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;  <span class="comment">//左右子树都不为空</span></span><br><span class="line">            <span class="comment">//一般的删除策略是左子树的最大数据 或 右子树的最小数据 代替要删除的节点(这里采用查找左子树最大数据来代替)</span></span><br><span class="line">            BiTree tempNode = root-&gt;lchild;</span><br><span class="line">            <span class="keyword">if</span>(tempNode-&gt;rchild!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">                tempNode = tempNode-&gt;rchild;</span><br><span class="line">            &#125;</span><br><span class="line">            root-&gt;key = tempNode-&gt;key;</span><br><span class="line">            <span class="built_in">DeleteNode</span>(root-&gt;lchild,tempNode-&gt;key);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>中序遍历：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">InOrder</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(T!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">InOrder</span>(T-&gt;lchild);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%3d&quot;</span>,T-&gt;key);</span><br><span class="line">        <span class="built_in">InOrder</span>(T-&gt;rchild);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;二叉排序树（也称二叉查找树）或者是一棵空树，或者是具有下列特性的二叉树：1）若左子树非空，则左子树上所有结点的值均小于根结点的值。2）若右子树非空，则右子树上所有结点的值均大于根结点的值。3）左、右子树也分别是一棵二叉排序树。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="C/C++" scheme="http://blog.zhuangzhihao.top/categories/C-C/"/>
    
    
  </entry>
  
  <entry>
    <title>线索二叉树</title>
    <link href="http://blog.zhuangzhihao.top/%E7%BA%BF%E7%B4%A2%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    <id>http://blog.zhuangzhihao.top/%E7%BA%BF%E7%B4%A2%E4%BA%8C%E5%8F%89%E6%A0%91/</id>
    <published>2022-07-20T16:00:00.000Z</published>
    <updated>2022-08-14T02:53:54.652Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>线索二叉树是一个二叉树通过如下的方法“穿起来”：所有原本为空的右（孩子）指针改为指向该节点在中序序列中的后继，所有原本为空的左（孩子）指针改为指向该节点的中序序列的前驱。</p></blockquote><span id="more"></span><h3 id="一、线索二叉树的结构"><a href="#一、线索二叉树的结构" class="headerlink" title="一、线索二叉树的结构"></a>一、线索二叉树的结构</h3><p>树结点数据结构：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">char</span> ElemType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">ThreadNode</span>&#123;</span><br><span class="line">ElemType data;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">ThreadNode</span> *lchild,*rchild;</span><br><span class="line"><span class="type">int</span> ltag,rtag;</span><br><span class="line">&#125;ThreadNode,*ThreadTree;</span><br></pre></td></tr></table></figure><p>线索二叉树：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ThreadTree T;</span><br><span class="line">    ThreadTree p;</span><br><span class="line">    <span class="built_in">BulidThreadTree</span>(T);</span><br><span class="line">    <span class="built_in">CreateInThread</span>(T);<span class="comment">//构建线索二叉树</span></span><br><span class="line">    p=<span class="built_in">Firstnode</span>(T);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;最左下结点值为 %c\n&quot;</span>,p-&gt;data);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二、线索二叉树的建树"><a href="#二、线索二叉树的建树" class="headerlink" title="二、线索二叉树的建树"></a>二、线索二叉树的建树</h3><p>以中序线索二叉树的建立为例，附设指针 pre 指向刚刚访问过的结点，指针 p 指向正在访问的结点，即 pre 指向 p 的前驱。在中序遍历的过程中，检查 ρ 的左指针是否为空，若为空就将它指向 pre，检查 pre 的右指针是否为空，若为空就将它指向 p：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//手工建线索树，总计5个结点</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">BulidThreadTree</span><span class="params">(ThreadTree &amp;T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ThreadTree arr[<span class="number">5</span>];</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        arr[i]=(ThreadTree)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(ThreadNode));</span><br><span class="line">        <span class="built_in">memset</span>(arr[i],<span class="number">0</span>,<span class="built_in">sizeof</span>(ThreadNode));</span><br><span class="line">        arr[i]-&gt;data=<span class="string">&#x27;A&#x27;</span>+i;</span><br><span class="line">    &#125;</span><br><span class="line">    arr[<span class="number">0</span>]-&gt;lchild=arr[<span class="number">1</span>];</span><br><span class="line">    arr[<span class="number">0</span>]-&gt;rchild=arr[<span class="number">2</span>];</span><br><span class="line">    arr[<span class="number">1</span>]-&gt;rchild=arr[<span class="number">3</span>];</span><br><span class="line">    arr[<span class="number">2</span>]-&gt;lchild=arr[<span class="number">4</span>];</span><br><span class="line">    T=arr[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">InThread</span><span class="params">(ThreadTree &amp;p,ThreadTree &amp;pre)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(p!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">        <span class="built_in">InThread</span>(p-&gt;lchild,pre);<span class="comment">//递归找树的左孩子</span></span><br><span class="line">        <span class="keyword">if</span>(p-&gt;lchild==<span class="literal">NULL</span>)&#123;<span class="comment">//左边为NULL,填写当前结点的前驱</span></span><br><span class="line">            p-&gt;lchild=pre;</span><br><span class="line">            p-&gt;ltag=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(pre!=<span class="literal">NULL</span>&amp;&amp;pre-&gt;rchild==<span class="literal">NULL</span>)&#123;</span><br><span class="line">            <span class="comment">//pre节点右孩子为NULL，就让其指向后继节点，而后继结点刚好就是p</span></span><br><span class="line">            pre-&gt;rchild=p;</span><br><span class="line">            pre-&gt;rtag=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        pre=p;</span><br><span class="line">        <span class="built_in">InThread</span>(p-&gt;rchild,pre);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CreateInThread</span><span class="params">(ThreadTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ThreadTree pre=<span class="literal">NULL</span>;<span class="comment">//使用辅助指针pre</span></span><br><span class="line">    <span class="keyword">if</span>(T!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">        <span class="built_in">InThread</span>(T,pre);</span><br><span class="line">        pre-&gt;rchild=<span class="literal">NULL</span>;</span><br><span class="line">        pre-&gt;rtag=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//中序序列下的第一个结点</span></span><br><span class="line"><span class="function">ThreadNode *<span class="title">Firstnode</span><span class="params">(ThreadNode *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(p-&gt;ltag==<span class="number">0</span>)</span><br><span class="line">      p=p-&gt;lchild;</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//p在中序序列下的后继结点</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;线索二叉树是一个二叉树通过如下的方法“穿起来”：所有原本为空的右（孩子）指针改为指向该节点在中序序列中的后继，所有原本为空的左（孩子）指针改为指向该节点的中序序列的前驱。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="C/C++" scheme="http://blog.zhuangzhihao.top/categories/C-C/"/>
    
    
  </entry>
  
  <entry>
    <title>树与二叉树</title>
    <link href="http://blog.zhuangzhihao.top/%E6%A0%91%E4%B8%8E%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    <id>http://blog.zhuangzhihao.top/%E6%A0%91%E4%B8%8E%E4%BA%8C%E5%8F%89%E6%A0%91/</id>
    <published>2022-07-15T16:00:00.000Z</published>
    <updated>2022-08-14T02:53:54.651Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>树是 n（n ≥ 0）个节点的有限集。当 n = 0 时，称为空树。在任意一棵非空树中应满足：1）有且仅有一个特定的称为根的结点。2）当 n &gt; 1 时，其余节点可分为 m（m &gt; 0）个互不相交的有限集 $T_1,T_2,…, T_m$，其中每个集合本身又是一棵树，并且称为根的子树。</p></blockquote><span id="more"></span><h3 id="一、树和二叉树的结构"><a href="#一、树和二叉树的结构" class="headerlink" title="一、树和二叉树的结构"></a>一、树和二叉树的结构</h3><blockquote><p>数据结构可视化参考：<a href="https://www.cs.usfca.edu/~galles/visualization/Algorithms.html">Data Structure Visualizations</a>。</p></blockquote><p>树作为—种逻辑结构，同时也是一种分层结构，具有以下两个特点：1）树的根结点没有前驱，除根结点外的所有结点有且只有一个前驱。2）树中所有结点可以有零个或多个后继。</p><p>二叉树是另一种树形结构，其特点是每个结点至多只有两棵子树（即二叉树中不存在度大于2的结点），并且二叉树的子树有左右之分，其次序不能任意颠倒。与树相似，二叉树也以递归的形式定义。二叉树是 n（n ≥ 0）个结点的有限集合：①或者为空二叉树，即 n = 0。②或者由一个根结点和两个互不相交的被称为根的左子树和右子树组成。左子树和右子树又分别是一棵二叉树。</p><p>树结点数据结构：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">char</span> BiElemType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">BiTNode</span>&#123;</span><br><span class="line">    BiElemType c;    <span class="comment">//c就是书籍上的data</span></span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">BiTNode</span> *lchild;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">BiTNode</span> *rchild;</span><br><span class="line">&#125;BiTNode,*BiTree;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">tag</span>&#123;</span><br><span class="line">BiTree p;<span class="comment">//树的某一个结点的地址值</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">tag</span> *pnext;</span><br><span class="line">&#125;<span class="type">tag_t</span>,*<span class="type">ptag_t</span>;</span><br></pre></td></tr></table></figure><h3 id="二、二叉树的建树（层次建树）"><a href="#二、二叉树的建树（层次建树）" class="headerlink" title="二、二叉树的建树（层次建树）"></a>二、二叉树的建树（层次建树）</h3><p>层次建树的操作：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    BiTree pnew;</span><br><span class="line">    <span class="type">int</span> i,j,pos;</span><br><span class="line">    <span class="type">char</span> c;</span><br><span class="line">    BiTree tree=<span class="literal">NULL</span>;<span class="comment">//树根</span></span><br><span class="line">    <span class="type">ptag_t</span> phead=<span class="literal">NULL</span>,ptail=<span class="literal">NULL</span>,listpnew=<span class="literal">NULL</span>,pcur=<span class="literal">NULL</span>;<span class="comment">//phead就是队列头，ptail就是队列尾</span></span><br><span class="line">    <span class="comment">//abcdefghij</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;c)!=EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(c==<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        pnew=(BiTree)<span class="built_in">calloc</span>(<span class="number">1</span>,<span class="built_in">sizeof</span>(BiTNode));<span class="comment">//calloc申请空间并对空间进行初始化，赋值为0</span></span><br><span class="line">        pnew-&gt;c=c;<span class="comment">//数据放进去</span></span><br><span class="line">        listpnew=(<span class="type">ptag_t</span>)<span class="built_in">calloc</span>(<span class="number">1</span>,<span class="built_in">sizeof</span>(<span class="type">tag_t</span>));<span class="comment">//给队列结点申请空间</span></span><br><span class="line">        listpnew-&gt;p=pnew;</span><br><span class="line">        <span class="keyword">if</span>(<span class="literal">NULL</span>==tree)</span><br><span class="line">        &#123;</span><br><span class="line">            tree=pnew;<span class="comment">//树的根</span></span><br><span class="line">            phead=listpnew;<span class="comment">//队列头</span></span><br><span class="line">            ptail=listpnew;<span class="comment">//队列尾</span></span><br><span class="line">            pcur=listpnew;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            ptail-&gt;pnext=listpnew;<span class="comment">//新结点放入链表，通过尾插法</span></span><br><span class="line">            ptail=listpnew;<span class="comment">//ptail指向队列尾部</span></span><br><span class="line">        &#125;<span class="comment">//pcur始终指向要插入的结点的位置</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="literal">NULL</span>==pcur-&gt;p-&gt;lchild)<span class="comment">//如何把新结点放入树</span></span><br><span class="line">        &#123;</span><br><span class="line">          pcur-&gt;p-&gt;lchild=pnew;<span class="comment">//把新结点放到要插入结点的左边</span></span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="literal">NULL</span>==pcur-&gt;p-&gt;rchild)</span><br><span class="line">        &#123;</span><br><span class="line">            pcur-&gt;p-&gt;rchild=pnew;<span class="comment">//把新结点放到要插入结点的右边</span></span><br><span class="line">            pcur=pcur-&gt;pnext;<span class="comment">//左右都放了结点后，pcur指向队列的下一个</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;--------前序遍历----------\n&quot;</span>);<span class="comment">//也叫先序遍历，先打印当前结点，打印左孩子，打印右孩子</span></span><br><span class="line">    <span class="built_in">preOrder</span>(tree);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n--------中序遍历------------\n&quot;</span>);<span class="comment">//先打印左孩子，打印父亲，打印右孩子</span></span><br><span class="line">    <span class="built_in">InOrder</span>(tree);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n--------后序遍历------------\n&quot;</span>);<span class="comment">//先打印左孩子，打印右孩子，最后打印父亲</span></span><br><span class="line">    <span class="built_in">PostOrder</span>(tree);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n--------中序遍历非递归------\n&quot;</span>);<span class="comment">//重要性低</span></span><br><span class="line">    <span class="built_in">InOrder2</span>(tree); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n--------层次遍历-----------\n&quot;</span>);</span><br><span class="line">    <span class="built_in">LevelOrder</span>(tree);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h3 id="三、二叉树的遍历"><a href="#三、二叉树的遍历" class="headerlink" title="三、二叉树的遍历"></a>三、二叉树的遍历</h3><p>递归实现：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//abdhiejcfg  前序遍历，前序遍历就是深度优先遍历</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">preOrder</span><span class="params">(BiTree p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(p!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">putchar</span>(p-&gt;c);<span class="comment">//等价于visit函数</span></span><br><span class="line">        <span class="built_in">preOrder</span>(p-&gt;lchild);</span><br><span class="line">        <span class="built_in">preOrder</span>(p-&gt;rchild);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//中序遍历  hdibjeafcg</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">InOrder</span><span class="params">(BiTree p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(p!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">InOrder</span>(p-&gt;lchild);</span><br><span class="line">        <span class="built_in">putchar</span>(p-&gt;c);</span><br><span class="line">        <span class="built_in">InOrder</span>(p-&gt;rchild);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//hidjebfgca  后序遍历</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">PostOrder</span><span class="params">(BiTree p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(p!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">PostOrder</span>(p-&gt;lchild);</span><br><span class="line">        <span class="built_in">PostOrder</span>(p-&gt;rchild);</span><br><span class="line">        <span class="built_in">putchar</span>(p-&gt;c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//中序遍历非递归，非递归执行效率更高，考的概率很低</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">InOrder2</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SqStack S;</span><br><span class="line">    <span class="built_in">InitStack</span>(S);BiTree p=T;</span><br><span class="line">    <span class="keyword">while</span>(p||!<span class="built_in">StackEmpty</span>(S))<span class="comment">//逻辑或||</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(p)</span><br><span class="line">        &#123;<span class="comment">//当一个结点不为空，压栈，并取左孩子</span></span><br><span class="line">            <span class="built_in">Push</span>(S,p);</span><br><span class="line">            p=p-&gt;lchild;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;<span class="comment">//弹出栈中元素并打印，获取打印元素的右结点</span></span><br><span class="line">            <span class="built_in">Pop</span>(S,p);<span class="built_in">putchar</span>(p-&gt;c);</span><br><span class="line">            p=p-&gt;rchild;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//层次遍历,层序遍历，广度优先遍历</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">LevelOrder</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LinkQueue Q;<span class="comment">//辅助队列</span></span><br><span class="line">    <span class="built_in">InitQueue</span>(Q);<span class="comment">//初始化队列</span></span><br><span class="line">    BiTree p;</span><br><span class="line">    <span class="built_in">EnQueue</span>(Q,T);<span class="comment">//树根入队</span></span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">IsEmpty</span>(Q))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">DeQueue</span>(Q,p);<span class="comment">//出队当前结点并打印</span></span><br><span class="line">        <span class="built_in">putchar</span>(p-&gt;c);</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;lchild!=<span class="literal">NULL</span>) <span class="comment">//入队左孩子</span></span><br><span class="line">          <span class="built_in">EnQueue</span>(Q,p-&gt;lchild);</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;rchild!=<span class="literal">NULL</span>)  <span class="comment">//入队右孩子</span></span><br><span class="line">          <span class="built_in">EnQueue</span>(Q,p-&gt;rchild);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上方所用到的栈和队列相关数据结构：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//栈的相关数据结构</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MaxSize 50</span></span><br><span class="line"><span class="keyword">typedef</span> BiTree ElemType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span>&#123;</span><br><span class="line">ElemType data[MaxSize];</span><br><span class="line"><span class="type">int</span> top;</span><br><span class="line">&#125;SqStack;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">InitStack</span><span class="params">(SqStack &amp;S)</span></span>;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">StackEmpty</span><span class="params">(SqStack &amp;S)</span></span>;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">Push</span><span class="params">(SqStack &amp;S,ElemType x)</span></span>;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">Pop</span><span class="params">(SqStack &amp;S,ElemType &amp;x)</span></span>;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">GetTop</span><span class="params">(SqStack &amp;S,ElemType &amp;x)</span></span>;</span><br><span class="line"><span class="comment">//队列的相关数据结构</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">LinkNode</span>&#123;</span><br><span class="line">ElemType data;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">LinkNode</span> *next;</span><br><span class="line">&#125;LinkNode;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span>&#123;</span><br><span class="line">LinkNode *front,*rear;</span><br><span class="line">&#125;LinkQueue;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">InitQueue</span><span class="params">(LinkQueue &amp;Q)</span></span>;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">IsEmpty</span><span class="params">(LinkQueue Q)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">EnQueue</span><span class="params">(LinkQueue &amp;Q,ElemType x)</span></span>;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">DeQueue</span><span class="params">(LinkQueue &amp;Q,ElemType &amp;x)</span></span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;树是 n（n ≥ 0）个节点的有限集。当 n = 0 时，称为空树。在任意一棵非空树中应满足：1）有且仅有一个特定的称为根的结点。2）当 n &amp;gt; 1 时，其余节点可分为 m（m &amp;gt; 0）个互不相交的有限集 $T_1,T_2,…, T_m$，其中每个集合本身又是一棵树，并且称为根的子树。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="C/C++" scheme="http://blog.zhuangzhihao.top/categories/C-C/"/>
    
    
  </entry>
  
  <entry>
    <title>堆栈和队列</title>
    <link href="http://blog.zhuangzhihao.top/%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/"/>
    <id>http://blog.zhuangzhihao.top/%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/</id>
    <published>2022-07-10T16:00:00.000Z</published>
    <updated>2022-08-14T02:53:54.651Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>堆栈（stack）又称为栈或堆叠，是只允许在一端进行插入或删除操作的线性表，遵循先进后出 FILO（First In Last Out）的原则。队列（Queue）简称队，也是一种操作受限的线性表，只允许在表的一端进行插入，而在表的另一端进行删除。向队列中插入元素称为入队或进队，删除元素称为出队或离队。</p></blockquote><span id="more"></span><h3 id="一、栈的基本操作"><a href="#一、栈的基本操作" class="headerlink" title="一、栈的基本操作"></a>一、栈的基本操作</h3><p>栈顶（Top）入栈、出栈：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> MaxSize 50</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElemType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    ElemType data[MaxSize];<span class="comment">//数组</span></span><br><span class="line">    <span class="type">int</span> top;</span><br><span class="line">&#125;SqStack;</span><br></pre></td></tr></table></figure><p>实现栈可以用数组，也可以用链表，我们这里使用数组：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SqStack S;<span class="comment">//先进后出 FILO  LIFO</span></span><br><span class="line">    <span class="type">bool</span> flag;</span><br><span class="line">    ElemType m;<span class="comment">//用来存放拿出的元素</span></span><br><span class="line">    <span class="built_in">InitStack</span>(S);<span class="comment">//初始化</span></span><br><span class="line">    flag=<span class="built_in">StackEmpty</span>(S);</span><br><span class="line">    <span class="keyword">if</span>(flag)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;栈是空的\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">Push</span>(S,<span class="number">3</span>);<span class="comment">//入栈元素3</span></span><br><span class="line">    <span class="built_in">Push</span>(S,<span class="number">4</span>);<span class="comment">//入栈元素4</span></span><br><span class="line">    <span class="built_in">Push</span>(S,<span class="number">5</span>);</span><br><span class="line">    flag=<span class="built_in">GetTop</span>(S,m);<span class="comment">//获取栈顶元素</span></span><br><span class="line">    <span class="keyword">if</span>(flag)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;获取栈顶元素为 %d\n&quot;</span>,m);</span><br><span class="line">    &#125;</span><br><span class="line">    flag=<span class="built_in">Pop</span>(S,m);<span class="comment">//弹出栈顶元素</span></span><br><span class="line">    <span class="keyword">if</span>(flag)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;弹出元素为 %d\n&quot;</span>,m);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>初始化栈：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">InitStack</span><span class="params">(SqStack &amp;S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">S.top=<span class="number">-1</span>;<span class="comment">//代表栈为空</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">StackEmpty</span><span class="params">(SqStack &amp;S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(S.top==<span class="number">-1</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>入栈：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">Push</span><span class="params">(SqStack &amp;S,ElemType x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(S.top==MaxSize<span class="number">-1</span>)<span class="comment">//数组的大小不能改变，避免访问越界</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    S.data[++S.top]=x;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>出栈：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">Pop</span><span class="params">(SqStack &amp;S,ElemType &amp;x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="number">-1</span>==S.top)</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    x=S.data[S.top--];<span class="comment">//后减减，x=S.data[S.top];S.top=S.top-1;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>读取栈顶元素：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">GetTop</span><span class="params">(SqStack &amp;S,ElemType &amp;x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="number">-1</span>==S.top)<span class="comment">//说明栈为空</span></span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    x=S.data[S.top];</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二、循环队列"><a href="#二、循环队列" class="headerlink" title="二、循环队列"></a>二、循环队列</h3><p>队列的特性是先进先出（FIFO），队头（Front）是允许删除的一端，又称队首，队尾（Rear）是允许插入的一端。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> MaxSize 5</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElemType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span>&#123;</span><br><span class="line">    ElemType data[MaxSize];<span class="comment">//数组,存储MaxSize-1个元素</span></span><br><span class="line">    <span class="type">int</span> front,rear;<span class="comment">//队列头 队列尾</span></span><br><span class="line">&#125;SqQueue;</span><br></pre></td></tr></table></figure><p>循环队列的操作：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SqQueue Q;</span><br><span class="line">    <span class="type">bool</span> ret;<span class="comment">//存储返回值</span></span><br><span class="line">    ElemType element;<span class="comment">//存储出队元素</span></span><br><span class="line">    <span class="built_in">InitQueue</span>(Q);</span><br><span class="line">    ret=<span class="built_in">isEmpty</span>(Q);</span><br><span class="line">    <span class="keyword">if</span>(ret)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;队列为空\n&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;队列不为空\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">EnQueue</span>(Q,<span class="number">3</span>);</span><br><span class="line">    <span class="built_in">EnQueue</span>(Q,<span class="number">4</span>);</span><br><span class="line">    <span class="built_in">EnQueue</span>(Q,<span class="number">5</span>);</span><br><span class="line">    ret=<span class="built_in">EnQueue</span>(Q,<span class="number">6</span>);</span><br><span class="line">    ret=<span class="built_in">EnQueue</span>(Q,<span class="number">7</span>);</span><br><span class="line">    <span class="keyword">if</span>(ret)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;入队成功\n&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;入队失败\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ret=<span class="built_in">DeQueue</span>(Q,element);</span><br><span class="line">    <span class="keyword">if</span>(ret)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;出队成功,元素值为 %d\n&quot;</span>,element);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;出队失败\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ret=<span class="built_in">DeQueue</span>(Q,element);</span><br><span class="line">    <span class="keyword">if</span>(ret)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;出队成功,元素值为 %d\n&quot;</span>,element);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;出队失败\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ret=<span class="built_in">EnQueue</span>(Q,<span class="number">8</span>);</span><br><span class="line">    <span class="keyword">if</span>(ret)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;入队成功\n&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;入队失败\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>初始化队列：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">InitQueue</span><span class="params">(SqQueue &amp;Q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Q.rear=Q.front=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判空</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isEmpty</span><span class="params">(SqQueue &amp;Q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(Q.rear==Q.front)<span class="comment">//不需要为零</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>入队：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">EnQueue</span><span class="params">(SqQueue &amp;Q,ElemType x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>((Q.rear+<span class="number">1</span>)%MaxSize==Q.front) <span class="comment">//判断是否队满</span></span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    Q.data[Q.rear]=x;<span class="comment">//3 4 5 6</span></span><br><span class="line">    Q.rear=(Q.rear+<span class="number">1</span>)%MaxSize;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>出队：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">DeQueue</span><span class="params">(SqQueue &amp;Q,ElemType &amp;x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(Q.rear==Q.front)</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    x=Q.data[Q.front];<span class="comment">//先进先出</span></span><br><span class="line">    Q.front=(Q.front+<span class="number">1</span>)%MaxSize;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三、队列的链式存储"><a href="#三、队列的链式存储" class="headerlink" title="三、队列的链式存储"></a>三、队列的链式存储</h3><p>队列的链式表示称为链队列，它实际上是一个同时带有队头指针和队尾指针的单链表。头指针指向队头结点，尾指针指向队尾结点，即单链表的最后一个结点。</p><p>存储结构相对于原有编号的链表增加了尾指针：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElemType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">LinkNode</span>&#123;</span><br><span class="line">    ElemType data;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">LinkNode</span> *next;</span><br><span class="line">&#125;LinkNode;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span>&#123;</span><br><span class="line">LinkNode *front,*rear;<span class="comment">//链表头 链表尾</span></span><br><span class="line">&#125;LinkQueue;<span class="comment">//先进先出</span></span><br></pre></td></tr></table></figure><p>头部删除法，尾部插入法：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LinkQueue Q;</span><br><span class="line">    <span class="type">bool</span> ret;</span><br><span class="line">    ElemType element;<span class="comment">//存储出队元素</span></span><br><span class="line">    <span class="built_in">InitQueue</span>(Q);</span><br><span class="line">    <span class="built_in">EnQueue</span>(Q,<span class="number">3</span>);</span><br><span class="line">    <span class="built_in">EnQueue</span>(Q,<span class="number">4</span>);</span><br><span class="line">    <span class="built_in">EnQueue</span>(Q,<span class="number">5</span>);</span><br><span class="line">    <span class="built_in">EnQueue</span>(Q,<span class="number">6</span>);</span><br><span class="line">    <span class="built_in">EnQueue</span>(Q,<span class="number">7</span>);</span><br><span class="line">    ret=<span class="built_in">DeQueue</span>(Q,element);</span><br><span class="line">    <span class="keyword">if</span>(ret)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;出队成功,元素值为 %d\n&quot;</span>,element);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;出队失败\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>初始化队列：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">InitQueue</span><span class="params">(LinkQueue &amp;Q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Q.front=Q.rear=(LinkNode*)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(LinkNode));<span class="comment">//头和尾指向同一个结点</span></span><br><span class="line">    Q.front-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">IsEmpty</span><span class="params">(LinkQueue Q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(Q.front==Q.rear)</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>入队，尾部插入法：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">EnQueue</span><span class="params">(LinkQueue &amp;Q,ElemType x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LinkNode *s=(LinkNode *)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(LinkNode));</span><br><span class="line">    s-&gt;data=x;s-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">    Q.rear-&gt;next=s;<span class="comment">//rear始终指向尾部</span></span><br><span class="line">    Q.rear=s;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>出队，头部删除法：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">DeQueue</span><span class="params">(LinkQueue &amp;Q,ElemType &amp;x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(Q.front==Q.rear) <span class="keyword">return</span> <span class="literal">false</span>;<span class="comment">//队列为空</span></span><br><span class="line">    LinkNode *p=Q.front-&gt;next;<span class="comment">//头结点什么都没存，所以头结点的下一个节点才有数据</span></span><br><span class="line">    x=p-&gt;data;</span><br><span class="line">    Q.front-&gt;next=p-&gt;next;<span class="comment">//断链</span></span><br><span class="line">    <span class="keyword">if</span>(Q.rear==p)<span class="comment">//删除的是最后一个元素</span></span><br><span class="line">      Q.rear=Q.front;<span class="comment">//队列置为空</span></span><br><span class="line">    <span class="built_in">free</span>(p);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="四、斐波那契数列"><a href="#四、斐波那契数列" class="headerlink" title="四、斐波那契数列"></a>四、斐波那契数列</h3><p>题目：n 个台阶，每次只能上 1 个台阶，或者 2 个台阶，n 个台阶，有多少种走法？</p><p>题解：Fib 是递归函数，调用自身，$f(n)=f(n-1)+f(n-2)$。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">Fib</span><span class="params">(<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">0</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(n==<span class="number">1</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="keyword">return</span> Fib(n<span class="number">-1</span>)+Fib(n<span class="number">-2</span>);</span><br><span class="line">&#125;</span><br><span class="line">nt <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> num;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;num)!=EOF)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;Fib(%d) = %d\n&quot;</span>,num,Fib(num));</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;堆栈（stack）又称为栈或堆叠，是只允许在一端进行插入或删除操作的线性表，遵循先进后出 FILO（First In Last Out）的原则。队列（Queue）简称队，也是一种操作受限的线性表，只允许在表的一端进行插入，而在表的另一端进行删除。向队列中插入元素称为入队或进队，删除元素称为出队或离队。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="C/C++" scheme="http://blog.zhuangzhihao.top/categories/C-C/"/>
    
    
  </entry>
  
  <entry>
    <title>线性表的链式存储原理及实现</title>
    <link href="http://blog.zhuangzhihao.top/%E7%BA%BF%E6%80%A7%E8%A1%A8%E7%9A%84%E9%93%BE%E5%BC%8F%E5%AD%98%E5%82%A8/"/>
    <id>http://blog.zhuangzhihao.top/%E7%BA%BF%E6%80%A7%E8%A1%A8%E7%9A%84%E9%93%BE%E5%BC%8F%E5%AD%98%E5%82%A8/</id>
    <published>2022-07-08T16:00:00.000Z</published>
    <updated>2022-08-14T02:53:54.652Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>顺序表在插入和删除操作需要移动大量元素。数组的大小不好确定，且存储分配需要一整段连续的存储空间，造成很多碎片。因此在需要经常插入和删除的线性表中，需要通过链式存储方式实现。线性表的链式表示称为链表。</p></blockquote><span id="more"></span><h3 id="一、单链表"><a href="#一、单链表" class="headerlink" title="一、单链表"></a>一、单链表</h3><p>逻辑上相邻的两个元素在物理位置上不相邻。</p><p>单链表结点的定义：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElemType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span> &#123;</span>  <span class="comment">// 单链表结点类型</span></span><br><span class="line">  ElemType data;    <span class="comment">// 数据域</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span> *<span class="title">next</span>;</span>  <span class="comment">// 指向下一个结点 </span></span><br><span class="line">&#125; LNode, *LinkList;  <span class="comment">// LinkList 等价于 struct LNode *</span></span><br></pre></td></tr></table></figure><p>头指针：链表中第一个结点的存储位置，用来标识单链表。</p><p>头结点：在单链表第一个结点之前附加的个结点，为了操作上的方便。</p><p>若链表有头结点，则头指针永远指向头结点，不论链表是否为空，头指针均不为空，头指针是链表的必须元素，他标识一个链表。</p><p>头结点是为了操作的方便而设立的，其数据域一般为空，或者存放链表的长度。有头结点后，对在第一结点前插入和删除第一结点的操作就统一了，不需要频繁重置头指针。但头结点不是必须的。</p><p>优点：</p><ul><li>插入和删除操作不需要移动元素，只需要修改指针。</li><li>不需要大量的连续存储空间。</li></ul><p>缺点：</p><ul><li>单链表附加指针域，也存在浪费存储空间的缺点。</li><li>查找操作时需要从表头开始遍历，依次查找，不能随机存取。</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LinkList L; <span class="comment">// 链表头，是结构体指针类型</span></span><br><span class="line">    LinkList search; <span class="comment">// 用来存储拿到的某一个节点</span></span><br><span class="line">    <span class="comment">// CreatList1(L); // 输入数据可以为3 4 5 6 7 9999，头插法新建链表</span></span><br><span class="line">    <span class="built_in">CreatList2</span>(L); <span class="comment">// 输入数据可以为3 4 5 6 7 9999，尾插法新建链表</span></span><br><span class="line">    <span class="built_in">PrintList</span>(L);  <span class="comment">// 链表打印</span></span><br><span class="line">    search=<span class="built_in">GetElem</span>(L,<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">if</span>(search!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;按序号查找成功\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,search-&gt;data);</span><br><span class="line">    &#125;</span><br><span class="line">    search=<span class="built_in">LocateElem</span>(L,<span class="number">6</span>); <span class="comment">// 按值查询</span></span><br><span class="line">    <span class="keyword">if</span>(search!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;按值查找成功\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,search-&gt;data);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">ListFrontInsert</span>(L,<span class="number">2</span>,<span class="number">99</span>);   <span class="comment">// 新结点插入第i个位置</span></span><br><span class="line">    <span class="built_in">PrintList</span>(L);</span><br><span class="line">    <span class="built_in">ListDelete</span>(L,<span class="number">4</span>);   <span class="comment">// 删除第4个结点</span></span><br><span class="line">    <span class="built_in">PrintList</span>(L);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>头插法新建链表：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LinkList <span class="title">CreatList1</span><span class="params">(LinkList &amp;L)</span> <span class="comment">// list_head_insert</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LNode *s;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    L = (LinkList)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(LNode)); <span class="comment">// 带头结点的链表</span></span><br><span class="line">    L-&gt;next = <span class="literal">NULL</span>; <span class="comment">// L-&gt;data里边没放东西</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x); <span class="comment">// 从标准输入读取数据</span></span><br><span class="line">    <span class="comment">// 3 4 5 6 7 9999</span></span><br><span class="line">    <span class="keyword">while</span> (x != <span class="number">9999</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        s = (LNode *)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(LNode)); <span class="comment">// 申请一个新空间给s，强制类型转换</span></span><br><span class="line">        s-&gt;data = x;<span class="comment">// 把读取到的值，给新空间中的data成员</span></span><br><span class="line">        s-&gt;next = L-&gt;next;<span class="comment">// 让新结点的next指针指向链表的第一个元素（第一个放我们数据的元素）</span></span><br><span class="line">        L-&gt;next = s;<span class="comment">// 让s作为第一个元素</span></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);<span class="comment">// 读取标准输入</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> L;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>尾插法新建链表：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LinkList <span class="title">CreatList2</span><span class="params">(LinkList &amp;L)</span> <span class="comment">// list_tail_insert</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    L = (LinkList)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(LNode)); <span class="comment">// 带头节点的链表</span></span><br><span class="line">    LNode *s, *r = L; <span class="comment">// LinkList s,r=L;也可以，r代表链表表尾结点，指向链表尾部</span></span><br><span class="line">    <span class="comment">// 3 4 5 6 7 9999</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">    <span class="keyword">while</span> (x != <span class="number">9999</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        s = (LNode *)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(LNode));</span><br><span class="line">        s-&gt;data = x;</span><br><span class="line">        r-&gt;next = s; <span class="comment">// 让尾部结点指向新结点</span></span><br><span class="line">        r = s; <span class="comment">// r指向新的表尾结点</span></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">    &#125;</span><br><span class="line">    r-&gt;next = <span class="literal">NULL</span>; <span class="comment">// 尾结点的next指针赋值为NULL</span></span><br><span class="line">    <span class="keyword">return</span> L;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>按序号查找结点值：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LNode *<span class="title">GetElem</span><span class="params">(LinkList L, <span class="type">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> j = <span class="number">1</span>;</span><br><span class="line">    LNode *p = L-&gt;next;</span><br><span class="line">    <span class="keyword">if</span> (i == <span class="number">0</span>)</span><br><span class="line">      <span class="keyword">return</span> L;</span><br><span class="line">    <span class="keyword">if</span> (i &lt; <span class="number">1</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">while</span> (p &amp;&amp; j &lt; i)</span><br><span class="line">    &#123;</span><br><span class="line">      p = p-&gt;next;</span><br><span class="line">      j++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>按值查找：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LNode *<span class="title">LocateElem</span><span class="params">(LinkList L, ElemType e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LNode *p = L-&gt;next;</span><br><span class="line">    <span class="keyword">while</span> (p != <span class="literal">NULL</span> &amp;&amp; p-&gt;data != e)</span><br><span class="line">      p = p-&gt;next;</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新结点插入第 i 个位置：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">ListFrontInsert</span><span class="params">(LinkList L, <span class="type">int</span> i, ElemType e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LinkList p = <span class="built_in">GetElem</span>(L, i - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">NULL</span> == p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    LinkList s = (LNode *)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(LNode)); <span class="comment">// 为新插入的结点申请空间</span></span><br><span class="line">    s-&gt;data = e;</span><br><span class="line">    s-&gt;next = p-&gt;next;</span><br><span class="line">    p-&gt;next = s;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>删除第 i 个结点：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">ListDelete</span><span class="params">(LinkList L, <span class="type">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LinkList p = <span class="built_in">GetElem</span>(L, i - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">NULL</span> == p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    LinkList q;</span><br><span class="line">    q = p-&gt;next;</span><br><span class="line">    p-&gt;next = q-&gt;next; <span class="comment">// 断链</span></span><br><span class="line">    <span class="built_in">free</span>(q);   <span class="comment">// 释放对应结点的空间</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打印链表中每个结点的值：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">PrintList</span><span class="params">(LinkList L)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    L = L-&gt;next;</span><br><span class="line">    <span class="keyword">while</span> (L != <span class="literal">NULL</span>) <span class="comment">// NULL是为了代表一张空的藏宝图</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%3d&quot;</span>, L-&gt;data); <span class="comment">// 打印当前结点数据</span></span><br><span class="line">        L = L-&gt;next;<span class="comment">// 指向下一个结点</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二、双链表"><a href="#二、双链表" class="headerlink" title="二、双链表"></a>二、双链表</h3><p>双链表结点定义：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElemType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">DNode</span>&#123;</span><br><span class="line">    ElemType data;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">DNode</span> *prior,*next;  <span class="comment">//前驱，后继</span></span><br><span class="line">&#125;DNode,*DLinkList;</span><br></pre></td></tr></table></figure><p>双链表增删查：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DLinkList DL;</span><br><span class="line">    DLinkList search;</span><br><span class="line">    <span class="built_in">Dlist_head_insert</span>(DL);</span><br><span class="line">    <span class="comment">//Dlist_tail_insert(DL);</span></span><br><span class="line">    <span class="comment">//3 4 5 6 7 9999</span></span><br><span class="line">    <span class="built_in">PrintDList</span>(DL);</span><br><span class="line">    search=<span class="built_in">GetElem</span>(DL,<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">if</span>(search!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;按序号查找成功\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,search-&gt;data);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">DListFrontInsert</span>(DL,<span class="number">3</span>,<span class="number">99</span>);</span><br><span class="line">    <span class="built_in">PrintDList</span>(DL);</span><br><span class="line">    <span class="built_in">DListDelete</span>(DL,<span class="number">2</span>);</span><br><span class="line">    <span class="built_in">PrintDList</span>(DL);</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>双向链表头插法：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">DLinkList <span class="title">Dlist_head_insert</span><span class="params">(DLinkList &amp;DL)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DNode *s;<span class="type">int</span> x;</span><br><span class="line">    DL=(DLinkList)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(DNode));<span class="comment">//带头结点的链表,不带头结点</span></span><br><span class="line">    DL-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">    DL-&gt;prior=<span class="literal">NULL</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);<span class="comment">//从标准输入读取数据</span></span><br><span class="line">    <span class="comment">//3 4 5 6 7 9999</span></span><br><span class="line">    <span class="keyword">while</span>(x!=<span class="number">9999</span>)&#123;</span><br><span class="line">        s=(DLinkList)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(DNode));<span class="comment">//申请一个空间空间，强制类型转换</span></span><br><span class="line">        s-&gt;data=x;</span><br><span class="line">        s-&gt;next=DL-&gt;next;</span><br><span class="line">        <span class="keyword">if</span>(DL-&gt;next!=<span class="literal">NULL</span>)<span class="comment">//插入第一个结点时，不需要这一步操作</span></span><br><span class="line">        &#123;</span><br><span class="line">          DL-&gt;next-&gt;prior=s;</span><br><span class="line">        &#125;</span><br><span class="line">        s-&gt;prior=DL;</span><br><span class="line">        DL-&gt;next=s;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);<span class="comment">//读取标准输入</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> DL;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>双向链表尾插法：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">DLinkList <span class="title">Dlist_tail_insert</span><span class="params">(DLinkList &amp;DL)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    DL=(DLinkList)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(DNode));<span class="comment">//带头节点的链表</span></span><br><span class="line">    DNode *s,*r=DL;</span><br><span class="line">    DL-&gt;prior=<span class="literal">NULL</span>;</span><br><span class="line">    <span class="comment">//3 4 5 6 7 9999</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">    <span class="keyword">while</span>(x!=<span class="number">9999</span>)&#123;</span><br><span class="line">        s=(DNode*)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(DNode));</span><br><span class="line">        s-&gt;data=x;</span><br><span class="line">        r-&gt;next=s;</span><br><span class="line">        s-&gt;prior=r;</span><br><span class="line">        r=s;<span class="comment">//r指向新的表尾结点</span></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">    &#125;</span><br><span class="line">    r-&gt;next=<span class="literal">NULL</span>;<span class="comment">//尾结点的next指针赋值为NULL</span></span><br><span class="line">    <span class="keyword">return</span> DL;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>按序号查找结点值：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">DNode *<span class="title">GetElem</span><span class="params">(DLinkList DL,<span class="type">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> j=<span class="number">1</span>;</span><br><span class="line">    DNode *p=DL-&gt;next;</span><br><span class="line">    <span class="keyword">if</span>(i==<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> DL;</span><br><span class="line">    <span class="keyword">if</span>(i&lt;<span class="number">1</span>)</span><br><span class="line">       <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">while</span>(p&amp;&amp;j&lt;i)</span><br><span class="line">    &#123;</span><br><span class="line">        p=p-&gt;next;</span><br><span class="line">        j++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新结点插入第 i 个位置：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">DListFrontInsert</span><span class="params">(DLinkList DL,<span class="type">int</span> i,ElemType e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DLinkList p=<span class="built_in">GetElem</span>(DL,i<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="literal">NULL</span>==p)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    DLinkList s=(DLinkList)<span class="built_in">malloc</span>(<span class="built_in">sizeof</span>(DNode));<span class="comment">//为新插入的结点申请空间</span></span><br><span class="line">    s-&gt;data=e;</span><br><span class="line">    s-&gt;next=p-&gt;next;</span><br><span class="line">    p-&gt;next-&gt;prior=s;</span><br><span class="line">    s-&gt;prior=p;</span><br><span class="line">    p-&gt;next=s;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>删除第 i 个结点：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">DListDelete</span><span class="params">(DLinkList DL,<span class="type">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DLinkList p=<span class="built_in">GetElem</span>(DL,i<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="literal">NULL</span>==p)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    DLinkList q;</span><br><span class="line">    q=p-&gt;next;</span><br><span class="line">    <span class="keyword">if</span>(q==<span class="literal">NULL</span>)<span class="comment">//删除的元素不存在</span></span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    p-&gt;next=q-&gt;next;<span class="comment">//断链</span></span><br><span class="line">    <span class="keyword">if</span>(q-&gt;next!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      q-&gt;next-&gt;prior=p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">free</span>(q);<span class="comment">//释放对应结点的空间</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>链表打印：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">PrintDList</span><span class="params">(DLinkList DL)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DL=DL-&gt;next;</span><br><span class="line">    <span class="keyword">while</span>(DL!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%3d&quot;</span>,DL-&gt;data);</span><br><span class="line">        DL=DL-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三、循环链表和静态链表"><a href="#三、循环链表和静态链表" class="headerlink" title="三、循环链表和静态链表"></a>三、循环链表和静态链表</h3><p>循环单链表与单链表的区别在于，表中最后一个结点的 next 指针不是 NULL，而是指向头结点 L，从而整个链表形成一个环。x</p><p>循环双链表与双链表的区别在于，表中最后一个结点的 next 指针不是 NULL，而是指向头结点 L，同时 <code>L-&gt;prior</code> 指向尾节点。当循环双链表为空时，其头结点的 prior 域和 next 域都等于 L。</p><p>静态链表是借助数组来描述线性表的链式存储结构：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> Maxsize 50</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">  ElemType data;</span><br><span class="line">  <span class="type">int</span> next;</span><br><span class="line">&#125;SLinkList[Maxsize];</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;顺序表在插入和删除操作需要移动大量元素。数组的大小不好确定，且存储分配需要一整段连续的存储空间，造成很多碎片。因此在需要经常插入和删除的线性表中，需要通过链式存储方式实现。线性表的链式表示称为链表。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="C/C++" scheme="http://blog.zhuangzhihao.top/categories/C-C/"/>
    
    
  </entry>
  
  <entry>
    <title>JavaScript 基础数据结构</title>
    <link href="http://blog.zhuangzhihao.top/JS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    <id>http://blog.zhuangzhihao.top/JS%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</id>
    <published>2022-07-06T16:00:00.000Z</published>
    <updated>2022-08-14T02:53:54.645Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>freeCodeCamp JavaScript 算法和数据结构第五章。我们可以通过多种方式存储和访问数据，例如数组和对象，都是常见的 JavaScript 数据结构。在基础数据结构课程中，更深入地了解数组和对象之间的差异，以及在不同情况下应该使用哪个，学习一些好用的 JS 方法，例如 <code>splice()</code>，以及使用 <code>Object.keys()</code> 来访问和操作数据。</p></blockquote><span id="more"></span><h3 id="一、数组"><a href="#一、数组" class="headerlink" title="一、数组"></a>一、数组</h3><p>一维数组（one-dimensional array）只有一层，只包含布尔值（booleans）、字符串（strings）、数字（numbers）以及 JavaScript 中的其他数据类型，所有数组都有一个表示长度的属性，我们可以通过 <code>Array.length</code> 来访问它。：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> simpleArray = [<span class="string">&#x27;one&#x27;</span>, <span class="number">2</span>, <span class="string">&#x27;three&#x27;</span>, <span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">undefined</span>, <span class="literal">null</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(simpleArray.<span class="property">length</span>);  <span class="comment">// 7</span></span><br></pre></td></tr></table></figure><p>多维数组 （multi-dimensional Array）或嵌套（nested）数组是一个包含了其他数组的数组，在它的内部还包含了 JavaScript 中的对象（objects）结构：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> complexArray = [</span><br><span class="line">    [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">one</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">two</span>: <span class="number">2</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">three</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">four</span>: <span class="number">4</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">a</span>: <span class="string">&quot;a&quot;</span>,</span><br><span class="line">            <span class="attr">b</span>: <span class="string">&quot;b&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">c</span>: <span class="string">&quot;c&quot;</span>,</span><br><span class="line">            <span class="attr">d</span>: <span class="string">&quot;d&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">];</span><br></pre></td></tr></table></figure><p>在数组中，内部的每个元素都有一个与之对应的索引（index）。 索引既是该元素在数组中的位置，也是我们访问该元素的引用。 </p><p>JavaScript 数组的索引是从 0 开始的（这种从 0 开始的规则叫做 zero-indexed），即数组的第一个元素是在数组中的第 0 个位置，而不是第 1 个位置。</p><p> 要从数组中获取一个元素，我们可以在数组字面量后面加一个用方括号括起来的索引。不过习惯上，我们会通过表示数组的变量名来访问，而不是直接通过字面量。 这种从数组中读取元素的方式叫做方括号表示法（bracket notation）。 如果我们要从数组 <code>ourArray</code> 中取出数据 <code>a</code> 并将其赋值给另一个变量，可以这样写：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> ourVariable = ourArray[<span class="number">0</span>];</span><br></pre></td></tr></table></figure><p>通过索引，我们不仅可以获取某个元素值，还可以用类似的写法来<em>设置</em>一个索引位置的元素值：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ourArray[<span class="number">1</span>] = <span class="string">&quot;not b anymore&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="二、添加、删除元素"><a href="#二、添加、删除元素" class="headerlink" title="二、添加、删除元素"></a>二、添加、删除元素</h3><p>数组的长度与数组能包含的数据类型一样，都是不固定的。 数组可以包含任意数量的元素，可以不限次数地往数组中添加元素或者从中移除元素。 总之，数组是可变的（mutable）。</p><p><code>push()</code> 方法会将元素插入到数组的末尾，而 <code>unshift()</code> 方法会将元素插入到数组的开头：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> twentyThree = <span class="string">&#x27;XXIII&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> romanNumerals = [<span class="string">&#x27;XXI&#x27;</span>, <span class="string">&#x27;XXII&#x27;</span>];</span><br><span class="line">romanNumerals.<span class="title function_">unshift</span>(<span class="string">&#x27;XIX&#x27;</span>, <span class="string">&#x27;XX&#x27;</span>);</span><br><span class="line">romanNumerals.<span class="title function_">push</span>(twentyThree);</span><br></pre></td></tr></table></figure><p><code>push()</code> 和 <code>unshift()</code> 都有一个与它们作用相反的函数：<code>pop()</code> 和 <code>shift()</code>。 与插入元素相反，<code>pop()</code> 会从数组的末尾移除一个元素，而 <code>shift()</code> 会从数组的开头移除一个元素。</p><p> <code>pop()</code> 和 <code>shift()</code> 与 <code>push()</code> 和 <code>unshift()</code> 的关键区别在于，用于删除元素的方法不接收参数，而且每次只能删除数组中的一个元素。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> greetings = [<span class="string">&#x27;whats up?&#x27;</span>, <span class="string">&#x27;hello&#x27;</span>, <span class="string">&#x27;see ya!&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> popped = greetings.<span class="title function_">pop</span>();  <span class="comment">// greetings 值为 [&#x27;whats up?&#x27;, &#x27;hello&#x27;]，popped 值为 see ya!</span></span><br><span class="line">greetings.<span class="title function_">shift</span>();  <span class="comment">//greetings 值为 [&#x27;hello&#x27;]</span></span><br></pre></td></tr></table></figure><p><code>splice()</code> 可以让我们从数组中的任意位置连续删除任意数量的元素。<code>splice()</code> 最多可以接受 3 个参数。</p><p> <code>splice()</code> 的前两个参数是整数，表示数组中调用 <code>splice()</code> 的项的索引或位置，第一个参数代表从数组中的哪个索引开始移除元素，而第二个参数表示要从数组中的这个位置开始删除多少个元素。</p><p><code>splice()</code> 不仅会修改调用该方法的数组，还会返回一个包含被移除元素的数组：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> array = [<span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27;am&#x27;</span>, <span class="string">&#x27;feeling&#x27;</span>, <span class="string">&#x27;really&#x27;</span>, <span class="string">&#x27;happy&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> newArray = array.<span class="title function_">splice</span>(<span class="number">3</span>, <span class="number">2</span>);   <span class="comment">// [&#x27;really&#x27;, &#x27;happy&#x27;]</span></span><br></pre></td></tr></table></figure><p><code>splice()</code> 方法的第三个参数可以是一个或多个元素，这些元素会被添加到数组中。 这样，我们能够便捷地将数组中的一个或多个连续元素换成其他的元素。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> numbers = [<span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">12</span>, <span class="number">15</span>];</span><br><span class="line"><span class="keyword">const</span> startIndex = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">const</span> amountToDelete = <span class="number">1</span>;</span><br><span class="line">numbers.<span class="title function_">splice</span>(startIndex, amountToDelete, <span class="number">13</span>, <span class="number">14</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(numbers);  <span class="comment">// [ 10, 11, 12, 13, 14, 15 ]</span></span><br></pre></td></tr></table></figure><p><code>slice()</code> 不会修改数组，而是会复制，或者说提取（extract）给定数量的元素到一个新数组。 <code>slice()</code> 只接收 2 个输入参数：第一个是开始提取元素的位置（索引），第二个是提取元素的结束位置（索引）。 提取的元素中不包括第二个参数所对应的元素：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> weatherConditions = [<span class="string">&#x27;rain&#x27;</span>, <span class="string">&#x27;snow&#x27;</span>, <span class="string">&#x27;sleet&#x27;</span>, <span class="string">&#x27;hail&#x27;</span>, <span class="string">&#x27;clear&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> todaysWeather = weatherConditions.<span class="title function_">slice</span>(<span class="number">1</span>, <span class="number">3</span>);  <span class="comment">// [&#x27;snow&#x27;, &#x27;sleet&#x27;]</span></span><br></pre></td></tr></table></figure><h3 id="三、展开运算符"><a href="#三、展开运算符" class="headerlink" title="三、展开运算符"></a>三、展开运算符</h3><p><code>slice()</code> 可以让我们从一个数组中选择一些元素来复制到新数组中，而 ES6 中又引入了一个简洁且可读性强的语法：展开运算符（spread operator），它能让我们方便地复制数组中的所有元素。 </p><p>展开语法写出来是这样：<code>...</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> thisArray = [<span class="literal">true</span>, <span class="literal">true</span>, <span class="literal">undefined</span>, <span class="literal">false</span>, <span class="literal">null</span>];</span><br><span class="line"><span class="keyword">let</span> thatArray = [...thisArray];  <span class="comment">// thisArray 保持不变， thatArray 包含与 thisArray 相同的元素。</span></span><br></pre></td></tr></table></figure><p>展开语法（spread）的另一个重要用途是合并数组，或者将某个数组的所有元素插入到另一个数组的任意位置。 我们也可以使用 ES5 的语法连接两个数组，但只能让它们首尾相接。 而展开语法可以让这样的操作变得极其简单：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> thisArray = [<span class="string">&#x27;sage&#x27;</span>, <span class="string">&#x27;rosemary&#x27;</span>, <span class="string">&#x27;parsley&#x27;</span>, <span class="string">&#x27;thyme&#x27;</span>];</span><br><span class="line"><span class="keyword">let</span> thatArray = [<span class="string">&#x27;basil&#x27;</span>, <span class="string">&#x27;cilantro&#x27;</span>, ...thisArray, <span class="string">&#x27;coriander&#x27;</span>];   <span class="comment">// [&#x27;basil&#x27;, &#x27;cilantro&#x27;, &#x27;sage&#x27;, &#x27;rosemary&#x27;, &#x27;parsley&#x27;, &#x27;thyme&#x27;, &#x27;coriander&#x27;]</span></span><br></pre></td></tr></table></figure><p>使用展开语法，我们就可以很方便的实现一个用传统方法会写得很复杂且冗长的操作。</p><h3 id="四、查询、遍历元素"><a href="#四、查询、遍历元素" class="headerlink" title="四、查询、遍历元素"></a>四、查询、遍历元素</h3><p>由于数组随时都可以修改或发生 mutated，我们很难保证某个数据始终处于数组中的特定位置，甚至不能保证该元素是否还存在于该数组中。 好消息是，JavaScript 为我们提供了内置方法 <code>indexOf()</code>。 这个方法让我们可以方便地检查某个元素是否存在于数组中。</p><p> <code>indexOf()</code> 方法接受一个元素作为输入参数，并返回该元素在数组中的位置（索引）；若该元素不存在于数组中则返回 <code>-1</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">et fruits = [<span class="string">&#x27;apples&#x27;</span>, <span class="string">&#x27;pears&#x27;</span>, <span class="string">&#x27;oranges&#x27;</span>, <span class="string">&#x27;peaches&#x27;</span>, <span class="string">&#x27;pears&#x27;</span>];</span><br><span class="line">fruits.<span class="title function_">indexOf</span>(<span class="string">&#x27;dates&#x27;</span>);  <span class="comment">// -1</span></span><br><span class="line">fruits.<span class="title function_">indexOf</span>(<span class="string">&#x27;oranges&#x27;</span>);  <span class="comment">// 2</span></span><br><span class="line">fruits.<span class="title function_">indexOf</span>(<span class="string">&#x27;pears&#x27;</span>);  <span class="comment">// 1 (每个元素存在的第一个索引)</span></span><br></pre></td></tr></table></figure><p>使用数组时，我们经常需要遍历数组的所有元素来找出我们需要的一个或多个元素，抑或是对数组执行一些特定的操作。 JavaScript 为我们提供了几个内置的方法，它们以不同的方式遍历数组，以便我们可以用于不同的场景（如 <code>every()</code>、<code>forEach()</code>、<code>map()</code> 等等）。 </p><p>然而，最简单的 <code>for</code> 循环不仅能实现上述这些方法的功能，而且相比之下也会更加灵活：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">greaterThanTen</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> newArr = [];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (arr[i] &gt; <span class="number">10</span>) &#123;</span><br><span class="line">      newArr.<span class="title function_">push</span>(arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> newArr;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">greaterThanTen</span>([<span class="number">2</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">14</span>, <span class="number">80</span>, <span class="number">0</span>, <span class="number">1</span>]);</span><br></pre></td></tr></table></figure><h3 id="五、对象"><a href="#五、对象" class="headerlink" title="五、对象"></a>五、对象</h3><p>对象（object）本质上是键值对（key-value pair）的集合。 或者说，一系列被映射到唯一标识符的数据就是对象；习惯上，唯一标识符叫做属性（property）或者键（key）；数据叫做值（value）：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> tekkenCharacter = &#123;</span><br><span class="line">    <span class="attr">player</span>: <span class="string">&#x27;Hwoarang&#x27;</span>,</span><br><span class="line">    <span class="attr">fightingStyle</span>: <span class="string">&#x27;Tae Kwon Doe&#x27;</span>,</span><br><span class="line">    <span class="attr">human</span>: <span class="literal">true</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p> 如果我们想为它再添加一个叫做 <code>origin</code> 的属性，可以这样写：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tekkenCharacter.<span class="property">origin</span> = <span class="string">&#x27;South Korea&#x27;</span>;</span><br></pre></td></tr></table></figure><p>也可以通过方括号表示法来为它添加这个属性，像这样：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tekkenCharacter[<span class="string">&#x27;hair color&#x27;</span>] = <span class="string">&#x27;dyed orange&#x27;</span>;</span><br></pre></td></tr></table></figure><p>把属性（hair color）放到引号里，以此来表示整个字符串都是需要设置的属性。 如果不加上引号，那么中括号里的内容会被当作一个变量来解析，这个变量对应的值就会作为要设置的属性：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> eyes = <span class="string">&#x27;eye color&#x27;</span>;</span><br><span class="line">tekkenCharacter[eyes] = <span class="string">&#x27;brown&#x27;</span>;</span><br></pre></td></tr></table></figure><p>修改嵌套在对象中的对象：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> nestedObject = &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">28802695164</span>,</span><br><span class="line">    <span class="attr">date</span>: <span class="string">&#x27;December 31, 2016&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">totalUsers</span>: <span class="number">99</span>,</span><br><span class="line">        <span class="attr">online</span>: <span class="number">80</span>,</span><br><span class="line">        <span class="attr">onlineStatus</span>: &#123;</span><br><span class="line">            <span class="attr">active</span>: <span class="number">67</span>,</span><br><span class="line">            <span class="attr">away</span>: <span class="number">13</span>,</span><br><span class="line">            <span class="attr">busy</span>: <span class="number">8</span>  <span class="comment">// 10</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">nestedObject.<span class="property">data</span>.<span class="property">onlineStatus</span>.<span class="property">busy</span> = <span class="number">10</span>;</span><br></pre></td></tr></table></figure><p>使用方括号访问属性名称：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> selectedFood = <span class="title function_">getCurrentFood</span>(scannedItem);</span><br><span class="line"><span class="keyword">let</span> inventory = foods[selectedFood];</span><br><span class="line"><span class="comment">// 上述代码会先读取 selectedFood 变量的值，并返回 foods 对象中以该值命名的属性所对应的属性值。 若没有以该值命名的属性，则会返回 undefined。 </span></span><br></pre></td></tr></table></figure><p>对象是以键值对的形式，灵活、直观地存储结构化数据的一种方式，而且，通过对象的属性查找属性值是速度很快的操作。</p><p>从一个对象中移除一个键值对，可以像这样使用 <code>delete</code> 关键字：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> foods.<span class="property">apples</span>;</span><br></pre></td></tr></table></figure><p>如果我们想知道一个对象中是否包含某个属性呢，JavaScript 为我们提供了两种不同的方式来实现这个功能： 一个是通过 <code>hasOwnProperty()</code> 方法，另一个是使用 <code>in</code> 关键字。 </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">users.<span class="title function_">hasOwnProperty</span>(<span class="string">&#x27;Alan&#x27;</span>);   <span class="comment">// true</span></span><br><span class="line"><span class="string">&#x27;Alan&#x27;</span> <span class="keyword">in</span> users;  <span class="comment">// true</span></span><br></pre></td></tr></table></figure><p>如果我们想要遍历对象中的所有属性， 只需要使用 JavaScript 中的 <code>for...in</code> 语句即可：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> user <span class="keyword">in</span> users) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(user);</span><br><span class="line">&#125; <span class="comment">// 在上面的代码中，我们定义了一个 user 变量。 可以观察到，这个变量在遍历对象的语句执行过程中会一直被重置并赋予新值，结果就是不同的用户名打印到了 console 中。</span></span><br></pre></td></tr></table></figure><p>对象中的键是无序的，这与数组不同。 因此，一个对象中某个属性的位置，或者说它出现的相对顺序，在引用或访问该属性时是不确定的。</p><p>可以给 <code>Object.keys()</code> 方法传入一个对象作为参数，来生成包含对象所有键的数组。 这会返回一个由对象中所有属性（字符串）组成的数组。 需要注意的是，数组中元素的顺序是不确定的。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getArrayOfUsers</span>(<span class="params">obj</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Object</span>.<span class="title function_">keys</span>(obj);</span><br><span class="line">&#125;    <span class="comment">// 返回一个由输入对象中的所有属性所组成的数组。</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;freeCodeCamp JavaScript 算法和数据结构第五章。我们可以通过多种方式存储和访问数据，例如数组和对象，都是常见的 JavaScript 数据结构。在基础数据结构课程中，更深入地了解数组和对象之间的差异，以及在不同情况下应该使用哪个，学习一些好用的 JS 方法，例如 &lt;code&gt;splice()&lt;/code&gt;，以及使用 &lt;code&gt;Object.keys()&lt;/code&gt; 来访问和操作数据。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Web前端" scheme="http://blog.zhuangzhihao.top/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="JavaScript" scheme="http://blog.zhuangzhihao.top/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式</title>
    <link href="http://blog.zhuangzhihao.top/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://blog.zhuangzhihao.top/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</id>
    <published>2022-07-02T16:00:00.000Z</published>
    <updated>2022-08-14T02:53:54.652Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>freeCodeCamp JavaScript 算法和数据结构第三章。正则表达式，常常缩写为 “regex” 或 “regexp”，是帮助程序员匹配、搜索和替换文本的模式。正则表达式非常强大，但可能难以阅读，因为它们使用特殊字符来做更复杂更灵活的匹配。在正则表达式的课程中，学习如何使用特殊字符、捕获组、正向或负向先行断言以及其他技巧来匹配你想要的文本。</p></blockquote><span id="more"></span><h3 id="一、文字匹配"><a href="#一、文字匹配" class="headerlink" title="一、文字匹配"></a>一、文字匹配</h3><p>在编程语言中，正则表达式用于匹配指定的字符串。 通过正则表达式创建匹配模式（规则）可以帮你完成指定匹配。</p><p>正则表达式中不需要引号。如果想要在字符串 <code>The dog chased the cat</code> 中匹配到 <code>the</code> 这个单词，可以使用如下正则表达式：<code>/the/</code>。 </p><p> 测试正则表达式的一种方法是使用 <code>.test()</code> 方法。 <code>.test()</code> 方法会把编写的正则表达式和字符串（即括号内的内容）匹配，如果成功匹配到字符，则返回 <code>true</code>，反之，返回 <code>false</code>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> testStr = <span class="string">&quot;freeCodeCamp&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> testRegex = <span class="regexp">/Code/</span>;</span><br><span class="line">testRegex.<span class="title function_">test</span>(testStr);  <span class="comment">// true</span></span><br></pre></td></tr></table></figure><p>可以使用 <code>alternation</code> 或 <code>OR</code> 操作符搜索多个模式：使用 <code>|</code> 操作符匹配操作符前面或后面的字符。 例如，如果你想匹配 <code>yes</code> 或 <code>no</code>，你需要的正则表达式是 <code>/yes|no/</code>。</p><p>你还可以匹配多个规则，这可以通过添加更多的匹配模式来实现。 这些匹配模式将包含更多的 <code>OR</code> 操作符来分隔它们，比如<code>/yes|no|maybe/</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> petString = <span class="string">&quot;James has a pet cat.&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> petRegex = <span class="regexp">/dog|cat|bird|fish/</span>;  <span class="comment">// 使用正则表达式 petRegex 以匹配 dog、cat、bird 或者 fish</span></span><br><span class="line"><span class="keyword">let</span> result = petRegex.<span class="title function_">test</span>(petString);</span><br></pre></td></tr></table></figure><p>可以使用标志（flag）来匹配字母大小写两种情况。 可以通过将忽略大小写的标志 <code>i</code> 附加到正则表达式之后来使用它。 这里给出使用该标志的一个实例 <code>/ignorecase/i</code>， 这个字符串可以匹配字符串 <code>ignorecase</code>、<code>igNoreCase</code> 和 <code>IgnoreCase</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> myString = <span class="string">&quot;freeCodeCamp&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> fccRegex = <span class="regexp">/freecodecamp/i</span>;  <span class="comment">// 忽略大小写</span></span><br><span class="line"><span class="keyword">let</span> result = fccRegex.<span class="title function_">test</span>(myString);</span><br></pre></td></tr></table></figure><p>可以使用 <code>.match()</code> 方法来提取找到的实际匹配项。可以使用字符串来调用 <code>.match()</code> 方法，并在括号内传入正则表达式。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;Hello, World!&quot;</span>.<span class="title function_">match</span>(<span class="regexp">/Hello/</span>);  <span class="comment">// 返回 [&quot;Hello&quot;]</span></span><br><span class="line"><span class="keyword">let</span> ourStr = <span class="string">&quot;Regular expressions&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> ourRegex = <span class="regexp">/expressions/</span>;</span><br><span class="line">ourStr.<span class="title function_">match</span>(ourRegex);    <span class="comment">// 返回 [&quot;expressions&quot;]</span></span><br></pre></td></tr></table></figure><p>全局匹配：若要多次搜寻或提取模式匹配，可以使用 <code>g</code> 标志。在正则表达式上可以有多个标志，比如 <code>/search/gi</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> testStr = <span class="string">&quot;Repeat, Repeat, Repeat&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> repeatRegex = <span class="regexp">/Repeat/g</span>;</span><br><span class="line">testStr.<span class="title function_">match</span>(repeatRegex);  <span class="comment">// 返回值 [&quot;Repeat&quot;, &quot;Repeat&quot;, &quot;Repeat&quot;]</span></span><br></pre></td></tr></table></figure><p>通配符 <code>.</code> 将匹配任何一个字符。 通配符也叫 <code>dot</code> 或 <code>period</code>。 可以像使用正则表达式中任何其他字符一样使用通配符。 例如，如果想匹配 <code>hug</code>、<code>huh</code>、<code>hut</code> 和 <code>hum</code>，可以使用正则表达式 <code>/hu./</code> 匹配以上四个单词。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> humStr = <span class="string">&quot;I&#x27;ll hum a song&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> hugStr = <span class="string">&quot;Bear hug&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> huRegex = <span class="regexp">/hu./</span>;</span><br><span class="line">huRegex.<span class="title function_">test</span>(humStr);    <span class="comment">// true</span></span><br><span class="line">huRegex.<span class="title function_">test</span>(hugStr);    <span class="comment">// true</span></span><br></pre></td></tr></table></figure><h3 id="二、字符集匹配"><a href="#二、字符集匹配" class="headerlink" title="二、字符集匹配"></a>二、字符集匹配</h3><p>文字匹配模式（<code>/literal/</code>）和通配符（<code>/./</code>）是正则表达式的两种极端情况，一种是精确匹配，而另一种则是匹配所有。 在这两种极端情况之间有一个平衡选项。</p><p>可以使用字符集 （character classes）更灵活的匹配字符。 可以把字符集放在方括号（<code>[</code> 和 <code>]</code>）之间来定义一组需要匹配的字符串。例如，如果想要匹配 <code>bag</code>、<code>big</code> 和 <code>bug</code>，但是不想匹配 <code>bog</code>。 可以创建正则表达式 <code>/b[aiu]g/</code> 来执行此操作。 <code>[aiu]</code> 是只匹配字符 <code>a</code>、<code>i</code> 或者 <code>u</code> 的字符集。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> quoteSample = <span class="string">&quot;Beware of bugs in the above code; I have only proved it correct, not tried it.&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> vowelRegex = <span class="regexp">/[aeiou]/ig</span>;  <span class="comment">// 使用元音字符集（a、e、i、o、u）在正则表达式 vowelRegex 中匹配到字符串 quoteSample 中的所有元音。</span></span><br><span class="line"><span class="keyword">let</span> result = quoteSample.<span class="title function_">match</span>(vowelRegex); </span><br></pre></td></tr></table></figure><p>在字符集中，可以使用连字符（<code>-</code>）来定义要匹配的字符范围。例如，要匹配小写字母 <code>a</code> 到 <code>e</code>，你可以使用 <code>[a-e]</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> quoteSample = <span class="string">&quot;The quick brown fox jumps over the lazy dog.&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> alphabetRegex = <span class="regexp">/[a-z]/ig</span>; <span class="comment">// 匹配字符串 quoteSample 中的所有字母。 </span></span><br><span class="line"><span class="keyword">let</span> result = quoteSample.<span class="title function_">match</span>(alphabetRegex); </span><br></pre></td></tr></table></figure><p>使用连字符（<code>-</code>）匹配字符范围并不仅限于字母。 它还可以匹配一系列数字。例如，<code>/[0-5]/</code> 匹配 <code>0</code> 和 <code>5</code> 之间的任意数字，包含 <code>0</code> 和 <code>5</code>。此外，还可以在单个字符集中组合一系列字母和数字。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> jennyStr = <span class="string">&quot;Jenny8675309&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> myRegex = <span class="regexp">/[a-z0-9]/ig</span>;</span><br><span class="line">jennyStr.<span class="title function_">match</span>(myRegex);</span><br></pre></td></tr></table></figure><p>也可以创建一个不想匹配的字符集合。 这些类型的字符集称为否定字符集（ negated character sets）。</p><p>要创建否定字符集，需要在开始括号后面和不想匹配的字符前面放置脱字符（即<code>^</code>）。例如，<code>/[^aeiou]/gi</code> 匹配所有非元音字符。 注意，字符 <code>.</code>、<code>!</code>、<code>[</code>、<code>@</code>、<code>/</code> 和空白字符等也会被匹配，该否定字符集仅排除元音字符。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> quoteSample = <span class="string">&quot;3 blind mice.&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> myRegex = <span class="regexp">/[^aeiou0-9]/ig</span>;   <span class="comment">// 创建一个匹配所有非数字或元音字符的正则表达式。 </span></span><br><span class="line"><span class="keyword">let</span> result = quoteSample.<span class="title function_">match</span>(myRegex); </span><br></pre></td></tr></table></figure><p>有时，需要匹配出现一次或者连续多次的的字符（或字符组）。 这意味着它至少出现一次，并且可能重复出现。</p><p>可以使用 <code>+</code> 符号来检查情况是否如此。 记住，字符或匹配模式必须一个接一个地连续出现。 这就是说，字符必须一个接一个地重复。</p><p>例如，<code>/a+/g</code> 会在 <code>abc</code> 中匹配到一个匹配项，并且返回 <code>[&quot;a&quot;]</code>。 因为 <code>+</code> 的存在，它也会在 <code>aabc</code> 中匹配到一个匹配项，然后返回 <code>[&quot;aa&quot;]</code>。如果它是检查字符串 <code>abab</code>，它将匹配到两个匹配项并且返回<code>[&quot;a&quot;, &quot;a&quot;]</code>，因为<code>a</code>字符不连续，在它们之间有一个<code>b</code>字符。 最后，因为在字符串 <code>bcd</code> 中没有 <code>a</code>，因此找不到匹配项。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> difficultSpelling = <span class="string">&quot;Mississippi&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> myRegex = <span class="regexp">/s+/g</span>;    <span class="comment">// 在字符串 Mississippi 中匹配到出现一次或多次的字母 s 的匹配项。  </span></span><br><span class="line"><span class="keyword">let</span> result = difficultSpelling.<span class="title function_">match</span>(myRegex);</span><br></pre></td></tr></table></figure><p>有一个选项可以匹配出现零次或多次的字符。执行该操作的字符叫做星号，即<code>*</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// chewieQuote 已经被初始化为 Aaaaaaaaaaaaaaaarrrgh!</span></span><br><span class="line"><span class="keyword">let</span> chewieRegex = <span class="regexp">/Aa*/</span>; <span class="comment">// 使用 * 在 chewieQuote 中匹配 A 及其之后出现的零个或多个a。</span></span><br><span class="line"><span class="keyword">let</span> result = chewieQuote.<span class="title function_">match</span>(chewieRegex);</span><br></pre></td></tr></table></figure><p>贪婪（greedy）匹配会匹配到符合正则表达式匹配模式的字符串的最长可能部分，并将其作为匹配项返回。 另一种方案称为懒惰（lazy）匹配，它会匹配到满足正则表达式的字符串的最小可能部分。</p><p>可以将正则表达式 <code>/t[a-z]*i/</code> 应用于字符串 <code>&quot;titanic&quot;</code>。 这个正则表达式是一个以 <code>t</code> 开始，以 <code>i</code> 结束，并且中间有一些字母的匹配模式。正则表达式默认是贪婪匹配，因此匹配返回为 <code>[&quot;titani&quot;]</code>。 它会匹配到适合该匹配模式的最大子字符串。</p><p>但是，你可以使用 <code>?</code> 字符来将其变成懒惰匹配。 调整后的正则表达式 <code>/t[a-z]*?i/</code> 匹配字符串 <code>&quot;titanic&quot;</code> 返回 <code>[&quot;ti&quot;]</code>。</p><p>应该避免使用正则表达式解析 HTML，但是可以用正则表达式匹配 HTML 字符串。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> text = <span class="string">&quot;&lt;h1&gt;Winter is coming&lt;/h1&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> myRegex = <span class="regexp">/&lt;h.*?1&gt;/</span>;  <span class="comment">// 让正则表达式返回 HTML 标签 &lt;h1&gt;，而不是文本 &quot;&lt;h1&gt;Winter is coming&lt;/h1&gt;&quot;。</span></span><br><span class="line"><span class="keyword">let</span> result = text.<span class="title function_">match</span>(myRegex);</span><br></pre></td></tr></table></figure><h3 id="三、字符串匹配"><a href="#三、字符串匹配" class="headerlink" title="三、字符串匹配"></a>三、字符串匹配</h3><p> 除了在字符集中使用之外，插入符号（^）用于匹配文本是否在字符串的开始位置。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> firstString = <span class="string">&quot;Ricky is first and can be found.&quot;</span>; </span><br><span class="line"><span class="keyword">let</span> firstRegex = <span class="regexp">/^Ricky/</span>;    <span class="comment">// true</span></span><br><span class="line">firstRegex.<span class="title function_">test</span>(firstString);</span><br><span class="line"><span class="keyword">let</span> notFirst = <span class="string">&quot;You can&#x27;t find Ricky now.&quot;</span>;</span><br><span class="line">firstRegex.<span class="title function_">test</span>(notFirst);    <span class="comment">// false</span></span><br></pre></td></tr></table></figure><p>可以使用正则表达式的美元符号 <code>$</code> 来搜寻字符串的结尾。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> theEnding = <span class="string">&quot;This is a never ending story&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> storyRegex = <span class="regexp">/story$/</span>;</span><br><span class="line">storyRegex.<span class="title function_">test</span>(theEnding);    <span class="comment">// true</span></span><br><span class="line"><span class="keyword">let</span> noEnding = <span class="string">&quot;Sometimes a story will have to end&quot;</span>;</span><br><span class="line">storyRegex.<span class="title function_">test</span>(noEnding);    <span class="comment">// false</span></span><br></pre></td></tr></table></figure><p>使用元字符，可以使用 <code>[a-z]</code> 搜寻字母表中的所有字母。 这种元字符是很常见的，它有一个缩写，但这个缩写也包含额外的字符。这些元字符缩写也被称为短语元字符 shorthand character classes。</p><p>JavaScript 中与字母表匹配的最接近的元字符是<code>\w</code>。 这个缩写等同于<code>[A-Za-z0-9_]</code>。 此字符类匹配大写字母和小写字母以及数字。 注意，这个字符类也包含下划线字符 (<code>_</code>)。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> longHand = <span class="regexp">/[A-Za-z0-9_]+/</span>;</span><br><span class="line"><span class="keyword">let</span> shortHand = <span class="regexp">/\w+/</span>;</span><br><span class="line"><span class="keyword">let</span> numbers = <span class="string">&quot;42&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> varNames = <span class="string">&quot;important_var&quot;</span>;</span><br><span class="line">longHand.<span class="title function_">test</span>(numbers);    <span class="comment">// true</span></span><br><span class="line">shortHand.<span class="title function_">test</span>(numbers);    <span class="comment">// true</span></span><br><span class="line">longHand.<span class="title function_">test</span>(varNames);    <span class="comment">// true</span></span><br><span class="line">shortHand.<span class="title function_">test</span>(varNames);    <span class="comment">// true</span></span><br></pre></td></tr></table></figure><p>匹配除了字母和数字的所有符号可以使用 <code>\W</code> 搜寻和 <code>\w</code> 相反的匹配模式。 注意，相反匹配模式使用大写字母。 此缩写与 <code>[^A-Za-z0-9_]</code> 是一样的。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> shortHand = <span class="regexp">/\W/</span>;</span><br><span class="line"><span class="keyword">let</span> numbers = <span class="string">&quot;42%&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> sentence = <span class="string">&quot;Coding!&quot;</span>;</span><br><span class="line">numbers.<span class="title function_">match</span>(shortHand);    <span class="comment">// [&quot;%&quot;]</span></span><br><span class="line">sentence.<span class="title function_">match</span>(shortHand);    <span class="comment">// [&quot;!&quot;]</span></span><br></pre></td></tr></table></figure><p>另一个常见的匹配模式是只寻找数字。查找数字字符的缩写是 <code>\d</code>，注意是小写的 <code>d</code>。 这等同于元字符 <code>[0-9]</code>，它查找 0 到 9 之间任意数字的单个字符。</p><p>也可以使用类似的缩写来搜寻非数字，该缩写使用大写的 <code>D</code>。查找非数字字符的缩写是 <code>\D</code>。 这等同于字符串 <code>[^0-9]</code>，它查找不是 0 - 9 之间数字的单个字符。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> movieName = <span class="string">&quot;2001: A Space Odyssey&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> noNumRegex = <span class="regexp">/\D/g</span>;    <span class="comment">// 使用非数字缩写 \D 来计算电影标题中有多少非数字。</span></span><br><span class="line"><span class="keyword">let</span> result = movieName.<span class="title function_">match</span>(noNumRegex).<span class="property">length</span>;</span><br></pre></td></tr></table></figure><p>可以使用 <code>\s</code> 搜寻空格，其中 <code>s</code> 是小写。 此匹配模式将匹配空格、回车符、制表符、换页符和换行符。 可以认为这类似于元字符 <code>[ \r\t\f\n\v]</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> whiteSpace = <span class="string">&quot;Whitespace. Whitespace everywhere!&quot;</span></span><br><span class="line"><span class="keyword">let</span> spaceRegex = <span class="regexp">/\s/g</span>;    </span><br><span class="line">whiteSpace.<span class="title function_">match</span>(spaceRegex);    <span class="comment">// 返回 [&quot; &quot;, &quot; &quot;]</span></span><br></pre></td></tr></table></figure><p>使用 <code>\S</code> 搜寻非空白字符，其中 <code>s</code> 是大写。 此匹配模式将不匹配空格、回车符、制表符、换页符和换行符。 可以认为这类似于元字符 <code>[^ \r\t\f\n\v]</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> whiteSpace = <span class="string">&quot;Whitespace. Whitespace everywhere!&quot;</span></span><br><span class="line"><span class="keyword">let</span> nonSpaceRegex = <span class="regexp">/\S/g</span>;</span><br><span class="line">whiteSpace.<span class="title function_">match</span>(nonSpaceRegex).<span class="property">length</span>;    <span class="comment">// 32</span></span><br></pre></td></tr></table></figure><p>使用数量说明符（quantity specifiers）指定匹配模式的上下限。 数量说明符与花括号（<code>&#123;</code> 和 <code>&#125;</code>）一起使用。 可以在花括号之间放两个数字，这两个数字代表匹配模式的上限和下限。例如，要匹配出现 <code>3</code> 到 <code>5</code> 次字母 <code>a</code> 的在字符串 <code>ah</code>，正则表达式应为<code>/a&#123;3,5&#125;h/</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable constant_">A4</span> = <span class="string">&quot;aaaah&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable constant_">A2</span> = <span class="string">&quot;aah&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> multipleA = <span class="regexp">/a&#123;3,5&#125;h/</span>;</span><br><span class="line">multipleA.<span class="title function_">test</span>(<span class="variable constant_">A4</span>);    <span class="comment">// true</span></span><br><span class="line">multipleA.<span class="title function_">test</span>(<span class="variable constant_">A2</span>);    <span class="comment">// false</span></span><br></pre></td></tr></table></figure><p>但有时候只想指定匹配模式的下限而不需要指定上限，在第一个数字后面跟一个逗号即可。</p><p>要指定一定数量的匹配模式，只需在大括号之间放置一个数字。例如，要只匹配字母 <code>a</code> 出现 <code>3</code> 次的单词<code>hah</code>，正则表达式应为<code>/ha&#123;3&#125;h/</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="variable constant_">A4</span> = <span class="string">&quot;haaaah&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable constant_">A3</span> = <span class="string">&quot;haaah&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="variable constant_">A100</span> = <span class="string">&quot;h&quot;</span> + <span class="string">&quot;a&quot;</span>.<span class="title function_">repeat</span>(<span class="number">100</span>) + <span class="string">&quot;h&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> multipleHA = <span class="regexp">/ha&#123;3&#125;h/</span>;</span><br><span class="line">multipleHA.<span class="title function_">test</span>(<span class="variable constant_">A4</span>);    <span class="comment">// true</span></span><br><span class="line">multipleHA.<span class="title function_">test</span>(<span class="variable constant_">A3</span>);    <span class="comment">// false</span></span><br><span class="line">multipleHA.<span class="title function_">test</span>(<span class="variable constant_">A100</span>);    <span class="comment">// true</span></span><br></pre></td></tr></table></figure><p>可以使用问号 <code>?</code> 指定可能存在的元素。 这将检查前面的零个或一个元素。 可以将此符号视为前面的元素是可选的。</p><p>例如，美式英语和英式英语略有不同，可以使用问号来匹配两种拼写。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> american = <span class="string">&quot;color&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> british = <span class="string">&quot;colour&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> rainbowRegex= <span class="regexp">/colou?r/</span>;</span><br><span class="line">rainbowRegex.<span class="title function_">test</span>(american);    <span class="comment">// true</span></span><br><span class="line">rainbowRegex.<span class="title function_">test</span>(british);    <span class="comment">// true</span></span><br></pre></td></tr></table></figure><p>先行断言 （Lookaheads）是告诉 JavaScript 在字符串中向前查找的匹配模式。 当想要在同一个字符串上搜寻多个匹配模式时，这可能非常有用。</p><p>有两种先行断言：正向先行断言（positive lookahead）和负向先行断言（negative lookahead）。</p><p>正向先行断言会查看并确保搜索匹配模式中的元素存在，但实际上并不匹配。 正向先行断言的用法是 <code>(?=...)</code>，其中 <code>...</code> 就是需要存在但不会被匹配的部分。</p><p>另一方面，负向先行断言会查看并确保搜索匹配模式中的元素不存在。 负向先行断言的用法是 <code>(?!...)</code>，其中 <code>...</code> 是希望不存在的匹配模式。 如果负向先行断言部分不存在，将返回匹配模式的其余部分。</p><p>先行断言的更实际用途是检查一个字符串中的两个或更多匹配模式。 这里有一个简单的密码检查器，密码规则是 3 到 6 个字符且至少包含一个数字：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> password = <span class="string">&quot;abc123&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> checkPass = <span class="regexp">/(?=\w&#123;3,6&#125;)(?=\D*\d)/</span>;</span><br><span class="line">checkPass.<span class="title function_">test</span>(password);</span><br></pre></td></tr></table></figure><p>有时候我们想使用正则表达式里的括号 <code>()</code> 来检查字符组。</p><p>如果想在字符串找到 <code>Penguin</code> 或 <code>Pumpkin</code>，可以用这个正则表达式：<code>/P(engu|umpk)in/g</code>。然后使用 <code>test()</code> 方法检查 test 字符串里面是否包含字符组。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> testStr = <span class="string">&quot;Pumpkin&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> testRegex = <span class="regexp">/P(engu|umpk)in/</span>;    </span><br><span class="line">testRegex.<span class="title function_">test</span>(testStr);    <span class="comment">// true</span></span><br></pre></td></tr></table></figure><p>捕获组可以用于找到重复的子字符串。捕获组是通过把要捕获的正则表达式放在括号中来构建的。</p><p>例子：捕获一个包含字母数字字符的词，所以捕获组是将 <code>\w+</code> 放在括号中：<code>/(\w+)/</code>。</p><p>分组匹配的子字符串被保存到一个临时的“变量”， 可以使用同一正则表达式和反斜线及捕获组的编号来访问它（例如：<code>\1</code>）。 捕获组按其开头括号的位置自动编号（从左到右），从 1 开始。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 匹配被空格隔开的两个相同单词</span></span><br><span class="line"><span class="keyword">let</span> repeatRegex = <span class="regexp">/(\w+) \1 \1/</span>;</span><br><span class="line">repeatRegex.<span class="title function_">test</span>(repeatStr); <span class="comment">// Returns true</span></span><br><span class="line">repeatStr.<span class="title function_">match</span>(repeatRegex); <span class="comment">// Returns [&quot;row row row&quot;, &quot;row&quot;]</span></span><br></pre></td></tr></table></figure><p>搜索功能是很有用的。 但是，当搜索同时也执行更改（或替换）匹配文本的操作时，搜索功能就会显得更加强大。</p><p>可以在字符串上使用 <code>.replace()</code> 方法来搜索并替换字符串中的文本。 <code>.replace()</code> 的输入首先是想要搜索的正则表达式匹配模式。 第二个参数是用于替换匹配的字符串或用于执行某些操作的函数。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> wrongText = <span class="string">&quot;The sky is silver.&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> silverRegex = <span class="regexp">/silver/</span>;</span><br><span class="line">wrongText.<span class="title function_">replace</span>(silverRegex, <span class="string">&quot;blue&quot;</span>);  <span class="comment">// 返回 The sky is blue.</span></span><br></pre></td></tr></table></figure><p>还可以使用美元符号（<code>$</code>）访问替换字符串中的捕获组。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;Code Camp&quot;</span>.<span class="title function_">replace</span>(<span class="regexp">/(\w+)\s(\w+)/</span>, <span class="string">&#x27;$2 $1&#x27;</span>);  <span class="comment">// 返回字符串 Camp Code</span></span><br></pre></td></tr></table></figure><p>有时字符串周围存在的空白字符并不是必需的。 字符串的典型处理是删除字符串开头和结尾处的空格。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> hello = <span class="string">&quot;   Hello, World!  &quot;</span>;</span><br><span class="line"><span class="keyword">let</span> wsRegex = <span class="regexp">/^\s+|\s+$/g</span>; </span><br><span class="line"><span class="keyword">let</span> result = hello.<span class="title function_">replace</span>(wsRegex, <span class="string">&quot;&quot;</span>);</span><br></pre></td></tr></table></figure><p>在 JavaScript 中 <code>String.prototype.trim()</code> 方法也可以实现同样的效果。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;freeCodeCamp JavaScript 算法和数据结构第三章。正则表达式，常常缩写为 “regex” 或 “regexp”，是帮助程序员匹配、搜索和替换文本的模式。正则表达式非常强大，但可能难以阅读，因为它们使用特殊字符来做更复杂更灵活的匹配。在正则表达式的课程中，学习如何使用特殊字符、捕获组、正向或负向先行断言以及其他技巧来匹配你想要的文本。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Web前端" scheme="http://blog.zhuangzhihao.top/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="JavaScript" scheme="http://blog.zhuangzhihao.top/tags/JavaScript/"/>
    
  </entry>
  
</feed>
